[{"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js":"1","/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js":"2","/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js":"3","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js":"4","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js":"5","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js":"6","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js":"7","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js":"8","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js":"9","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js":"10","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js":"11","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js":"12","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js":"13","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js":"14","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js":"15","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js":"16","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js":"17","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AdminImage/AdminImage.component.js":"18","/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js":"19","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js":"20","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js":"21","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js":"22","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js":"23","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js":"24","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js":"25","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js":"26","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js":"27","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js":"28","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js":"29","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js":"30","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js":"31","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js":"32","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js":"33","/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js":"34","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js":"35","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js":"36","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js":"37","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js":"38","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js":"39","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js":"40","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js":"41","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js":"42","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js":"43","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js":"44","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js":"45","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js":"46","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js":"47","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js":"48","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js":"49","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js":"50","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js":"51","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js":"52","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js":"53","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js":"54","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js":"55","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js":"56","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js":"57","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js":"58","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js":"59","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareImg.component.js":"60","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js":"61","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js":"62","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js":"63","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js":"64","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js":"65","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js":"66","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js":"67","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js":"68","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js":"69","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js":"70","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js":"71","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js":"72","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js":"73","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js":"74","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js":"75","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js":"76","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js":"77","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js":"78","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js":"79","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js":"80","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js":"81","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js":"82","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js":"83","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js":"84","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js":"85","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js":"86","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js":"87","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js":"88","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js":"89","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js":"90","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js":"91","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js":"92","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js":"93","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js":"94","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js":"95","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js":"96","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js":"97","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js":"98","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js":"99","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js":"100","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js":"101","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js":"102","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js":"103","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js":"104","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js":"105","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js":"106","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/OrdersSuper/Order.section.js":"107","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SOrdersTable/OrderTable.component.js":"108","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserDetails/UserDetails.component.js":"109","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderDetails/OrderDetails.component.js":"110","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/UserProfile/UserProfile.section.js":"111","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserImage/UserImage.component.js":"112","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPastry/EditPastry.section.js":"113","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryFilter/PastryFilter.section.js":"114","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderFilter/OrderFilter.section.js":"115","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AImage/AImage.component.js":"116","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPassword/EditPassword.section.js":"117","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerProfile/BakerProfile.section.js":"118","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js":"119","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserNav/UserNav.component.js":"120","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCardV2/PastryCard.component.js":"121","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetailV2/PastryDetail.component.js":"122","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCartV2/PastryCart.component.js":"123"},{"size":512,"mtime":1616967156312,"results":"124","hashOfConfig":"125"},{"size":507,"mtime":1616967251902,"results":"126","hashOfConfig":"125"},{"size":362,"mtime":1606471040948,"results":"127","hashOfConfig":"125"},{"size":9803,"mtime":1618954255383,"results":"128","hashOfConfig":"125"},{"size":7339,"mtime":1618778567215,"results":"129","hashOfConfig":"125"},{"size":1129,"mtime":1618778653441,"results":"130","hashOfConfig":"125"},{"size":334,"mtime":1616967155352,"results":"131","hashOfConfig":"125"},{"size":359,"mtime":1616967155320,"results":"132","hashOfConfig":"125"},{"size":316,"mtime":1616967155296,"results":"133","hashOfConfig":"125"},{"size":374,"mtime":1616967155260,"results":"134","hashOfConfig":"125"},{"size":332,"mtime":1616967155288,"results":"135","hashOfConfig":"125"},{"size":498,"mtime":1616967155344,"results":"136","hashOfConfig":"137"},{"size":4351,"mtime":1618778623784,"results":"138","hashOfConfig":"137"},{"size":7330,"mtime":1618778676149,"results":"139","hashOfConfig":"137"},{"size":291,"mtime":1616967155132,"results":"140","hashOfConfig":"137"},{"size":295,"mtime":1616967155152,"results":"141","hashOfConfig":"137"},{"size":10235,"mtime":1618778602132,"results":"142","hashOfConfig":"137"},{"size":4348,"mtime":1618778523438,"results":"143","hashOfConfig":"137"},{"size":870,"mtime":1617999706354,"results":"144","hashOfConfig":"125"},{"size":266,"mtime":1616967156432,"results":"145","hashOfConfig":"125"},{"size":367,"mtime":1616967156432,"results":"146","hashOfConfig":"125"},{"size":923,"mtime":1617400868498,"results":"147","hashOfConfig":"125"},{"size":346,"mtime":1616967156292,"results":"148","hashOfConfig":"125"},{"size":645,"mtime":1617470251822,"results":"149","hashOfConfig":"125"},{"size":476,"mtime":1617470138686,"results":"150","hashOfConfig":"125"},{"size":435,"mtime":1616967156192,"results":"151","hashOfConfig":"125"},{"size":4696,"mtime":1616967156192,"results":"152","hashOfConfig":"125"},{"size":5534,"mtime":1617912940139,"results":"153","hashOfConfig":"125"},{"size":1964,"mtime":1618008013758,"results":"154","hashOfConfig":"125"},{"size":577,"mtime":1618861469018,"results":"155","hashOfConfig":"125"},{"size":1088,"mtime":1619036724466,"results":"156","hashOfConfig":"125"},{"size":4223,"mtime":1619204491702,"results":"157","hashOfConfig":"125"},{"size":2052,"mtime":1617914337096,"results":"158","hashOfConfig":"125"},{"size":2141,"mtime":1618778463605,"results":"159","hashOfConfig":"125"},{"size":433,"mtime":1618847326554,"results":"160","hashOfConfig":"125"},{"size":356,"mtime":1616967155512,"results":"161","hashOfConfig":"125"},{"size":255,"mtime":1616967155456,"results":"162","hashOfConfig":"125"},{"size":386,"mtime":1616967155528,"results":"163","hashOfConfig":"125"},{"size":2283,"mtime":1619128632891,"results":"164","hashOfConfig":"125"},{"size":262,"mtime":1618937873487,"results":"165","hashOfConfig":"125"},{"size":1631,"mtime":1618788627043,"results":"166","hashOfConfig":"125"},{"size":183,"mtime":1616967155796,"results":"167","hashOfConfig":"125"},{"size":1123,"mtime":1618938663734,"results":"168","hashOfConfig":"125"},{"size":734,"mtime":1618778868082,"results":"169","hashOfConfig":"125"},{"size":8680,"mtime":1618954775107,"results":"170","hashOfConfig":"125"},{"size":491,"mtime":1616967155356,"results":"171","hashOfConfig":"125"},{"size":549,"mtime":1616967155724,"results":"172","hashOfConfig":"125"},{"size":1429,"mtime":1616967155360,"results":"173","hashOfConfig":"125"},{"size":7445,"mtime":1618778842389,"results":"174","hashOfConfig":"125"},{"size":986,"mtime":1616967155440,"results":"175","hashOfConfig":"137"},{"size":586,"mtime":1616967155396,"results":"176","hashOfConfig":"137"},{"size":970,"mtime":1616967155424,"results":"177","hashOfConfig":"125"},{"size":1164,"mtime":1616967155444,"results":"178","hashOfConfig":"137"},{"size":3960,"mtime":1618778943188,"results":"179","hashOfConfig":"137"},{"size":6493,"mtime":1618778963344,"results":"180","hashOfConfig":"137"},{"size":4979,"mtime":1618786070560,"results":"181","hashOfConfig":"137"},{"size":736,"mtime":1616967155812,"results":"182","hashOfConfig":"137"},{"size":2390,"mtime":1618786053028,"results":"183","hashOfConfig":"137"},{"size":699,"mtime":1616967155828,"results":"184","hashOfConfig":"137"},{"size":971,"mtime":1616967155812,"results":"185","hashOfConfig":"137"},{"size":13147,"mtime":1618776059273,"results":"186","hashOfConfig":"137"},{"size":11092,"mtime":1618776026436,"results":"187","hashOfConfig":"137"},{"size":709,"mtime":1616967155488,"results":"188","hashOfConfig":"137"},{"size":4540,"mtime":1618850794195,"results":"189","hashOfConfig":"125"},{"size":5400,"mtime":1618778753623,"results":"190","hashOfConfig":"137"},{"size":1092,"mtime":1616967155996,"results":"191","hashOfConfig":"137"},{"size":799,"mtime":1618852805880,"results":"192","hashOfConfig":"125"},{"size":2664,"mtime":1617136724183,"results":"193","hashOfConfig":"125"},{"size":8410,"mtime":1618000505815,"results":"194","hashOfConfig":"125"},{"size":3690,"mtime":1618863798273,"results":"195","hashOfConfig":"125"},{"size":9421,"mtime":1617111437233,"results":"196","hashOfConfig":"125"},{"size":3347,"mtime":1618935602143,"results":"197","hashOfConfig":"125"},{"size":2417,"mtime":1618932156799,"results":"198","hashOfConfig":"125"},{"size":127,"mtime":1616967158152,"results":"199","hashOfConfig":"137"},{"size":2177,"mtime":1618857957080,"results":"200","hashOfConfig":"125"},{"size":1063,"mtime":1616967157828,"results":"201","hashOfConfig":"125"},{"size":1980,"mtime":1616967157588,"results":"202","hashOfConfig":"125"},{"size":7933,"mtime":1619211917430,"results":"203","hashOfConfig":"125"},{"size":2081,"mtime":1616967157820,"results":"204","hashOfConfig":"125"},{"size":486,"mtime":1616967157916,"results":"205","hashOfConfig":"125"},{"size":6446,"mtime":1617917508666,"results":"206","hashOfConfig":"125"},{"size":626,"mtime":1619203393605,"results":"207","hashOfConfig":"125"},{"size":5246,"mtime":1617917497362,"results":"208","hashOfConfig":"125"},{"size":5162,"mtime":1617917409821,"results":"209","hashOfConfig":"125"},{"size":5922,"mtime":1617991040276,"results":"210","hashOfConfig":"125"},{"size":6067,"mtime":1618074585260,"results":"211","hashOfConfig":"125"},{"size":8885,"mtime":1618073902964,"results":"212","hashOfConfig":"125"},{"size":5531,"mtime":1618002929973,"results":"213","hashOfConfig":"125"},{"size":6750,"mtime":1616967157792,"results":"214","hashOfConfig":"125"},{"size":10214,"mtime":1617474346087,"results":"215","hashOfConfig":"125"},{"size":151,"mtime":1616967156392,"results":"216","hashOfConfig":"137"},{"size":362,"mtime":1617915415275,"results":"217","hashOfConfig":"137"},{"size":416,"mtime":1617470148494,"results":"218","hashOfConfig":"125"},{"size":121,"mtime":1619213218839,"results":"219","hashOfConfig":"125"},{"size":291,"mtime":1616967158360,"results":"220","hashOfConfig":"125"},{"size":2329,"mtime":1617201290462,"results":"221","hashOfConfig":"137"},{"size":640,"mtime":1619201095388,"results":"222","hashOfConfig":"137"},{"size":640,"mtime":1617400812380,"results":"223","hashOfConfig":"137"},{"size":2299,"mtime":1616967157928,"results":"224","hashOfConfig":"137"},{"size":2762,"mtime":1616967157836,"results":"225","hashOfConfig":"137"},{"size":781,"mtime":1617482433168,"results":"226","hashOfConfig":"137"},{"size":973,"mtime":1617991334710,"results":"227","hashOfConfig":"137"},{"size":805,"mtime":1617918247302,"results":"228","hashOfConfig":"137"},{"size":639,"mtime":1616967158068,"results":"229","hashOfConfig":"137"},{"size":4619,"mtime":1619204769264,"results":"230","hashOfConfig":"137"},{"size":3950,"mtime":1617996649084,"results":"231","hashOfConfig":"137"},{"size":5869,"mtime":1617917423821,"results":"232","hashOfConfig":"125"},{"size":2801,"mtime":1618778895943,"results":"233","hashOfConfig":"137"},{"size":7333,"mtime":1618778914471,"results":"234","hashOfConfig":"137"},{"size":6784,"mtime":1618775701836,"results":"235","hashOfConfig":"137"},{"size":10750,"mtime":1619210202562,"results":"236","hashOfConfig":"125"},{"size":4235,"mtime":1618778929015,"results":"237","hashOfConfig":"137"},{"size":10817,"mtime":1617302799035,"results":"238","hashOfConfig":"125"},{"size":2090,"mtime":1617995129191,"results":"239","hashOfConfig":"137"},{"size":2317,"mtime":1617918733035,"results":"240","hashOfConfig":"137"},{"size":4021,"mtime":1618778537450,"results":"241","hashOfConfig":"137"},{"size":6402,"mtime":1617914162769,"results":"242","hashOfConfig":"125"},{"size":16106,"mtime":1618779778721,"results":"243","hashOfConfig":"125"},{"size":7519,"mtime":1618779078595,"results":"244","hashOfConfig":"125"},{"size":1882,"mtime":1619128878005,"results":"245","hashOfConfig":"137"},{"size":6985,"mtime":1619203436390,"results":"246","hashOfConfig":"137"},{"size":13142,"mtime":1619203209749,"results":"247","hashOfConfig":"137"},{"size":11421,"mtime":1619204461102,"results":"248","hashOfConfig":"137"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lu9gts",{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"274"},"njy6to",{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"274"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"274"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"274"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"274"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"274"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"274"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"274"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"274"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"274"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"274"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"274"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"274"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"274"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"274"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"274"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"274"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"274"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"274"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"274"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"274"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"274"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"274"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"274"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"274"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"274"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"274"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"274"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"274"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"274"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"274"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"274"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"274"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"274"},"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js",["531"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js",["532","533","534","535"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js",["536","537","538"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js",["539"],"import React from 'react';\n\nimport styles from './CircleProgess.module.css';\n\nconst CircleProgess = () => {\n    return (\n         <div class=\"pie-wrapper progress-45 style-2\">\n            <span class=\"label\">45<span class=\"smaller\">%</span></span>\n            <div class=\"pie\">\n            <div class=\"left-side half-circle\"></div>\n            <div class=\"right-side half-circle\"></div>\n            </div>\n            <div class=\"shadow\"></div>\n        </div>\n    )\n}\n\nexport default CircleProgess;",["540","541"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js",["542","543"],"import React, { useState } from 'react';\nimport { IoThumbsDownSharp, IoThumbsUpSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\n\nimport { cups2, HLogo } from '../../res/img';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './BakerInfo.module.css';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { BakerDetails, Notification } from '../';\n\nconst BakerInfo = (props) => {\n    const { token, baker, setRbakers, user } = props;\n    const [detail, setDetail] = useState(false);\n    const [_baker, setBaker] = useState([]);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const ShowDetails = (baker) => {\n        setDetail(true);\n        setBaker(baker);\n    }\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/baker/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setRbakers(true);\n            }\n\n        })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n    }\n\n    return (\n        <div className={styles.bakerCard}> \n            <div className={styles.bakerInfo}>\n                <img src={baker.companyImage ? `${BASE_URL}/${baker.companyImage}` : HLogo} alt=\"Baker name\" className={styles.bakerImg} />\n                <div className={styles.bakerId}>\n                    <h2 className={styles.bakerTitle}>{baker.name}</h2>\n                    <b className={styles.bakerSubTitle}>{baker.companyName}</b>\n                </div>\n                {user.type === 'Admin' &&<button className={styles.bakerButton} onClick={() => ShowDetails(baker)}>Details</button>}\n            </div>\n            <div className={styles.bakerStats}>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{baker.orders.ordered.length}</h2>\n                    <b className={styles.bakerSubTitle}>Orders</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{baker.followers.users.length}</h2>\n                    <b className={styles.bakerSubTitle}>Followers</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{baker.categories.length}</h2>\n                    <b className={styles.bakerSubTitle}>Categories</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{Thousand(baker.total)}</h2>\n                    <b className={styles.bakerSubTitle}>Earned</b>\n                </div>\n            </div>\n            <div className={styles.bakerFooter}>\n                {/* <NavLink to=\"#\" className={styles.bakerMsg}><IoMail className={styles.bakerIcon} /> MESSAGE</NavLink> */}\n                <div className={styles.bakerRating}>\n                    <b className={styles.bakerRatingVal}><IoThumbsUpSharp className={styles.bakerRatingIcon} /> {baker.likes.users.length}</b>\n                    <b className={styles.bakerRatingVal}><IoThumbsDownSharp className={styles.bakerRatingIcon} /> {baker.dislikes.users.length}</b>\n                </div>\n                {user.type === 'Admin' && <button className={styles.bakerBtn} onClick={() => Suspend(baker._id)}>{baker.suspend ? 'Unsuspend' : 'Suspend'}</button>}\n            </div>\n            <BakerDetails detail={detail} setDetail={setDetail} baker={_baker} />\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        token: auth.token,\n        refresh: refresh.refresh,\n        user: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(BakerInfo);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js",["544","545","546","547"],"import React, { useEffect, useState } from 'react';\nimport {IoTrashBinSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification, Verification } from '..';\nimport { HLogo } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './BakerTable.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst BakerTable = (props) => { \n    const {bakers, token, refresh, setDetail, setBaker} = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [verify, setVerify] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, []);\n\n    const ShowDetails = (baker) => {\n        setBaker(baker);\n        setDetail(true);\n    }\n\n    const Delete = (data) => {\n        setVerify(true);\n        setMessage({\n            type: 'danger',\n            data: data,\n            title: 'Deletion imminent',\n            message: `Are you sure you want to delete company ${data.companyName}. They might have pending orders.`\n        })\n    }\n\n    const DeleteAuth = (id) => {\n        fetch(`${BASE_URL}/baker/delete/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            props.setRefresh(true);\n\n            if (statusCode === 200) {\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n                setTimeout(() => {\n                    setVerify(false);\n                }, 2000)\n            }\n\n        })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                })\n        })\n    }\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/baker/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            props.setRefresh(true);\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n            }\n\n        })\n            .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    const Verify = (id) => {\n        fetch(`${BASE_URL}/baker/verify/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            props.setRefresh(true);\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n            }\n\n        })\n            .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    return (\n        <>\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Name</td>\n                        <td className={styles.cartTableHeaderData}>Company</td>\n                        <td className={styles.cartTableHeaderData}>Categories</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Verified</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {bakers.map((baker, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={baker.companyImage ? `${BASE_URL}/${baker.companyImage}` : HLogo} alt=\"Pastry Name\" className={styles.cartTableDataImage} />\n                                <b>{baker.name}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{baker.companyName}</td>\n                            <td className={styles.cartTableData}>{baker.categories.length}</td>\n                            <td className={styles.cartTableData}>{baker.suspend ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>{baker.verify ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.suspend].join(' ')} onClick={() => Suspend(baker._id)}>{baker.suspend ? 'Unsuspend' : 'Suspend'}</button>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => Verify(baker._id)}>{baker.verify ? 'Unverify' : 'Verify'}</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => ShowDetails(baker)}>Details</button>\n                                <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => Delete(baker)}><IoTrashBinSharp /></button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n            <Verification verify={verify} setVerify={setVerify} message={message} onClick={(id) => DeleteAuth(id)} />\n        </>\n    )\n}\n\nconst mapStateToProps = ({auth, refresh}) => {\n    return {\n        refresh: refresh.refresh,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js",["548"],"import React from 'react';\n\nimport styles from './Activity.module.css'\n\nconst Activity = (props) => {\n    const {size} = props;\n\n    return <div className={styles.spinner}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n}\n\nexport default Activity;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js",["549","550","551"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoPeople, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './BakerDetails.module.css';\nimport { HLogo, HouseLogo, vals3 } from '../../res/img';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst BakerDetails = (props) => {\n    const { detail, setDetail, baker, user, refresh } = props;\n\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [followers, setFollowers] = useState(0);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        if (baker.length !== 0) {\n            setLikes(baker.likes.users.length);\n            setDislikes(baker.dislikes.users.length);\n            setFollowers(baker.followers.users.length);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setFollowers(0);\n        }\n    }, [detail]);\n\n    useEffect(() => {\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setFollowers(0);\n        }\n    }, []);\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    const Close = () => {\n        setDetail(false);\n    };\n\n\n    const disLikeBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likeBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log('response')\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const followBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to follow ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/follow/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                if (statusCode === 200) {\n                    setFollowers(response.followers.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log('response')\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const bakerShop = (bakerId) => {\n        props.setBaker(bakerId);\n        props.history.push({pathname: '/user/shop/pastries'})\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(event) => stopClose(event)}>\n                {baker.length !== 0 && \n                    <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.bakerContainer}>\n                        <div className={styles.pastryContainer}>\n                            <div className={styles.pastryDiscount} onClick={() => followBaker(baker._id || '')}><IoPeople className={styles.icon} /> Followers: {Thousand(followers)}</div>\n                            <img src={baker.ceoImage ? `${BASE_URL}/${baker.ceoImage}` : HouseLogo} alt={baker.price} className={styles.pastryImage} />\n                            <div className={styles.pastryPrice}><img src={baker.companyImage ? `${BASE_URL}/${baker.companyImage}` : HLogo} alt=\"Product\" className={styles.bakerListImgLogo}/></div>\n                            <div className={styles.pastryLikes} onClick={() => likeBaker(baker._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikeBaker(baker._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        <div className={styles.bakerDetails}>\n                            <h1 className={styles.bakerCompany}>{baker.companyName}</h1>\n                            <div className={styles.bakerDetailsScroll}>\n                                <b className={styles.bakerCEO}>CEO: <span className={styles.info}>{baker.name}</span></b>\n                                <h2 className={styles.subTitle}>Categories</h2>\n                                <ol className={styles.bakerCategories}>\n                                    {baker.categories.map((category, index) => <li>{category}</li>)}\n                                </ol>\n                                {user.type === ('Admin') &&\n                                    <>\n                                        <h2 className={styles.smallDetails}>Email: <span className={styles.info}>{baker.email}</span></h2>\n                                        <h2 className={styles.smallDetails}>Telephone: <span className={styles.info}>{baker.telNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>ID No: <span className={styles.info}>{baker.idCardNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>Location: <span className={styles.info}>{baker.location}</span></h2>\n                                        <h2 className={styles.smallDetails}>MoMO Number: <span className={styles.info}>{baker.momp}</span></h2>\n                                        <h2 className={styles.smallDetails}>MOMO Name : <span className={styles.info}>{baker.momoName}</span></h2>\n                                    </>\n                                }\n                                <h2 className={styles.subTitle}>About</h2>\n                                <b className={styles.bakerAbout}>{baker.about || 'empty'}</b>\n                            </div>\n                            <div className={styles.actions}>\n                                {user.type !== 'Baker' && user.type !== 'Admin' && <Button title='Shop' onClick={() => bakerShop(baker._id)} />}\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker, setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AdminImage/AdminImage.component.js",["552"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AdminImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HLogo, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst AdminImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [logo, setLogo] = useState('');\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState(false);\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    const Save = (id) => {\n        const formData = new FormData();\n        formData.append('image', image[0]);\n        formData.append('logo', logo[0]);\n\n        fetch(`${BASE_URL}/baker/images/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setShow(true);\n                props.setUser(response.baker);\n                setMessage({\n                    type: 'success',\n                    message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                    title: 'Success'\n                });\n                setTimeout(() => {\n                    setIsOpen(false);\n                 }, 2000);\n            }\n\n            if (statusCode === 500) {\n                console.log('error');\n                setIsOpen(false);\n            }\n        })\n        .catch(err => {\n            setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n    }\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.ceoImage ? `${BASE_URL}/${user.ceoImage}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                        <img src={logo ? URL.createObjectURL(logo[0]) : user.companyImage ? `${BASE_URL}/${user.companyImage}` : HLogo} alt={'Username'} className={styles.profileLogo} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <SquareImage\n                        label={'Upload Logo'}\n                        type='file'\n                        setValue={event => setLogo(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js",["553"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js",["554","555","556"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js",["557"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js",["558","559","560"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js",["561"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js",["562","563"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js",["564","565","566"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js",["567"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js",["568"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js",["569"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js",["570","571","572","573","574","575","576","577"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js",["578","579","580"],"import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst TextArea = (props) => {\n    const {placeholder, label, value, setValue, len, type, error, setError} = props;\n    return (\n        <div className={styles.formGroup2}>\n            <textarea \n                type={type}\n                className={[\n                    styles.formInput,\n                    len === 1 ?  \n                    styles.formLength1 :\n                    len === 2 ?\n                    styles.formLength2 :\n                    len === 3 ?\n                    styles.formLength3 :\n                    len === 4 ?\n                    styles.formLength4 :\n                    styles.formLength5\n                ].join(' ')} \n                name=\"name\" id={label} \n                placeholder={placeholder} \n                onChange={setValue}></textarea>\n            {/* <label for=\"Name\" className={styles.formLabel}>{label}</label> */}\n        </div>\n    )\n}\n\nexport default TextArea;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js",["581","582","583"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js",["584","585"],"import React, { useState } from 'react';\nimport { IoThumbsDownSharp, IoThumbsUpSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { UserDetails } from '..';\n\nimport { cups2, HLogo } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { HNumber, Thousand } from '../../utils/utilities';\nimport styles from './UserInfo.module.css';\n\nconst UserInfo = (props) => {\n    const { user, token, setRusers, User } = props;\n    const [_user, setUser] = useState([]);\n    const [detail, setDetail] = useState(false);\n\n    const ShowDetail = (user) => {\n        setUser(user);\n        setDetail(true);\n    };\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/user/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n\n                if (statusCode === 200) {\n                    setRusers(true);\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    \n    return (\n        <div className={styles.bakerCard}> \n            <div className={styles.bakerInfo}>\n                <img src={user.image ? `${BASE_URL}/${user.image}` : HLogo} alt=\"Baker name\" className={styles.bakerImg} />\n                <div className={styles.bakerId}>\n                    <h2 className={styles.bakerTitle}>{user.name.substr(0, 12)}</h2>\n                    <b className={styles.bakerSubTitle}>{HNumber(user.telNumber)}</b>\n                </div>\n                {User.type === 'Admin' && <button className={styles.bakerButton} onClick={() => ShowDetail(user)}>Details</button>}\n            </div>\n            <div className={styles.bakerStats}>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{user.orders.ordered.length}</h2>\n                    <b className={styles.bakerSubTitle}>Orders</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>10</h2>\n                    <b className={styles.bakerSubTitle}>Ordered</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>5</h2>\n                    <b className={styles.bakerSubTitle}>Categories</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{Thousand(user.total)}</h2>\n                    <b className={styles.bakerSubTitle}>Spent</b>\n                </div>\n            </div>\n            <div className={styles.bakerFooter}>\n                {/* <NavLink to=\"#\" className={styles.bakerMsg}><IoMail className={styles.bakerIcon} /> MESSAGE</NavLink> */}\n                <div className={styles.bakerRating}>\n                    <b className={styles.bakerRatingVal}><IoThumbsUpSharp className={styles.bakerRatingIcon} /> {user.likes.users.length}</b>\n                    <b className={styles.bakerRatingVal}><IoThumbsDownSharp className={styles.bakerRatingIcon} /> {user.dislikes.users.length}</b>\n                </div>\n                {User.type === 'Admin' && <button className={styles.bakerBtn} onClick={() => Suspend(user._id)}>{user.suspend ? 'Unsuspend' : 'Suspend'}</button>}\n            </div>\n            <UserDetails detail={detail} setDetail={setDetail} _user={_user} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        token: auth.token,\n        refresh: refresh.refresh,\n        User: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(UserInfo);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js",["586","587","588"],"import React, { useEffect, useState } from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification, Verification } from '..';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { HLogo, pans2 } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { HNumber } from '../../utils/utilities';\nimport styles from './UserTable.module.css';\n\nconst UserTable = (props) => {\n    const { users, token, setDetail, setUser, refresh } = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [verify, setVerify] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        return () => {\n            setVerify(false);\n            setMessage({});\n            setShow(false);\n            setLoading(false);\n        }\n    }, []);\n\n    const ShowDetail = (user) => {\n        setUser(user);\n        setDetail(true);\n    };\n    \n    const Delete = (data) => {\n        setVerify(true);\n        setMessage({\n            type: 'danger',\n            data: data,\n            title: 'Deletion imminent',\n            message: `Are you sure you want to delete user ${data.name}. They might have pending orders.`\n        })\n    }\n\n\n    const DeleteAuth = (id) => {\n        fetch(`${BASE_URL}/user/delete/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n\n                if (statusCode === 200) {\n                    props.setRefresh(true);\n                    setMessage({\n                        type: 'success',\n                        title: 'Success',\n                        message: response.message,\n                    })\n\n                    setTimeout(() => {\n                        setVerify(false);\n                    }, 2000)\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                })\n            })\n    }\n\n    const Suspend = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n\n                if (statusCode === 200) {\n                    setLoading(false);\n                    props.setRefresh(true);\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        title: 'Success',\n                        message: response.message,\n                    })\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setLoading(false);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                })\n            })\n    }\n\n    return (\n        <>\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Name</td>\n                        <td className={styles.cartTableHeaderData}>Telephone</td>\n                        <td className={styles.cartTableHeaderData}>Ordered</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n\n                    {users.map((user, index) =>\n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={user.image ? `${BASE_URL}/${user.image}` : HLogo} alt={user.name} className={styles.cartTableDataImage} />\n                                <b>{user.name.substr(0, 20)}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{HNumber(user.telNumber)}</td>\n                            <td className={styles.cartTableData}>{user.orders.ordered.length || 0}</td>\n                            <td className={styles.cartTableData}>{user.suspend ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.suspend].join(' ')} onClick={() => Suspend(user._id)}>{user.suspend ? 'Unsuspend' : 'Suspend'}</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => ShowDetail(user)}>Details</button>\n                                <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => Delete(user)}><IoTrashBinSharp /></button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n            <Verification verify={verify} setVerify={setVerify} message={message} onClick={(id) => DeleteAuth(id)} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js",["589","590","591"],"import React, { useEffect, useState } from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { HouseLogo } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './PastryTable.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { Thousand } from '../../utils/utilities';\nimport { Notification, Verification } from '..';\n\nconst PastryTable = (props) => { \n\n    const { pastries, token, setDetail, refresh, setPastry, user } = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [verify, setVerify] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        return () => {\n            setVerify(false);\n            setMessage({});\n            setShow(false);\n            setLoading(false);\n        }\n    }, []);\n\n    const ShowDetail = (pastry) => {\n        setDetail(true);\n        setPastry(pastry);\n    }\n\n        const Delete = (data) => {\n        setVerify(true);\n        setMessage({\n            type: 'danger',\n            data: data,\n            title: 'Deletion imminent',\n            message: `Are you sure you want to delete pastry ${data.name}. Users might have it in their cart.`\n        })\n    }\n\n\n    const DeleteAuth = (id) => {\n        fetch(`${BASE_URL}/pastry/delete/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n\n                if (statusCode === 200) {\n                    props.setRefresh(true);\n                    setMessage({\n                        type: 'success',\n                        title: 'Success',\n                        message: response.message,\n                    })\n\n                    setTimeout(() => {\n                        setVerify(false);\n                    }, 2000)\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                })\n            })\n    }\n    \n    return (\n        <>\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Name</td>\n                        <td className={styles.cartTableHeaderData}>Category</td>\n                        <td className={styles.cartTableHeaderData}>Price</td>\n                        <td className={styles.cartTableHeaderData}>Discount</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {pastries.map((pastry, index) => (<tr className={styles.cartTableRow}>\n                        <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                            <img src={pastry.image ? `${BASE_URL}/${pastry.image}` : HouseLogo} alt={pastry.name} className={styles.cartTableDataImage} />\n                            <b>{pastry.name}</b>\n                        </td>\n                        <td className={styles.cartTableData}>{pastry.type}</td>\n                        <td className={styles.cartTableData}>{Thousand(pastry.price)}</td>\n                        <td className={styles.cartTableData}>{pastry.discount}%</td>\n                        <td className={styles.cartTableData}>\n                            <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => ShowDetail(pastry)}>Details</button>\n                            <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => Delete(pastry)}><IoTrashBinSharp /></button>\n                        </td>\n                    </tr>))}\n                </table>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n            <Verification verify={verify} setVerify={setVerify} message={message} onClick={(id) => DeleteAuth(id)} />\n        </>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js",["592"],"import React from 'react';\n\nimport styles from './SquareInput.module.css';\n\nconst SquareInput = (props) => {\n    const {\n        label, \n        placeholder, \n        type, \n        value, \n        setValue, \n        error, \n        setError,\n        name,\n    } = props;\n    return (\n        <div className={styles.inputContainer}>\n            <label className={styles.inputLabel}>{label}</label>\n            <input\n                className={[styles.inputField, error && styles.inputInvalid].join(' ')}\n                placeholder={placeholder}\n                type={type}\n                name={name}\n                value={value}\n                onChange={setValue}\n            />\n        </div>\n    )\n}\n\nexport default SquareInput;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js",["593"],"import React from 'react'\n\nimport styles from './SquareInput.module.css';\n\nconst SquareArea = (props) => {\n    const {\n        label, \n        placeholder,\n        value, \n        setValue, \n        error, \n        setError\n    } = props;\n    return (\n        <div className={styles.inputContainer}>\n            <label className={styles.inputLabel}>{label}</label>\n            <textarea \n                className={[styles.inputField, error && styles.inputInvalid].join(' ')} \n                placeholder={placeholder} \n                rows={5}\n                value={value}\n                onChange={setValue}\n            >\n            </textarea>\n        </div>\n    )\n}\n\nexport default SquareArea;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareImg.component.js",["594","595","596","597","598"],"import React, { useEffect, useState } from 'react'\n\nimport styles from './SquareInput.module.css';\n\nconst SquareImage = (props) => {\n    const {\n        label,\n        type,\n        value,\n        setValue,\n        error,\n        setError,\n        name,\n    } = props;\n\n    const [image, setImage] = useState('');\n\n    const SetImage = (event) => {\n        setImage(URL.createObjectURL(event.target.files[0]));\n        setValue(event);\n    }\n\n    return (\n        <div className={styles.sqrContainer}>\n            <label className={styles.sqrImgFile} htmlFor={label}>{label}</label>\n            <input\n                type={type}\n                id={label}\n                value={value}\n                hidden\n                onChange={(event) => SetImage(event)}\n            />\n            {/* {image ? <img className={styles.sqrImg} src={image} alt={label} /> : <div className={styles.sqrImgSpc} />} */}\n            \n        </div>\n    )\n}\n\nexport default SquareImage;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js",["599","600","601","602","603","604"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryDetail.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryDetail = (props) => {\n    const {detail, setDetail, pastry, user, refresh, setIsEdit} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.likes.users.length);\n            setDislikes(pastry.dislikes.users.length);\n        }\n        setCount(0);\n\n        return () => {\n            setPastryMessage('');\n            setLoading(false);\n            setLikes(0);\n            setDislikes(0);\n            setCount(0);\n            setShow(false);\n            setMessage({});\n        }\n\n    }, [detail]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to add to cart`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setCount(count + 1);\n                if(count === 0) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastry.name} added to cart`,\n                        title: 'Success'\n                    });\n                }\n            }\n\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `${pastry.name} not added to cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const Close = () => {\n        setDetail(false);\n    }\n\n    const EditPastry = (pastry) => {\n        setIsEdit(true);\n        setDetail(false);\n    };\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}  onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.pastryContainer}>\n                    {pastry.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.discount}%</div>}\n                    <div className={styles.pastryName}>{pastry.name}</div>\n                    <img src={`${BASE_URL}/${pastry.image}`} alt={pastry.price} className={styles.pastryImage} />\n                    {user.type !== 'Baker' ?\n                        <>\n                            <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price: {Thousand(count >= 1 ? count * pastry.price : pastry.price || 0)} XAF</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry._id)}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes} onClick={() => likePastry(pastry._id)}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        </> :\n                        <>\n                            <div className={styles.pastryDislikes}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            {user.type === 'Baker' && <div className={styles.pastryEdit} onClick={() => EditPastry(pastry)}><IoBrush className={styles.icon} /> Edit</div>}\n                            <div className={styles.pastryPrice2}><IoThumbsUp className={styles.icon} /> Price: {Thousand(pastry.price || 0)} XAF</div>\n                        </>\n                    }\n                </div>\n                    {user.type !== 'Baker' && (count === 0 ? \n                        <div className={styles.notifyActions}>\n                            <button className={styles.notifyButton} onClick={() => AddToCart(pastry._id)}>Add to Cart</button>\n                        </div> :\n                        <div className={styles.notifyActions}>\n                            <button className={styles.pastryButton} onClick={() => SubFromCart(pastry._id)}><IoRemove /></button>\n                            <b className={styles.pastryQty}>Quantity: {count}</b>\n                            <button className={styles.pastryButton} onClick={() => AddToCart(pastry._id)}><IoAdd /></button>\n                        </div>\n                    )}\n                {count !== 0 && (\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry._id)}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                )}\n                <div className={styles.pastryDetails}>\n                   <h2 className={styles.pastryTitle}>Type: {pastry.type}</h2>\n                   <h2 className={styles.pastryTitle}>About</h2>\n                   <b className={styles.pastryDescription}>{pastry.description}</b>\n                   <h2 className={styles.pastryTitle}>Recipe</h2>\n                   <b className={styles.pastryDescription}>{pastry.recipe || 'Loading...'}</b>\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryDetail);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js",["605","606","607","608","609","610"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryCart.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryCart = (props) => {\n    const { detail, setDetail, pastry, user, refresh } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count + 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const Close = () => {\n        setDetail(false);\n    };\n\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.pastryId.likes.users.length);\n            setDislikes(pastry.pastryId.dislikes.users.length);\n            setPastryMessage(pastry.message);\n            setCount(pastry.quantity);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setPastryMessage('');\n            setCount(0);\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, [detail]);\n\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n               setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')}>\n                {pastry.length !== 0 && \n                <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.pastryContainer}>\n                        {pastry.pastryId.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.pastryId.discount || ''}%</div>}\n                        <div className={styles.pastryName}>{pastry.pastryId.name || ''}</div>\n                        <img src={`${BASE_URL}/${pastry.pastryId.image || ''}`} alt={pastry.price} className={styles.pastryImage} />\n                        <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price: {Thousand(count >= 1 ? count * pastry.pastryId.price : pastry.pastryId.price || 0)} XAF</div>\n                        <div className={styles.pastryLikes} onClick={() => likePastry(pastry.pastryId._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry.pastryId._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                    </div>\n                        {count === 0 ? \n                            <div className={styles.notifyActions}>\n                                <button className={styles.notifyButton} onClick={() => AddToCart(pastry.pastryId._id || '')}>Add to Cart</button>\n                            </div> :\n                            <div className={styles.notifyActions}>\n                                <button className={styles.pastryButton} onClick={() => SubFromCart(pastry.pastryId._id || '')}><IoRemove /></button>\n                                <b className={styles.pastryQty}>Quantity: {count || ''}</b>\n                                <button className={styles.pastryButton} onClick={() => AddToCart(pastry.pastryId._id || '')}><IoAdd /></button>\n                            </div>\n                        }\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" value={pastryMessage || ''} className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry.pastryId._id || '')}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                    <button className={styles.notifyButton} onClick={() => setDetail(false)}>Close</button>\n                </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryCart);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js",["611"],"import React, { useEffect } from 'react';\n\nimport styles from './Notification.module.css';\n\nconst Notification = (props) => {\n    const {message, show, setShow} = props;\n\n    useEffect(() => {\n        setTimeout(() => {\n            setShow(false);\n        }, 3000);\n    }, [show])\n\n    return (\n        <div className={[styles.notifyContainer, show ? styles.showContainer : styles.hideContainer, message.type === 'error' && styles.dangerBorder, ].join(' ')}>\n            <h2 className={[styles.notifyTitle, message.type === 'error' && styles.dangerColor].join(' ')}>{message.title}</h2>\n            <b className={styles.notifyMessage}>{message.message}</b>\n        </div>\n    )\n}\n\nexport default Notification;","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js",["612","613","614","615"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { HouseLogo, pans2 } from '../../res/img';\nimport { DateString, Thousand } from '../../utils/utilities';\nimport styles from './OrderTable.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Notification } from '..';\n\nconst OrderTable = (props) => { \n    const { orders, token, refresh, setDetail, setOrder } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n        \n        return () => {\n            setLoading(false);\n            setShow(false);\n            setMessage({});\n        }\n    }, [refresh]);\n    \n    const IncStatus = (order, total) => {\n        if (order.status !== 'On the Way' && order.status !== 'Confirmed') {\n            setLoading(true);\n            fetch(`${BASE_URL}/order/status/${order._id}?total=${total}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Basic ${token}`,\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(res => {\n                    const statusCode = res.status;\n                    const response = res.json();\n                    return Promise.all([statusCode, response]);\n                })\n                .then(res => {\n                    const statusCode = res[0];\n                    const response = res[1];\n                    setLoading(false);\n    \n                    if (statusCode === 200) {\n                        setShow(true);\n                        setMessage({\n                            title: 'Success',\n                            message: 'Order status updated.'\n                        });\n                        props.setRefresh(true);\n                    }\n    \n                })\n                .catch(err => {\n                    setLoading(false);\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: 'Please check your internet connection.',\n                    });\n                })\n        }\n    };\n\n    const OrderDetails = (order) => {\n        setOrder(order);\n        setDetail(true);\n    }\n\n\n    return (\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeaderData}>Client Name</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Status</td>\n                        <td className={styles.cartTableHeaderData}>Total</td>\n                        <td className={styles.cartTableHeaderData}>Date</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {orders.map((order, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={order.userId.image ? `${BASE_URL}/${order.userId.image}` : HouseLogo} alt={order.userId.name} className={styles.cartTableDataImage} />\n                                <b>{order.userId.name.substr(0, 20)}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{order.userId.suspend ? \"True\" : \"False\"}</td>\n                            <td className={styles.cartTableData}>{order.status}</td>\n                            <td className={styles.cartTableData}>{Thousand(order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}</td>\n                            <td className={styles.cartTableData}>{DateString(order.createdAt)}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => IncStatus(order, order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}>Inc Status</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => OrderDetails(order)}>Details</button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            <Notification setShow={setShow} show={show} message={message} />\n            </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js",["616","617"],"import React, { useEffect } from 'react';\nimport { Button } from '..';\n\nimport styles from './Verification.module.css';\n\nconst Verification = (props) => {\n    const {message, verify, setVerify, onClick} = props;\n\n    return (\n        <div className={verify ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, verify ? styles.showContainer : styles.hideContainer, message.type === 'danger' && styles.dangerBorder, ].join(' ')}>\n                <h2 className={[styles.notifyTitle, message.type === 'danger' && styles.dangerColor].join(' ')}>{message.title}</h2>\n                <b className={styles.notifyMessage}>{message.message}</b>\n                <div className={styles.notifyActions}>\n                    <button className={[styles.notifyButtons, styles.danger].join(' ')} onClick={() => onClick(message.data._id)}>Delete</button>\n                    <button className={styles.notifyButtons} onClick={() => setVerify(false)}>Cancel</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Verification;","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js",["618","619","620","621","622","623","624"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js",["625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js",["639","640"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js",["641"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js",["642","643"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js",["644","645"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js",["646","647","648","649","650"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js",["651","652"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js",["653","654","655","656"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js",["657","658","659","660","661"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js",["662","663","664","665"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js",["666","667","668","669","670","671"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js",["672","673"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js",["674","675","676","677","678"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js",["679","680","681","682"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js",["683"],"import React, { useState } from 'react';\n\nimport { PastryDetail, PastryDetailV2 } from '../../../Components';\nimport styles from './Pastry.module.css'\nimport PastryList from './PastryList/Pastry.list';\n\nconst PastrySection = (props) => {\n    const [pastry, setPastry] = useState([])\n    const [isDetail, setIsDetail] = useState(false);\n    return (\n        <div className={styles.pastries}>\n            <PastryList isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} {...props} />\n            <PastryDetailV2 detail={isDetail} setDetail={setIsDetail} pastry={pastry} />\n        </div>\n    )\n}\n\nexport default PastrySection;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js",["684"],"import React from 'react';\n\nimport styles from './OrderDetail.module.css'\nimport { vals3, vals4, vals5 } from '../../../res/img';\nimport { Button, Spacer } from '../../../Components';\n\nconst OrderDetail = (props) => {\n    const {isDetail, setIsDetail} = props;\n    return (\n        <div className={isDetail ? styles.orderDetail: styles.orderNoDetail}>\n            <div className={styles.orderDetailImgContainer}>\n                <div className={styles.orderDetailTitle}>\n                    <h2>Order Summary</h2>\n                </div>\n                <div className={styles.orderDetailImgs}>\n                    <img src={vals5} alt=\"Product\" className={[styles.orderDetailImg1 ,styles.orderDetailHover].join(' ')} />\n                    <img src={vals4} alt=\"Product\" className={[styles.orderDetailImg2 ,styles.orderDetailHover].join(' ')} />\n                    <img src={vals3} alt=\"Product\" className={[styles.orderDetailImg3 ,styles.orderDetailHover].join(' ')} />\n                </div>\n            </div>\n            <div className={styles.orderDetails}>\n                <h1>Order Details</h1>\n                <h1 className={styles.orderDescription}>Order status</h1>\n                <ul className={styles.orderDescriptionList}>\n                    <li  className={styles.orderDescriptionText}>Processing</li>\n                    <li  className={styles.orderDescriptionText}>Registered</li>\n                    <li  className={styles.orderDescriptionText}>On the way</li>\n                    <li  className={styles.orderDescriptionText}>Delivered</li>\n                </ul>\n                <h1 className={styles.orderDescription}>Pastries Ordered</h1>\n                <ul className={styles.orderDescriptionList}>\n                    <li  className={styles.orderDescriptionText}>Ice cake</li>\n                    <li  className={styles.orderDescriptionText}>Fire Cake</li>\n                    <li  className={styles.orderDescriptionText}>Banana cake</li>\n                    <li  className={styles.orderDescriptionText}>Cupcakes</li>\n                </ul>\n                <h1>Total: 193,000FCFA</h1>\n                <div>\n                    <Button title=\"Close\" onClick={() => setIsDetail()} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OrderDetail;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js",["685","686"],"import React from 'react';\n\nimport styles from './EventDetail.module.css';\nimport { logo6, vals2 } from '../../../res/img';\nimport { Button, Link, Spacer } from '../../../Components';\n\nconst EventDetail = (props) => {\n    const {isDetail, setIsDetail, setIsOpenEdit} = props;\n    return (\n         <div className={isDetail ? styles.eventDetail : styles.eventNoDetail}>\n            <div className={styles.eventDetailImgContainer}>\n                <div className={styles.eventDetailTitle}>\n                    <h2>Purpose</h2>\n                </div>\n                <img src={vals2} alt=\"Product\" className={styles.eventDetailImg} />\n                <div className={styles.eventDetailCountdown}>\n                    <h1 className={styles.eventDetailDaysContainer}>\n                        <b className={styles.eventDetailDaysNumber}>12</b>\n                        <br />\n                        <b className={styles.eventDetailDaysText}>Days</b>\n                    </h1>\n                    <h3 className={styles.eventDetailTimeContainer}>\n                        <b className={styles.eventDetailTimeNumber}>12 14 16</b>\n                        <br />\n                        <b className={styles.eventDetailTimeText}>Hours mins secs</b>\n                    </h3>\n                </div>\n            </div>\n            <div className={styles.eventDetails}>\n                <h1>For: Tuijah Christian</h1>\n                <h1 className={styles.eventDescription}>Cart</h1>\n                <ul className={styles.eventDescriptionList}>\n                    <li  className={styles.eventDescriptionText}>Birthday Cakes</li>\n                    <li  className={styles.eventDescriptionText}>Wedding Cakes</li>\n                    <li  className={styles.eventDescriptionText}>Cookies</li>\n                    <li  className={styles.eventDescriptionText}>Valentines</li>\n                </ul>\n                <button className={styles.eventMoreDetails} onClick={() => setIsDetail()}>More Details</button>\n                <h1 className={styles.eventDescription}>Reason</h1>\n                <p className={styles.eventDescriptionText}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sin</p>\n                <div className={styles.eventButtons}>\n                    <Link danger={true} title=\"Delete\" link=\"#\" />\n                    <Button title=\"Edit\" onClick={() => setIsOpenEdit()} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EventDetail;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js",["687"],"import React from 'react';\n\nimport styles from './EventList.module.css';\nimport { Spacer, CreateEvent, EventCard, SearchBar, Language, Profile } from '../../../Components';\n\nconst EventList = (props) => {\n    const {setIsOpen, isDetail, setIsDetail} = props;\n    return (\n        <div className={styles.eventList}>\n            <div className={styles.eventContainer}><EventCard isDetail={isDetail} setIsDetail={setIsDetail} /></div>\n            <div className={styles.panelEventHeader}>\n                <div className={styles.panelPosition}>\n                    <SearchBar />\n                    <Language />\n                    <Profile />\n                </div>\n            </div>\n            <CreateEvent setIsOpen={setIsOpen}/>\n        </div>\n    )\n}\n\nexport default EventList;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js",["688","689"],"import React, { useEffect, useState } from 'react';\n\nimport styles from './OrderList.module.css'\nimport { Language, OrderFilter, OrderTable, Profile, SearchBar } from '../../../Components';\nimport search from '../../../utils/search';\n\nconst OrderList = (props) => {\n    const { isDetail, setIsDetail } = props;\n    const [filter, setFilter] = useState('All');\n    const [text, setText] = useState('');\n\n    return (\n        <div className={styles.orderList}>\n            <OrderFilter setFilter={setFilter} />\n            <div className={styles.orderContainer}><OrderTable isDetail={isDetail} setIsDetail={setIsDetail} filter={filter} text={text} /></div>\n            <div className={styles.panelEventHeader}>\n                <div className={styles.panelPosition}>\n                    <SearchBar setText={setText} />\n                    <Language />\n                    <Profile />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OrderList;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js",["690"],"import React, { useState } from 'react';\n\nimport { CartTable, Language, Profile, SearchBar } from '../../../Components';\nimport styles from './CartList.module.css';\n\nconst CartList = (props) => {\n    const { isDetail, setIsDetail, setPastry } = props;\n    const [text, setText] = useState('');\n\n    return (\n        <div className={styles.cartList}>\n            <div className={styles.cartContainer}><CartTable isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} /></div>\n            <div className={styles.panelEventHeader}>\n                <div className={styles.panelPosition}>\n                    <SearchBar setText={setText} />\n                    <Language />\n                    <Profile />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CartList;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js",["691","692","693"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { ActivityTwo, Language, Notification, PastryCard, PastryCardV2, PastryFilter, Profile, SearchBar } from '../../../../Components';\nimport { BASE_URL } from '../../../../utils/globalVariable';\nimport styles from './PastryList.module.css'\nimport {setPastries} from '../../../../redux/Actions/Data.actions';\nimport search from '../../../../utils/search';\n\nconst PastryList = (props) => {\n    const {\n        isDetail,\n        setIsDetail,\n        setPastry,\n        token,\n        bakerId,\n        refresh,\n        _pastries,\n    } = props;\n\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [filter, setFilter] = useState('all');\n    const [pastries, setPastries] = useState([]);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/bakerpastries/${bakerId}`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Basic ${token}`,\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    props.setPastries(response.pastries);\n                    setPastries(response.pastries);\n                }\n\n                if (statusCode === 404) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: response.message,\n                    })\n                }\n\n                if (statusCode === 500) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: response.message,\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n\n        return () => {\n            setLoading(false);\n            setPastries([]);\n            setMessage({});\n            setShow(false);\n            setFilter('');\n        }\n    }, [refresh]);\n\n    useEffect(() => {\n        if (filter !== 'all') {\n            let Pastries = _pastries.filter(data => data.type === filter);\n            setPastries(Pastries);\n        }\n        if (filter === 'all') {\n            setPastries(_pastries);\n        }\n\n    }, [filter]);\n\n\n    useEffect(() => {\n        search(text, _pastries, setPastries, 'name');\n    }, [text]);\n\n    return (\n        <div className={styles.pastriesList}>\n            <PastryFilter setFilter={setFilter} {...props} />\n            {loading ? <div className={styles.pastriesContainer}>\n                <ActivityTwo />\n            </div> : <div className={styles.pastriesContainer}>\n                {pastries.map((pastry, index) => <PastryCardV2 isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} pastry={pastry} key={index} />)}\n                {pastries.map((pastry, index) => <PastryCard isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} pastry={pastry} key={index} />)}\n            </div>}\n            <div className={styles.panelEventHeader}>\n                <div className={styles.panelPosition}>\n                    <SearchBar setText={setText} />\n                    <Language />\n                    <Profile />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n};\n\nconst mapStateToProps = ({ auth, refresh, data }) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n        bakerId: auth.bakerId,\n        refresh: refresh.refresh,\n        _pastries: data.pastries,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setPastries}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryList);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js",["694","695","696"],"import React, {useEffect, useState} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { ActivityTwo, BakerCard, Language, Notification, Profile, SearchBar } from '../../../../Components';\nimport styles from './BakerList.module.css'\nimport {BASE_URL} from '../../../../utils/globalVariable';\nimport {setBakers} from '../../../../redux/Actions/Data.actions';\nimport search from '../../../../utils/search';\n\nconst BakerList = (props) => {\n    const { isDetail, setIsDetail, token, setBaker, refresh, _bakers } = props;\n\n    const [bakers, setBakers] = useState([]);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [text, setText] = useState('');\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/bakers`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Basic ${token}`,\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    props.setBakers(response.bakers);\n                    setBakers(response.bakers);\n                    setTotal(response.totalItems);\n                }\n                if (statusCode === 404) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: response.message,\n                    })\n                }\n\n                if (statusCode === 500) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: response.message,\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n\n        return () => {\n            setTotal(0)\n            setLoading(false);\n            setShow(false);\n            setMessage({});\n            setBakers([]);\n        }\n\n    }, [refresh]);\n\n    useEffect(() => {\n        search(text, _bakers, setBakers, 'companyName');\n    }, [text])\n\n\n    return (\n        <div className={styles.bakersList}>\n            {loading ? <div className={styles.bakersContainer}>\n                <ActivityTwo />\n            </div> : <div className={styles.bakersContainer}> {bakers.map((baker, index) => <BakerCard isDetail={isDetail} _setBaker={setBaker} setIsDetail={setIsDetail} baker={baker} key={index} {...props} />)}</div>}\n            <Notification message={message} show={show} setShow={setShow} />\n            <div className={styles.panelEventHeader}>\n                <div className={styles.panelPosition}>\n                    <SearchBar setText={setText} />\n                    <Language />\n                    <Profile />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth, refresh, data}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n        refresh: refresh.refresh,\n        _bakers: data.bakers,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBakers}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerList);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/OrdersSuper/Order.section.js",["697","698","699","700","701","702","703"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SOrdersTable/OrderTable.component.js",["704","705","706"],"import React from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\n\nimport { HouseLogo, pans2 } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { DateString, Thousand } from '../../utils/utilities';\nimport styles from './OrderTable.module.css';\n\nconst OrderTable = (props) => { \n    const { orders, token, setOrder, setDetail } = props;\n\n    const OrderDetails = (order) => {\n        setOrder(order);\n        setDetail(true);\n    }\n\n    return (\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Client Name</td>\n                        <td className={styles.cartTableHeaderData}>Company Name</td>\n                        <td className={styles.cartTableHeaderData}>Status</td>\n                        <td className={styles.cartTableHeaderData}>Total</td>\n                        <td className={styles.cartTableHeaderData}>Date</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {orders.map((order, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={order.userId.image ? `${BASE_URL}/${order.userId.image}` : HouseLogo} alt={order.userId.name} className={styles.cartTableDataImage} />\n                                <b>{order.userId.name.substr(0, 20)}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{order.bakerId.companyName}</td>\n                            <td className={styles.cartTableData}>{order.status}</td>\n                            <td className={styles.cartTableData}>{Thousand(order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}</td>\n                            <td className={styles.cartTableData}>{DateString(order.createdAt)}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => OrderDetails(order)}>Details</button>\n                                {/* <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => console.log('Haha')}><IoTrashBinSharp /></button> */}\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n    )\n}\n\nexport default OrderTable;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserDetails/UserDetails.component.js",["707","708","709"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand, HNumber } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './UserDetails.module.css';\nimport { HouseLogo, vals3 } from '../../res/img';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { Notification } from '..';\n\nconst UserDetails = (props) => {\n    const { detail, setDetail, _user, user } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        if (_user.length !== 0) {\n            setLikes(_user.likes.users.length);\n            setDislikes(_user.dislikes.users.length);\n        }\n        props.setRefresh(false);\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n        }\n    }, [detail]);\n\n    const Close = () => {\n        setDetail(false);\n        // props.setRefresh(true);\n    }\n\n\n    const disLikeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                setLoading(false);\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                {_user.length !== 0 && \n                    <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.bakerContainer}>\n                        <div className={styles.pastryContainer}>\n                            <div className={styles.pastryDiscount}> {HNumber(_user.telNumber)}</div>\n                            <div className={styles.pastryName}>{_user.name || ''}</div>\n                            <img src={_user.image ? `${BASE_URL}/${_user.image}` : HouseLogo} alt={_user.price} className={styles.pastryImage} />\n                            <div className={styles.pastryLikes} onClick={() => likeBaker(_user._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikeBaker(_user._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        {/* <div className={styles.bakerDetails}>\n                            <h1 className={styles.bakerCompany}>{_user.name}</h1>\n                            <div className={styles.bakerDetailsScroll}>\n                                <b className={styles.bakerCEO}>N: <span className={styles.info}>{_user.name}</span></b>\n                                <h2 className={styles.subTitle}>Categories</h2>\n                                {user.type === 'Baker' &&\n                                    <>\n                                        <h2 className={styles.smallDetails}>Email: <span className={styles.info}>{_user.email}</span></h2>\n                                        <h2 className={styles.smallDetails}>Telephone: <span className={styles.info}>{_user.telNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>ID No: <span className={styles.info}>{_user.idCardNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>Location: <span className={styles.info}>{_user.location}</span></h2>\n                                        <h2 className={styles.smallDetails}>MoMO Number: <span className={styles.info}>{_user.momp}</span></h2>\n                                        <h2 className={styles.smallDetails}>MOMO Name : <span className={styles.info}>{_user.momoName}</span></h2>\n                                    </>\n                                }\n                                <h2 className={styles.subTitle}>About</h2>\n                                <b className={styles.bakerAbout}>{_user.about || 'empty'}</b>\n                            </div>\n                            <div className={styles.actions}>\n                                {user.type !== ('Baker' || 'Admin') && <Button title='Shop' onClick={() => bakerShop(_user._id)} />}\n                            </div>\n                        </div> */}\n                    </div>\n                </>}\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker, setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderDetails/OrderDetails.component.js",["710","711","712","713","714","715","716","717","718"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoThumbsDown, IoThumbsUp, IoPhonePortraitOutline, IoStatsChart, IoWallet, IoBrush } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand, HNumber } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './OrderDetails.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst OrderDetails = (props) => {\n    const { detail, setDetail, order, user } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState(false);\n\n    useEffect(() => {\n        if (order.length !== 0) {\n            setLikes(order.userId.likes.users.length);\n            setDislikes(order.userId.dislikes.users.length);\n        }\n        props.setRefresh(false);\n    }, [detail]);\n\n    const Close = () => {\n        setDetail(false);\n    }\n\n    const disLikeUser = (id) => {\n        setLoading(true);\n        if (user.type === 'Admin') {\n            return false;\n        }\n        fetch(`${BASE_URL}/user/dislike/${id}?baker=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likeUser = (id) => {\n        setLoading(true);\n        if (user.type === 'Admin') {\n            return false;\n        }\n        fetch(`${BASE_URL}/user/like/${id}?baker=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                {order.length !== 0 && <div className={styles.clientDets}>\n                    <h2 className={styles.clientName}>{order.userId.name}</h2>\n                    {(order.status !== 'New') && (order.status !== 'Registered') && (order.status !== 'Processing') && <div className={styles.likeActions}>\n                        <span className={styles.likeButton} onClick={() => likeUser(order.userId._id)}><IoThumbsUp className={styles.icon} /> Likes: {likes} </span>\n                        <span className={styles.likeButton} onClick={() => disLikeUser(order.userId._id)}><IoThumbsDown className={styles.icon} /> Dislikes: {dislikes}</span>\n                    </div>}\n                </div>}\n                <div className={styles.pastriesScroll}>\n                    {order.length !== 0 &&\n                        order.pastries.map((pastry, index) =>\n                            <>\n                            <div className={styles.pastryContainer}>\n                                {pastry.pastryId.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.pastryId.discount}%</div>}\n                                <div className={styles.pastryName}>{pastry.pastryId.name}</div>\n                                <img src={`${BASE_URL}/${pastry.pastryId.image}`} alt={'pastry.price'} className={styles.pastryImage} />\n                                <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price:{ Thousand(pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : pastry.pastryId.price * pastry.quantity) }XAF</div>\n                                <div className={styles.pastryLikes}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(pastry.pastryId.likes.users.length)}</div>\n                                <div className={styles.pastryDislikes}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(pastry.pastryId.dislikes.users.length)}</div>\n                                <div className={styles.pastryQty}><IoStatsChart className={styles.icon} /> Quantity: {pastry.quantity}</div>\n                                <div className={styles.pastryMessage2}><IoBrush className={styles.icon} /> Msg: {pastry.message || \"'empty'\"}</div>\n                            </div>\n                        </>)}\n                </div>\n                <button className={styles.closeButton} onClick={() => Close()}>Close</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker, setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/UserProfile/UserProfile.section.js",["719","720","721"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserImage/UserImage.component.js",["722","723"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './UserImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst UserImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        return () => {\n            setImage('');\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, []);\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const Save = (id) => {\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append('image', image[0]);\n\n        fetch(`${BASE_URL}/user/image/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    console.log(response);\n                    props.setUser(response.user);\n                    setMessage({\n                        type: 'success',\n                        message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                        title: 'Success'\n                    });\n                    setTimeout(() => {\n                        setIsOpen(false);\n                    }, 2000);\n                }\n\n                if (statusCode === 500) {\n                    console.log(response, 'error');\n                    setIsOpen(false);\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.image ? `${BASE_URL}/${user.image}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPastry/EditPastry.section.js",["724","725","726","727"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryFilter/PastryFilter.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderFilter/OrderFilter.section.js",["728"],"import React, { useState } from 'react';\nimport { IoChevronBack, IoChevronForward } from 'react-icons/io5';\nimport { connect } from 'react-redux';\n\nimport styles from './OrderFilter.module.css';\n\nconst OrderFilter = (props) => {\n    const { categories, setFilter } = props;\n    const [showFilter, setShowFilter] = useState(false);\n    const [active, setActive] = useState(-1);\n\n    const Filter = (cat, index) => {\n        setActive(index);\n        setFilter(cat);\n    }\n\n    return (\n        <>\n            <div className={showFilter ? styles.filterPosition : styles.filterPositionHide}>\n                <div className={styles.fixedPosition} onClick={() => setShowFilter(!showFilter)}>\n                    {showFilter ? 'Hide' : 'Show'} Filter{showFilter ? <IoChevronBack className={styles.icon} /> : <IoChevronForward className={styles.icon} />}\n                </div>\n            </div>\n            <div className={showFilter ? styles.filterCategories : styles.filterCategoriesHide}>\n                <div className={styles.categoriesFixed}>\n                    <ul className={styles.listCategories}>\n                        <li className={[styles.listFilter, active === -1 && styles.listFilterActive].join(' ')} onClick={() => Filter('All', -1)}>All</li>\n                        <li className={[styles.listFilter, active === 0 && styles.listFilterActive].join(' ')} onClick={() => Filter('New', 0)}>New</li>\n                        <li className={[styles.listFilter, active === 1 && styles.listFilterActive].join(' ')} onClick={() => Filter('Registered', 1)}>Registered</li>\n                        <li className={[styles.listFilter, active === 2 && styles.listFilterActive].join(' ')} onClick={() => Filter('Processing', 2)}>Processing</li>\n                        <li className={[styles.listFilter, active === 3 && styles.listFilterActive].join(' ')} onClick={() => Filter('Delivered', 3)}>Delivered</li>\n                        <li className={[styles.listFilter, active === 4 && styles.listFilterActive].join(' ')} onClick={() => Filter('Confirmed', 4)}>Confirmed</li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst mapStateToProps = ({ data }) => {\n    return {\n        categories: data.categories,\n    }\n}\n\nexport default connect(mapStateToProps)(OrderFilter);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AImage/AImage.component.js",["729","730"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst AImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        return () => {\n            setImage('');\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, []);\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const Save = (id) => {\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append('image', image[0]);\n\n        fetch(`${BASE_URL}/admin/image/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setShow(true);\n                props.setUser(response.admin);\n                setMessage({\n                    type: 'success',\n                    message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                    title: 'Success'\n                });\n                setTimeout(() => {\n                    setIsOpen(false);\n                 }, 2000);\n            }\n\n            if (statusCode === 500) {\n                setIsOpen(false);\n            }\n        })\n        .catch(err => {\n            setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n    }\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.image ? `${BASE_URL}/${user.image}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPassword/EditPassword.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerProfile/BakerProfile.section.js",["731","732","733","734"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js",["735","736","737","738","739"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserNav/UserNav.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCardV2/PastryCard.component.js",["740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { IoStatsChart, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\n\nimport styles from './PastryCard.module.css';\nimport { HouseLogo, logo5, vals3 } from '../../res/img';\nimport { Button, Notification, PastryDetail } from '..';\nimport {BASE_URL} from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\n\nconst PastryCard = (props) => {\n    const {\n        isDetail,\n        setIsDetail,\n        pastry,\n        setPastry,\n        user,\n        filter,\n    } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [likes, setLikes] = useState(pastry.likes.users.length);\n    const [dislikes, setDislikes] = useState(pastry.dislikes.users.length);\n    const [detail, setDetails] = useState(false);\n\n    const showDetail = (pastry) => {\n        setIsDetail(true);\n        setPastry(pastry);\n    }\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    }\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: 'Please create your account to add to cart',\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastry.name} added to cart.`,\n                        title: 'Success'\n                    });\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    }\n\n    useEffect(() => {\n        return () => {\n            setLoading(false);\n            setShow(false);\n            setDetails(false);\n            setMessage({});\n        }\n    }, []);\n\n    return (\n        <>\n            <div className={styles.pastryListImgContainer}>\n                <div className={styles.pastryImgContainer}>\n                    {pastry.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.discount}%</div>}\n                    <img src={pastry.image ? `${BASE_URL}/${pastry.image}` : HouseLogo} alt=\"Product\" className={styles.pastryListImg} onClick={() => showDetail(pastry)} />\n                </div>\n                <div className={styles.pastriesButtonContainer}>\n                    <h2 className={styles.pastryName}>{pastry.name.substr(0, 15)}{pastry.name.length > 15 && '...'}</h2>\n                    <h3 className={styles.pastryPrice}>From <span className={styles.pastryValue}>{Thousand(pastry.price)} XAF</span></h3>\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({ auth }) => {\n    return {\n        user: auth.user,\n    }\n};\n\nexport default connect(mapStateToProps)(PastryCard);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetailV2/PastryDetail.component.js",["756","757","758","759","760","761","762"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryDetail.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryDetail = (props) => {\n    const {detail, setDetail, pastry, user, refresh, setIsEdit} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.likes.users.length);\n            setDislikes(pastry.dislikes.users.length);\n        }\n        setCount(0);\n\n        return () => {\n            setPastryMessage('');\n            setLoading(false);\n            setLikes(0);\n            setDislikes(0);\n            setCount(0);\n            setShow(false);\n            setMessage({});\n        }\n\n    }, [detail]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to add to cart`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setCount(count + 1);\n                if(count === 0) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastry.name} added to cart`,\n                        title: 'Success'\n                    });\n                }\n            }\n\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `${pastry.name} not added to cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const Close = () => {\n        setDetail(false);\n    }\n\n    const EditPastry = (pastry) => {\n        setIsEdit(true);\n        setDetail(false);\n    };\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}  onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <div className={styles.pastryNameContainer}>\n                        <h2 className={styles.pastryName}>{pastry.name}</h2>\n                        <span onClick={() => Close()} className={styles.pastryClose}><IoClose /></span>\n                    </div>\n                <div className={styles.pastryContainer}>\n                    \n                    {pastry.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.discount}%</div>}\n                    <img src={`${BASE_URL}/${pastry.image}`} alt={pastry.price} className={styles.pastryImage} />\n                    {user.type !== 'Baker' ?\n                        <>\n                            <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry._id)}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes} onClick={() => likePastry(pastry._id)}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        </> :\n                        <>\n                            <div className={styles.pastryDislikes}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            {user.type === 'Baker' && <div className={styles.pastryEdit} onClick={() => EditPastry(pastry)}><IoBrush className={styles.icon} /> Edit</div>}\n                            <div className={styles.pastryPrice2}><IoThumbsUp className={styles.icon} /> Price: {Thousand(pastry.price || 0)} XAF</div>\n                        </>\n                    }\n                </div>\n                 <div className={styles.pastryDetails}>\n                   <b className={styles.pastryDescription}>{pastry.description}</b>\n                   {/* <h2 className={styles.pastryTitle}>Recipe</h2>\n                   <b className={styles.pastryDescription}>{pastry.recipe || 'Loading...'}</b> */}\n                </div>\n                <div className={styles.dets}>\n                    <h2 className={styles.pastryPrice}>{Thousand(count >= 1 ? count * pastry.price : pastry.price || 0)} XAF</h2>\n                    {user.type !== 'Baker' && (count === 0 ? \n                        <div className={styles.notifyActions}>\n                            <button className={styles.notifyButton} onClick={() => AddToCart(pastry._id)}>Add to Cart</button>\n                        </div> :\n                        <div className={styles.notifyActions}>\n                            <button className={styles.pastryButton} onClick={() => SubFromCart(pastry._id)}><IoRemove /></button>\n                            <b className={styles.pastryQty}>Quantity: {count}</b>\n                            <button className={styles.pastryButton} onClick={() => AddToCart(pastry._id)}><IoAdd /></button>\n                        </div>\n                    )}\n                </div>\n                {count !== 0 && (\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry._id)}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                )}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryDetail);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCartV2/PastryCart.component.js",["763","764","765","766","767","768","769","770"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryCart.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryCart = (props) => {\n    const { detail, setDetail, pastry, user, refresh, setIsEdit } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        if (pastry.length !== 0) {\n            setLikes(pastry.pastryId.likes.users.length);\n            setDislikes(pastry.pastryId.dislikes.users.length);\n            setPastryMessage(pastry.message);\n            setCount(pastry.quantity);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setPastryMessage('');\n            setCount(0);\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, [detail]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count + 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n    const Close = () => {\n        setDetail(false);\n    }\n\n    const EditPastry = (pastry) => {\n        setIsEdit(true);\n        setDetail(false);\n    };\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                {pastry.length !== 0 &&\n                    <>\n                    <div className={styles.pastryNameContainer}>\n                        <h2 className={styles.pastryName}>{pastry.pastryId.name}</h2>\n                        <span onClick={() => Close()} className={styles.pastryClose}><IoClose /></span>\n                    </div>\n                        <div className={styles.pastryContainer}>\n                            {pastry.pastryId.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.pastryId.discount || ''}%</div>}\n                            <img src={`${BASE_URL}/${pastry.pastryId.image || ''}`} alt={pastry.price} className={styles.pastryImage} />\n                            <div className={styles.pastryLikes} onClick={() => likePastry(pastry.pastryId._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry.pastryId._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        <div className={styles.dets}>\n                            <h2 className={styles.pastryPrice}>{Thousand(count >= 1 ? count * pastry.pastryId.price : pastry.pastryId.price || 0)} XAF</h2>\n                            {count === 0 ?\n                                <div className={styles.notifyActions}>\n                                    <button className={styles.notifyButton} onClick={() => AddToCart(pastry.pastryId._id || '')}>Add to Cart</button>\n                                </div> :\n                                <div className={styles.notifyActions}>\n                                    <button className={styles.pastryButton} onClick={() => SubFromCart(pastry.pastryId._id || '')}><IoRemove /></button>\n                                    <b className={styles.pastryQty}>Quantity: {count || ''}</b>\n                                    <button className={styles.pastryButton} onClick={() => AddToCart(pastry.pastryId._id || '')}><IoAdd /></button>\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <input type=\"text\" placeholder=\"Message on pastry\" value={pastryMessage || ''} className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                            <button className={styles.notifyButton} onClick={() => Message(pastry.pastryId._id || '')}><IoBrush className={styles.icon} style={{ paddingTop: '3px' }} />Paste</button>\n                        </div>\n                    </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n};\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryCart);",{"ruleId":"771","severity":1,"message":"772","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":14},{"ruleId":"775","severity":1,"message":"776","line":28,"column":8,"nodeType":"777","endLine":28,"endColumn":18,"suggestions":"778"},{"ruleId":"775","severity":1,"message":"779","line":95,"column":8,"nodeType":"777","endLine":95,"endColumn":17,"suggestions":"780"},{"ruleId":"771","severity":1,"message":"781","line":110,"column":19,"nodeType":"773","messageId":"774","endLine":110,"endColumn":27},{"ruleId":"771","severity":1,"message":"781","line":159,"column":23,"nodeType":"773","messageId":"774","endLine":159,"endColumn":31},{"ruleId":"771","severity":1,"message":"782","line":7,"column":28,"nodeType":"773","messageId":"774","endLine":7,"endColumn":33},{"ruleId":"771","severity":1,"message":"783","line":15,"column":13,"nodeType":"773","messageId":"774","endLine":15,"endColumn":21},{"ruleId":"771","severity":1,"message":"784","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":19},{"ruleId":"771","severity":1,"message":"772","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":14},{"ruleId":"785","replacedBy":"786"},{"ruleId":"787","replacedBy":"788"},{"ruleId":"771","severity":1,"message":"789","line":5,"column":10,"nodeType":"773","messageId":"774","endLine":5,"endColumn":15},{"ruleId":"771","severity":1,"message":"781","line":37,"column":19,"nodeType":"773","messageId":"774","endLine":37,"endColumn":27},{"ruleId":"771","severity":1,"message":"790","line":13,"column":27,"nodeType":"773","messageId":"774","endLine":13,"endColumn":34},{"ruleId":"771","severity":1,"message":"784","line":14,"column":12,"nodeType":"773","messageId":"774","endLine":14,"endColumn":19},{"ruleId":"771","severity":1,"message":"791","line":14,"column":21,"nodeType":"773","messageId":"774","endLine":14,"endColumn":31},{"ruleId":"775","severity":1,"message":"776","line":21,"column":8,"nodeType":"777","endLine":21,"endColumn":10,"suggestions":"792"},{"ruleId":"771","severity":1,"message":"793","line":6,"column":12,"nodeType":"773","messageId":"774","endLine":6,"endColumn":16},{"ruleId":"771","severity":1,"message":"782","line":11,"column":28,"nodeType":"773","messageId":"774","endLine":11,"endColumn":33},{"ruleId":"775","severity":1,"message":"794","line":34,"column":8,"nodeType":"777","endLine":34,"endColumn":16,"suggestions":"795"},{"ruleId":"775","severity":1,"message":"776","line":46,"column":8,"nodeType":"777","endLine":46,"endColumn":17,"suggestions":"796"},{"ruleId":"771","severity":1,"message":"797","line":10,"column":10,"nodeType":"773","messageId":"774","endLine":10,"endColumn":15},{"ruleId":"771","severity":1,"message":"798","line":2,"column":17,"nodeType":"773","messageId":"774","endLine":2,"endColumn":23},{"ruleId":"771","severity":1,"message":"799","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":25},{"ruleId":"771","severity":1,"message":"800","line":18,"column":12,"nodeType":"773","messageId":"774","endLine":18,"endColumn":22},{"ruleId":"771","severity":1,"message":"784","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":19},{"ruleId":"775","severity":1,"message":"801","line":17,"column":8,"nodeType":"777","endLine":17,"endColumn":21,"suggestions":"802"},{"ruleId":"771","severity":1,"message":"803","line":4,"column":9,"nodeType":"773","messageId":"774","endLine":4,"endColumn":14},{"ruleId":"771","severity":1,"message":"804","line":8,"column":12,"nodeType":"773","messageId":"774","endLine":8,"endColumn":18},{"ruleId":"771","severity":1,"message":"805","line":8,"column":20,"nodeType":"773","messageId":"774","endLine":8,"endColumn":29},{"ruleId":"771","severity":1,"message":"772","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":14},{"ruleId":"771","severity":1,"message":"806","line":3,"column":17,"nodeType":"773","messageId":"774","endLine":3,"endColumn":24},{"ruleId":"771","severity":1,"message":"807","line":3,"column":43,"nodeType":"773","messageId":"774","endLine":3,"endColumn":55},{"ruleId":"771","severity":1,"message":"808","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"809","line":1,"column":28,"nodeType":"773","messageId":"774","endLine":1,"endColumn":36},{"ruleId":"771","severity":1,"message":"810","line":8,"column":8,"nodeType":"773","messageId":"774","endLine":8,"endColumn":14},{"ruleId":"771","severity":1,"message":"782","line":3,"column":17,"nodeType":"773","messageId":"774","endLine":3,"endColumn":22},{"ruleId":"775","severity":1,"message":"811","line":87,"column":8,"nodeType":"777","endLine":87,"endColumn":17,"suggestions":"812"},{"ruleId":"771","severity":1,"message":"783","line":8,"column":12,"nodeType":"773","messageId":"774","endLine":8,"endColumn":20},{"ruleId":"771","severity":1,"message":"813","line":6,"column":21,"nodeType":"773","messageId":"774","endLine":6,"endColumn":26},{"ruleId":"771","severity":1,"message":"782","line":6,"column":28,"nodeType":"773","messageId":"774","endLine":6,"endColumn":33},{"ruleId":"771","severity":1,"message":"814","line":7,"column":32,"nodeType":"773","messageId":"774","endLine":7,"endColumn":44},{"ruleId":"771","severity":1,"message":"783","line":13,"column":9,"nodeType":"773","messageId":"774","endLine":13,"endColumn":17},{"ruleId":"771","severity":1,"message":"815","line":18,"column":9,"nodeType":"773","messageId":"774","endLine":18,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":21,"column":12,"nodeType":"773","messageId":"774","endLine":21,"endColumn":19},{"ruleId":"771","severity":1,"message":"816","line":26,"column":12,"nodeType":"773","messageId":"774","endLine":26,"endColumn":18},{"ruleId":"771","severity":1,"message":"781","line":147,"column":23,"nodeType":"773","messageId":"774","endLine":147,"endColumn":31},{"ruleId":"771","severity":1,"message":"817","line":6,"column":32,"nodeType":"773","messageId":"774","endLine":6,"endColumn":37},{"ruleId":"771","severity":1,"message":"818","line":6,"column":60,"nodeType":"773","messageId":"774","endLine":6,"endColumn":65},{"ruleId":"771","severity":1,"message":"819","line":6,"column":67,"nodeType":"773","messageId":"774","endLine":6,"endColumn":75},{"ruleId":"771","severity":1,"message":"817","line":6,"column":32,"nodeType":"773","messageId":"774","endLine":6,"endColumn":37},{"ruleId":"771","severity":1,"message":"818","line":6,"column":60,"nodeType":"773","messageId":"774","endLine":6,"endColumn":65},{"ruleId":"771","severity":1,"message":"819","line":6,"column":67,"nodeType":"773","messageId":"774","endLine":6,"endColumn":75},{"ruleId":"771","severity":1,"message":"789","line":6,"column":10,"nodeType":"773","messageId":"774","endLine":6,"endColumn":15},{"ruleId":"771","severity":1,"message":"781","line":35,"column":23,"nodeType":"773","messageId":"774","endLine":35,"endColumn":31},{"ruleId":"771","severity":1,"message":"820","line":8,"column":17,"nodeType":"773","messageId":"774","endLine":8,"endColumn":22},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":22,"column":8,"nodeType":"777","endLine":22,"endColumn":17,"suggestions":"821"},{"ruleId":"771","severity":1,"message":"822","line":15,"column":61,"nodeType":"773","messageId":"774","endLine":15,"endColumn":65},{"ruleId":"771","severity":1,"message":"784","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":23,"column":8,"nodeType":"777","endLine":23,"endColumn":17,"suggestions":"823"},{"ruleId":"771","severity":1,"message":"819","line":13,"column":9,"nodeType":"773","messageId":"774","endLine":13,"endColumn":17},{"ruleId":"771","severity":1,"message":"819","line":12,"column":9,"nodeType":"773","messageId":"774","endLine":12,"endColumn":17},{"ruleId":"771","severity":1,"message":"808","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"818","line":11,"column":9,"nodeType":"773","messageId":"774","endLine":11,"endColumn":14},{"ruleId":"771","severity":1,"message":"819","line":12,"column":9,"nodeType":"773","messageId":"774","endLine":12,"endColumn":17},{"ruleId":"771","severity":1,"message":"824","line":13,"column":9,"nodeType":"773","messageId":"774","endLine":13,"endColumn":13},{"ruleId":"771","severity":1,"message":"825","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":17},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":25,"column":8,"nodeType":"777","endLine":25,"endColumn":17,"suggestions":"826"},{"ruleId":"775","severity":1,"message":"827","line":44,"column":8,"nodeType":"777","endLine":44,"endColumn":16,"suggestions":"828"},{"ruleId":"771","severity":1,"message":"781","line":70,"column":19,"nodeType":"773","messageId":"774","endLine":70,"endColumn":27},{"ruleId":"771","severity":1,"message":"781","line":120,"column":23,"nodeType":"773","messageId":"774","endLine":120,"endColumn":31},{"ruleId":"771","severity":1,"message":"781","line":166,"column":23,"nodeType":"773","messageId":"774","endLine":166,"endColumn":31},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":25,"column":8,"nodeType":"777","endLine":25,"endColumn":17,"suggestions":"829"},{"ruleId":"771","severity":1,"message":"781","line":39,"column":23,"nodeType":"773","messageId":"774","endLine":39,"endColumn":31},{"ruleId":"771","severity":1,"message":"781","line":82,"column":23,"nodeType":"773","messageId":"774","endLine":82,"endColumn":31},{"ruleId":"775","severity":1,"message":"830","line":130,"column":8,"nodeType":"777","endLine":130,"endColumn":16,"suggestions":"831"},{"ruleId":"771","severity":1,"message":"781","line":144,"column":23,"nodeType":"773","messageId":"774","endLine":144,"endColumn":31},{"ruleId":"775","severity":1,"message":"832","line":12,"column":8,"nodeType":"777","endLine":12,"endColumn":14,"suggestions":"833"},{"ruleId":"771","severity":1,"message":"820","line":5,"column":21,"nodeType":"773","messageId":"774","endLine":5,"endColumn":26},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":27,"column":8,"nodeType":"777","endLine":27,"endColumn":17,"suggestions":"834"},{"ruleId":"771","severity":1,"message":"781","line":46,"column":27,"nodeType":"773","messageId":"774","endLine":46,"endColumn":35},{"ruleId":"771","severity":1,"message":"808","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"835","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":16},{"ruleId":"771","severity":1,"message":"804","line":12,"column":12,"nodeType":"773","messageId":"774","endLine":12,"endColumn":18},{"ruleId":"771","severity":1,"message":"805","line":12,"column":20,"nodeType":"773","messageId":"774","endLine":12,"endColumn":29},{"ruleId":"771","severity":1,"message":"836","line":13,"column":18,"nodeType":"773","messageId":"774","endLine":13,"endColumn":25},{"ruleId":"771","severity":1,"message":"837","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":17},{"ruleId":"771","severity":1,"message":"838","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"771","severity":1,"message":"839","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":16},{"ruleId":"775","severity":1,"message":"840","line":49,"column":8,"nodeType":"777","endLine":49,"endColumn":10,"suggestions":"841"},{"ruleId":"771","severity":1,"message":"842","line":3,"column":8,"nodeType":"773","messageId":"774","endLine":3,"endColumn":14},{"ruleId":"771","severity":1,"message":"843","line":11,"column":7,"nodeType":"773","messageId":"774","endLine":11,"endColumn":25},{"ruleId":"771","severity":1,"message":"844","line":20,"column":9,"nodeType":"773","messageId":"774","endLine":20,"endColumn":19},{"ruleId":"771","severity":1,"message":"845","line":21,"column":9,"nodeType":"773","messageId":"774","endLine":21,"endColumn":15},{"ruleId":"771","severity":1,"message":"846","line":22,"column":9,"nodeType":"773","messageId":"774","endLine":22,"endColumn":20},{"ruleId":"771","severity":1,"message":"847","line":25,"column":9,"nodeType":"773","messageId":"774","endLine":25,"endColumn":20},{"ruleId":"771","severity":1,"message":"848","line":27,"column":9,"nodeType":"773","messageId":"774","endLine":27,"endColumn":18},{"ruleId":"771","severity":1,"message":"849","line":29,"column":9,"nodeType":"773","messageId":"774","endLine":29,"endColumn":23},{"ruleId":"771","severity":1,"message":"850","line":30,"column":9,"nodeType":"773","messageId":"774","endLine":30,"endColumn":22},{"ruleId":"771","severity":1,"message":"851","line":34,"column":9,"nodeType":"773","messageId":"774","endLine":34,"endColumn":25},{"ruleId":"771","severity":1,"message":"852","line":41,"column":9,"nodeType":"773","messageId":"774","endLine":41,"endColumn":23},{"ruleId":"771","severity":1,"message":"853","line":43,"column":9,"nodeType":"773","messageId":"774","endLine":43,"endColumn":28},{"ruleId":"771","severity":1,"message":"854","line":50,"column":12,"nodeType":"773","messageId":"774","endLine":50,"endColumn":23},{"ruleId":"771","severity":1,"message":"855","line":255,"column":7,"nodeType":"773","messageId":"774","endLine":255,"endColumn":19},{"ruleId":"771","severity":1,"message":"856","line":4,"column":5,"nodeType":"773","messageId":"774","endLine":4,"endColumn":15},{"ruleId":"771","severity":1,"message":"783","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":49,"column":8,"nodeType":"777","endLine":49,"endColumn":10,"suggestions":"857"},{"ruleId":"771","severity":1,"message":"858","line":4,"column":5,"nodeType":"773","messageId":"774","endLine":4,"endColumn":12},{"ruleId":"771","severity":1,"message":"859","line":6,"column":5,"nodeType":"773","messageId":"774","endLine":6,"endColumn":15},{"ruleId":"771","severity":1,"message":"860","line":5,"column":18,"nodeType":"773","messageId":"774","endLine":5,"endColumn":27},{"ruleId":"771","severity":1,"message":"861","line":5,"column":52,"nodeType":"773","messageId":"774","endLine":5,"endColumn":59},{"ruleId":"771","severity":1,"message":"822","line":13,"column":13,"nodeType":"773","messageId":"774","endLine":13,"endColumn":17},{"ruleId":"771","severity":1,"message":"837","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":17},{"ruleId":"775","severity":1,"message":"776","line":27,"column":8,"nodeType":"777","endLine":27,"endColumn":17,"suggestions":"862"},{"ruleId":"775","severity":1,"message":"863","line":91,"column":8,"nodeType":"777","endLine":91,"endColumn":17,"suggestions":"864"},{"ruleId":"775","severity":1,"message":"865","line":122,"column":8,"nodeType":"777","endLine":122,"endColumn":14,"suggestions":"866"},{"ruleId":"771","severity":1,"message":"867","line":5,"column":10,"nodeType":"773","messageId":"774","endLine":5,"endColumn":20},{"ruleId":"868","severity":1,"message":"869","line":8,"column":11,"nodeType":"870","messageId":"871","endLine":8,"endColumn":13},{"ruleId":"771","severity":1,"message":"822","line":12,"column":13,"nodeType":"773","messageId":"774","endLine":12,"endColumn":17},{"ruleId":"771","severity":1,"message":"784","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":19},{"ruleId":"775","severity":1,"message":"863","line":75,"column":8,"nodeType":"777","endLine":75,"endColumn":17,"suggestions":"872"},{"ruleId":"775","severity":1,"message":"873","line":98,"column":8,"nodeType":"777","endLine":98,"endColumn":14,"suggestions":"874"},{"ruleId":"771","severity":1,"message":"875","line":13,"column":13,"nodeType":"773","messageId":"774","endLine":13,"endColumn":18},{"ruleId":"771","severity":1,"message":"836","line":16,"column":18,"nodeType":"773","messageId":"774","endLine":16,"endColumn":25},{"ruleId":"771","severity":1,"message":"784","line":21,"column":12,"nodeType":"773","messageId":"774","endLine":21,"endColumn":19},{"ruleId":"775","severity":1,"message":"876","line":67,"column":8,"nodeType":"777","endLine":67,"endColumn":33,"suggestions":"877"},{"ruleId":"775","severity":1,"message":"878","line":86,"column":8,"nodeType":"777","endLine":86,"endColumn":14,"suggestions":"879"},{"ruleId":"771","severity":1,"message":"839","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":16},{"ruleId":"771","severity":1,"message":"838","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":19},{"ruleId":"775","severity":1,"message":"880","line":82,"column":8,"nodeType":"777","endLine":82,"endColumn":17,"suggestions":"881"},{"ruleId":"775","severity":1,"message":"882","line":101,"column":8,"nodeType":"777","endLine":101,"endColumn":14,"suggestions":"883"},{"ruleId":"771","severity":1,"message":"875","line":12,"column":13,"nodeType":"773","messageId":"774","endLine":12,"endColumn":18},{"ruleId":"771","severity":1,"message":"822","line":12,"column":20,"nodeType":"773","messageId":"774","endLine":12,"endColumn":24},{"ruleId":"771","severity":1,"message":"836","line":14,"column":18,"nodeType":"773","messageId":"774","endLine":14,"endColumn":25},{"ruleId":"771","severity":1,"message":"837","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":17},{"ruleId":"775","severity":1,"message":"840","line":57,"column":8,"nodeType":"777","endLine":57,"endColumn":10,"suggestions":"884"},{"ruleId":"775","severity":1,"message":"885","line":77,"column":8,"nodeType":"777","endLine":77,"endColumn":14,"suggestions":"886"},{"ruleId":"771","severity":1,"message":"887","line":6,"column":41,"nodeType":"773","messageId":"774","endLine":6,"endColumn":49},{"ruleId":"771","severity":1,"message":"888","line":27,"column":9,"nodeType":"773","messageId":"774","endLine":27,"endColumn":24},{"ruleId":"771","severity":1,"message":"889","line":4,"column":10,"nodeType":"773","messageId":"774","endLine":4,"endColumn":18},{"ruleId":"771","severity":1,"message":"822","line":12,"column":20,"nodeType":"773","messageId":"774","endLine":12,"endColumn":24},{"ruleId":"771","severity":1,"message":"890","line":21,"column":12,"nodeType":"773","messageId":"774","endLine":21,"endColumn":16},{"ruleId":"775","severity":1,"message":"891","line":62,"column":8,"nodeType":"777","endLine":62,"endColumn":17,"suggestions":"892"},{"ruleId":"775","severity":1,"message":"891","line":97,"column":8,"nodeType":"777","endLine":97,"endColumn":16,"suggestions":"893"},{"ruleId":"771","severity":1,"message":"894","line":7,"column":18,"nodeType":"773","messageId":"774","endLine":7,"endColumn":22},{"ruleId":"771","severity":1,"message":"875","line":14,"column":37,"nodeType":"773","messageId":"774","endLine":14,"endColumn":42},{"ruleId":"771","severity":1,"message":"895","line":25,"column":12,"nodeType":"773","messageId":"774","endLine":25,"endColumn":21},{"ruleId":"775","severity":1,"message":"896","line":42,"column":8,"nodeType":"777","endLine":42,"endColumn":16,"suggestions":"897"},{"ruleId":"771","severity":1,"message":"814","line":3,"column":10,"nodeType":"773","messageId":"774","endLine":3,"endColumn":22},{"ruleId":"771","severity":1,"message":"898","line":5,"column":18,"nodeType":"773","messageId":"774","endLine":5,"endColumn":24},{"ruleId":"771","severity":1,"message":"899","line":4,"column":10,"nodeType":"773","messageId":"774","endLine":4,"endColumn":15},{"ruleId":"771","severity":1,"message":"898","line":5,"column":24,"nodeType":"773","messageId":"774","endLine":5,"endColumn":30},{"ruleId":"771","severity":1,"message":"898","line":4,"column":10,"nodeType":"773","messageId":"774","endLine":4,"endColumn":16},{"ruleId":"771","severity":1,"message":"808","line":1,"column":17,"nodeType":"773","messageId":"774","endLine":1,"endColumn":26},{"ruleId":"771","severity":1,"message":"810","line":5,"column":8,"nodeType":"773","messageId":"774","endLine":5,"endColumn":14},{"ruleId":"771","severity":1,"message":"890","line":8,"column":12,"nodeType":"773","messageId":"774","endLine":8,"endColumn":16},{"ruleId":"775","severity":1,"message":"900","line":88,"column":8,"nodeType":"777","endLine":88,"endColumn":17,"suggestions":"901"},{"ruleId":"775","severity":1,"message":"878","line":99,"column":8,"nodeType":"777","endLine":99,"endColumn":16,"suggestions":"902"},{"ruleId":"775","severity":1,"message":"878","line":104,"column":8,"nodeType":"777","endLine":104,"endColumn":14,"suggestions":"903"},{"ruleId":"771","severity":1,"message":"837","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":17},{"ruleId":"775","severity":1,"message":"863","line":81,"column":8,"nodeType":"777","endLine":81,"endColumn":17,"suggestions":"904"},{"ruleId":"775","severity":1,"message":"865","line":85,"column":8,"nodeType":"777","endLine":85,"endColumn":14,"suggestions":"905"},{"ruleId":"771","severity":1,"message":"906","line":10,"column":10,"nodeType":"773","messageId":"774","endLine":10,"endColumn":14},{"ruleId":"771","severity":1,"message":"822","line":14,"column":13,"nodeType":"773","messageId":"774","endLine":14,"endColumn":17},{"ruleId":"771","severity":1,"message":"790","line":14,"column":26,"nodeType":"773","messageId":"774","endLine":14,"endColumn":33},{"ruleId":"771","severity":1,"message":"839","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":16},{"ruleId":"771","severity":1,"message":"838","line":18,"column":12,"nodeType":"773","messageId":"774","endLine":18,"endColumn":19},{"ruleId":"775","severity":1,"message":"863","line":80,"column":8,"nodeType":"777","endLine":80,"endColumn":10,"suggestions":"907"},{"ruleId":"775","severity":1,"message":"882","line":100,"column":8,"nodeType":"777","endLine":100,"endColumn":14,"suggestions":"908"},{"ruleId":"771","severity":1,"message":"909","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":25},{"ruleId":"771","severity":1,"message":"820","line":4,"column":21,"nodeType":"773","messageId":"774","endLine":4,"endColumn":26},{"ruleId":"771","severity":1,"message":"875","line":10,"column":21,"nodeType":"773","messageId":"774","endLine":10,"endColumn":26},{"ruleId":"771","severity":1,"message":"782","line":10,"column":21,"nodeType":"773","messageId":"774","endLine":10,"endColumn":26},{"ruleId":"771","severity":1,"message":"784","line":17,"column":12,"nodeType":"773","messageId":"774","endLine":17,"endColumn":19},{"ruleId":"775","severity":1,"message":"910","line":33,"column":8,"nodeType":"777","endLine":33,"endColumn":16,"suggestions":"911"},{"ruleId":"771","severity":1,"message":"912","line":2,"column":10,"nodeType":"773","messageId":"774","endLine":2,"endColumn":17},{"ruleId":"771","severity":1,"message":"913","line":2,"column":45,"nodeType":"773","messageId":"774","endLine":2,"endColumn":67},{"ruleId":"771","severity":1,"message":"835","line":6,"column":10,"nodeType":"773","messageId":"774","endLine":6,"endColumn":16},{"ruleId":"771","severity":1,"message":"914","line":6,"column":18,"nodeType":"773","messageId":"774","endLine":6,"endColumn":30},{"ruleId":"771","severity":1,"message":"915","line":8,"column":20,"nodeType":"773","messageId":"774","endLine":8,"endColumn":27},{"ruleId":"771","severity":1,"message":"784","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"771","severity":1,"message":"839","line":19,"column":12,"nodeType":"773","messageId":"774","endLine":19,"endColumn":16},{"ruleId":"771","severity":1,"message":"838","line":20,"column":12,"nodeType":"773","messageId":"774","endLine":20,"endColumn":19},{"ruleId":"775","severity":1,"message":"916","line":28,"column":8,"nodeType":"777","endLine":28,"endColumn":16,"suggestions":"917"},{"ruleId":"771","severity":1,"message":"784","line":32,"column":12,"nodeType":"773","messageId":"774","endLine":32,"endColumn":19},{"ruleId":"771","severity":1,"message":"918","line":40,"column":12,"nodeType":"773","messageId":"774","endLine":40,"endColumn":25},{"ruleId":"775","severity":1,"message":"919","line":65,"column":8,"nodeType":"777","endLine":65,"endColumn":17,"suggestions":"920"},{"ruleId":"771","severity":1,"message":"797","line":10,"column":10,"nodeType":"773","messageId":"774","endLine":10,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"771","severity":1,"message":"894","line":7,"column":18,"nodeType":"773","messageId":"774","endLine":7,"endColumn":22},{"ruleId":"771","severity":1,"message":"875","line":14,"column":37,"nodeType":"773","messageId":"774","endLine":14,"endColumn":42},{"ruleId":"771","severity":1,"message":"895","line":26,"column":12,"nodeType":"773","messageId":"774","endLine":26,"endColumn":21},{"ruleId":"775","severity":1,"message":"921","line":55,"column":8,"nodeType":"777","endLine":55,"endColumn":16,"suggestions":"922"},{"ruleId":"771","severity":1,"message":"844","line":8,"column":13,"nodeType":"773","messageId":"774","endLine":8,"endColumn":23},{"ruleId":"771","severity":1,"message":"797","line":10,"column":10,"nodeType":"773","messageId":"774","endLine":10,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"771","severity":1,"message":"797","line":7,"column":10,"nodeType":"773","messageId":"774","endLine":7,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":42,"column":12,"nodeType":"773","messageId":"774","endLine":42,"endColumn":19},{"ruleId":"771","severity":1,"message":"918","line":58,"column":12,"nodeType":"773","messageId":"774","endLine":58,"endColumn":25},{"ruleId":"775","severity":1,"message":"923","line":103,"column":8,"nodeType":"777","endLine":103,"endColumn":10,"suggestions":"924"},{"ruleId":"771","severity":1,"message":"797","line":5,"column":10,"nodeType":"773","messageId":"774","endLine":5,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":16,"column":12,"nodeType":"773","messageId":"774","endLine":16,"endColumn":19},{"ruleId":"771","severity":1,"message":"895","line":24,"column":12,"nodeType":"773","messageId":"774","endLine":24,"endColumn":21},{"ruleId":"775","severity":1,"message":"925","line":48,"column":8,"nodeType":"777","endLine":48,"endColumn":10,"suggestions":"926"},{"ruleId":"771","severity":1,"message":"927","line":176,"column":7,"nodeType":"773","messageId":"774","endLine":176,"endColumn":21},{"ruleId":"771","severity":1,"message":"928","line":3,"column":24,"nodeType":"773","messageId":"774","endLine":3,"endColumn":36},{"ruleId":"771","severity":1,"message":"929","line":3,"column":38,"nodeType":"773","messageId":"774","endLine":3,"endColumn":48},{"ruleId":"771","severity":1,"message":"813","line":6,"column":21,"nodeType":"773","messageId":"774","endLine":6,"endColumn":26},{"ruleId":"771","severity":1,"message":"782","line":6,"column":28,"nodeType":"773","messageId":"774","endLine":6,"endColumn":33},{"ruleId":"771","severity":1,"message":"835","line":7,"column":10,"nodeType":"773","messageId":"774","endLine":7,"endColumn":16},{"ruleId":"771","severity":1,"message":"814","line":7,"column":32,"nodeType":"773","messageId":"774","endLine":7,"endColumn":44},{"ruleId":"771","severity":1,"message":"783","line":13,"column":9,"nodeType":"773","messageId":"774","endLine":13,"endColumn":17},{"ruleId":"771","severity":1,"message":"815","line":18,"column":9,"nodeType":"773","messageId":"774","endLine":18,"endColumn":15},{"ruleId":"771","severity":1,"message":"784","line":21,"column":12,"nodeType":"773","messageId":"774","endLine":21,"endColumn":19},{"ruleId":"771","severity":1,"message":"930","line":24,"column":12,"nodeType":"773","messageId":"774","endLine":24,"endColumn":17},{"ruleId":"771","severity":1,"message":"931","line":25,"column":12,"nodeType":"773","messageId":"774","endLine":25,"endColumn":20},{"ruleId":"771","severity":1,"message":"816","line":26,"column":12,"nodeType":"773","messageId":"774","endLine":26,"endColumn":18},{"ruleId":"771","severity":1,"message":"932","line":33,"column":11,"nodeType":"773","messageId":"774","endLine":33,"endColumn":24},{"ruleId":"771","severity":1,"message":"933","line":76,"column":11,"nodeType":"773","messageId":"774","endLine":76,"endColumn":21},{"ruleId":"771","severity":1,"message":"934","line":123,"column":11,"nodeType":"773","messageId":"774","endLine":123,"endColumn":20},{"ruleId":"771","severity":1,"message":"781","line":147,"column":23,"nodeType":"773","messageId":"774","endLine":147,"endColumn":31},{"ruleId":"771","severity":1,"message":"935","line":2,"column":85,"nodeType":"773","messageId":"774","endLine":2,"endColumn":93},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":25,"column":8,"nodeType":"777","endLine":25,"endColumn":17,"suggestions":"936"},{"ruleId":"775","severity":1,"message":"827","line":44,"column":8,"nodeType":"777","endLine":44,"endColumn":16,"suggestions":"937"},{"ruleId":"771","severity":1,"message":"781","line":70,"column":19,"nodeType":"773","messageId":"774","endLine":70,"endColumn":27},{"ruleId":"771","severity":1,"message":"781","line":120,"column":23,"nodeType":"773","messageId":"774","endLine":120,"endColumn":31},{"ruleId":"771","severity":1,"message":"781","line":166,"column":23,"nodeType":"773","messageId":"774","endLine":166,"endColumn":31},{"ruleId":"771","severity":1,"message":"935","line":2,"column":85,"nodeType":"773","messageId":"774","endLine":2,"endColumn":93},{"ruleId":"771","severity":1,"message":"784","line":15,"column":12,"nodeType":"773","messageId":"774","endLine":15,"endColumn":19},{"ruleId":"775","severity":1,"message":"776","line":25,"column":8,"nodeType":"777","endLine":25,"endColumn":17,"suggestions":"938"},{"ruleId":"775","severity":1,"message":"830","line":43,"column":8,"nodeType":"777","endLine":43,"endColumn":16,"suggestions":"939"},{"ruleId":"771","severity":1,"message":"781","line":57,"column":23,"nodeType":"773","messageId":"774","endLine":57,"endColumn":31},{"ruleId":"771","severity":1,"message":"781","line":100,"column":23,"nodeType":"773","messageId":"774","endLine":100,"endColumn":31},{"ruleId":"771","severity":1,"message":"940","line":130,"column":11,"nodeType":"773","messageId":"774","endLine":130,"endColumn":21},{"ruleId":"771","severity":1,"message":"781","line":146,"column":23,"nodeType":"773","messageId":"774","endLine":146,"endColumn":31},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["941"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["942"],"'response' is assigned a value but never used.","'vals3' is defined but never used.","'isDetail' is assigned a value but never used.","'loading' is assigned a value but never used.","no-native-reassign",["943"],"no-negated-in-lhs",["944"],"'cups2' is defined but never used.","'refresh' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["945"],"'size' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'baker.dislikes.users.length', 'baker.followers.users.length', 'baker.length', and 'baker.likes.users.length'. Either include them or remove the dependency array.",["946"],["947"],"'cups1' is defined but never used.","'Switch' is defined but never used.","'passwordError' is assigned a value but never used.","'emailError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["948"],"'Links' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'IoEnter' is defined but never used.","'IoLogInSharp' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'search' is defined but never used.","React Hook useEffect has missing dependencies: 'props', 'token', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["949"],"'logo5' is defined but never used.","'PastryDetail' is defined but never used.","'filter' is assigned a value but never used.","'detail' is assigned a value but never used.","'value' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'pans2' is defined but never used.",["950"],"'user' is assigned a value but never used.",["951"],"'name' is assigned a value but never used.","'image' is assigned a value but never used.",["952"],"React Hook useEffect has missing dependencies: 'pastry.dislikes.users.length', 'pastry.length', and 'pastry.likes.users.length'. Either include them or remove the dependency array.",["953"],["954"],"React Hook useEffect has missing dependencies: 'pastry.length', 'pastry.message', 'pastry.pastryId.dislikes.users.length', 'pastry.pastryId.likes.users.length', and 'pastry.quantity'. Either include them or remove the dependency array.",["955"],"React Hook useEffect has a missing dependency: 'setShow'. Either include it or remove the dependency array.",["956"],["957"],"'Button' is defined but never used.","'setPage' is assigned a value but never used.","'total' is assigned a value but never used.","'message' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["958"],"'Select' is defined but never used.","'animatedComponents' is assigned a value but never used.","'categories' is assigned a value but never used.","'idCard' is assigned a value but never used.","'errorIdCard' is assigned a value but never used.","'companyName' is assigned a value but never used.","'setIdCard' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'errorCompanyName' is assigned a value but never used.","'setErrorIdCard' is assigned a value but never used.","'setErrorCompanyName' is assigned a value but never used.","'_categories' is assigned a value but never used.","'colourStyles' is assigned a value but never used.","'IoCalendar' is defined but never used.",["959"],"'IoBrush' is defined but never used.","'IoDocument' is defined but never used.","'ButtonOne' is defined but never used.","'LinkOne' is defined but never used.",["960"],"React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["961"],"React Hook useEffect has a missing dependency: '_bakers'. Either include it or remove the dependency array.",["962"],"'PastryCart' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["963"],"React Hook useEffect has a missing dependency: '_users'. Either include it or remove the dependency array.",["964"],"'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page', 'props', and 'user._id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["965"],"React Hook useEffect has a missing dependency: '_pastries'. Either include it or remove the dependency array.",["966"],"React Hook useEffect has missing dependencies: 'props', 'token', and 'user._id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["967"],"React Hook useEffect has a missing dependency: '_orders'. Either include it or remove the dependency array.",["968"],["969"],"React Hook useEffect has a missing dependency: 'pastry'. Either include it or remove the dependency array.",["970"],"'Selector' is defined but never used.","'errorCategories' is assigned a value but never used.","'Redirect' is defined but never used.","'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["971"],["972"],"'Link' is defined but never used.","'typeError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.categories'. Either include it or remove the dependency array.",["973"],"'Spacer' is defined but never used.","'logo6' is defined but never used.","React Hook useEffect has missing dependencies: 'bakerId', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["974"],["975"],["976"],["977"],["978"],"'data' is defined but never used.",["979"],["980"],"'IoTrashBinSharp' is defined but never used.","React Hook useEffect has missing dependencies: '_user.dislikes.users.length', '_user.length', '_user.likes.users.length', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["981"],"'IoClose' is defined but never used.","'IoPhonePortraitOutline' is defined but never used.","'Notification' is defined but never used.","'HNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'order.length', 'order.userId.dislikes.users.length', 'order.userId.likes.users.length', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["982"],"'locationError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'locations', 'props', 'user.email', 'user.location', 'user.name', and 'user.telNumber'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["983"],"React Hook useEffect has missing dependencies: 'pastry.description', 'pastry.discount', 'pastry.image', 'pastry.name', 'pastry.price', 'pastry.recipe', 'pastry.type', and 'user.categories'. Either include them or remove the dependency array.",["984"],"React Hook useEffect has missing dependencies: '_categories', 'locations', 'user.about', 'user.categories', 'user.companyName', 'user.email', 'user.location', 'user.momoName', 'user.momoNumber', 'user.name', and 'user.telNumber'. Either include them or remove the dependency array.",["985"],"React Hook useEffect has missing dependencies: 'user.email', 'user.name', 'user.telNumber', and 'user.type'. Either include them or remove the dependency array.",["986"],"'locationStyles' is assigned a value but never used.","'IoThumbsDown' is defined but never used.","'IoThumbsUp' is defined but never used.","'likes' is assigned a value but never used.","'dislikes' is assigned a value but never used.","'disLikePastry' is assigned a value but never used.","'likePastry' is assigned a value but never used.","'AddToCart' is assigned a value but never used.","'IoWallet' is defined but never used.",["987"],["988"],["989"],["990"],"'EditPastry' is assigned a value but never used.",{"desc":"991","fix":"992"},{"desc":"993","fix":"994"},"no-global-assign","no-unsafe-negation",{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"999","fix":"1005"},{"desc":"999","fix":"1006"},{"desc":"999","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"999","fix":"1010"},{"desc":"1011","fix":"1012"},{"desc":"1013","fix":"1014"},{"desc":"999","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"995","fix":"1018"},{"desc":"999","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1020","fix":"1024"},{"desc":"1025","fix":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1033","fix":"1034"},{"desc":"1016","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1029","fix":"1048"},{"desc":"1020","fix":"1049"},{"desc":"1022","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1033","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"999","fix":"1066"},{"desc":"1008","fix":"1067"},{"desc":"999","fix":"1068"},{"desc":"1011","fix":"1069"},"Update the dependencies array to be: [isDetail, props]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [refresh, user]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [props]",{"range":"1074","text":"1075"},"Update the dependencies array to be: [baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]",{"range":"1076","text":"1077"},"Update the dependencies array to be: [props, refresh]",{"range":"1078","text":"1079"},"Update the dependencies array to be: [props, token, user]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [props, refresh, token, user]",{"range":"1082","text":"1083"},{"range":"1084","text":"1079"},{"range":"1085","text":"1079"},{"range":"1086","text":"1079"},"Update the dependencies array to be: [detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length]",{"range":"1087","text":"1088"},{"range":"1089","text":"1079"},"Update the dependencies array to be: [detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [setShow, show]",{"range":"1092","text":"1093"},{"range":"1094","text":"1079"},"Update the dependencies array to be: [page, props]",{"range":"1095","text":"1096"},{"range":"1097","text":"1075"},{"range":"1098","text":"1079"},"Update the dependencies array to be: [props, refresh, token]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [_bakers, text]",{"range":"1101","text":"1102"},{"range":"1103","text":"1100"},"Update the dependencies array to be: [_users, text]",{"range":"1104","text":"1105"},"Update the dependencies array to be: [isOpen, refresh, isEdit, user._id, page, props]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [_pastries, text]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [props, refresh, token, user._id]",{"range":"1110","text":"1111"},"Update the dependencies array to be: [_orders, text]",{"range":"1112","text":"1113"},{"range":"1114","text":"1096"},"Update the dependencies array to be: [pastry, text]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [rbakers, token]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [rusers, token]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [isOpen, user.categories]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [bakerId, props, refresh, token]",{"range":"1123","text":"1124"},"Update the dependencies array to be: [_pastries, filter]",{"range":"1125","text":"1126"},{"range":"1127","text":"1109"},{"range":"1128","text":"1100"},{"range":"1129","text":"1102"},"Update the dependencies array to be: [props, token]",{"range":"1130","text":"1131"},{"range":"1132","text":"1113"},"Update the dependencies array to be: [_user.dislikes.users.length, _user.length, _user.likes.users.length, detail, props]",{"range":"1133","text":"1134"},"Update the dependencies array to be: [detail, order.length, order.userId.dislikes.users.length, order.userId.likes.users.length, props]",{"range":"1135","text":"1136"},"Update the dependencies array to be: [locations, props, refresh, user.email, user.location, user.name, user.telNumber]",{"range":"1137","text":"1138"},"Update the dependencies array to be: [isOpen, pastry.description, pastry.discount, pastry.image, pastry.name, pastry.price, pastry.recipe, pastry.type, user.categories]",{"range":"1139","text":"1140"},"Update the dependencies array to be: [_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",{"range":"1141","text":"1142"},"Update the dependencies array to be: [user.email, user.name, user.telNumber, user.type]",{"range":"1143","text":"1144"},{"range":"1145","text":"1079"},{"range":"1146","text":"1088"},{"range":"1147","text":"1079"},{"range":"1148","text":"1091"},[951,961],"[isDetail, props]",[2851,2860],"[refresh, user]",[796,798],"[props]",[1277,1285],"[baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]",[1501,1510],"[props, refresh]",[597,610],"[props, token, user]",[2923,2932],"[props, refresh, token, user]",[850,859],[865,874],[1020,1029],[1465,1473],"[detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length]",[1011,1020],[4194,4202],"[detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",[273,279],"[setShow, show]",[888,897],[1632,1634],"[page, props]",[1477,1479],[1077,1086],[3022,3031],"[props, refresh, token]",[3891,3897],"[_bakers, text]",[2603,2612],[3180,3186],"[_users, text]",[2545,2570],"[isOpen, refresh, isEdit, user._id, page, props]",[3025,3031],"[_pastries, text]",[2829,2838],"[props, refresh, token, user._id]",[3279,3285],"[_orders, text]",[2173,2175],[2655,2661],"[pastry, text]",[2387,2396],"[rbakers, token]",[3414,3422],"[rusers, token]",[1668,1676],"[isOpen, user.categories]",[2837,2846],"[bakerId, props, refresh, token]",[3110,3118],"[_pastries, filter]",[3206,3212],[2737,2746],[2836,2842],[2739,2741],"[props, token]",[3225,3231],[1202,1210],"[_user.dislikes.users.length, _user.length, _user.likes.users.length, detail, props]",[1150,1158],"[detail, order.length, order.userId.dislikes.users.length, order.userId.likes.users.length, props]",[2554,2563],"[locations, props, refresh, user.email, user.location, user.name, user.telNumber]",[2133,2141],"[isOpen, pastry.description, pastry.discount, pastry.image, pastry.name, pastry.price, pastry.recipe, pastry.type, user.categories]",[4197,4199],"[_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",[1758,1760],"[user.email, user.name, user.telNumber, user.type]",[1020,1029],[1465,1473],[1018,1027],[1544,1552]]