[{"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js":"1","/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js":"2","/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js":"3","/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js":"4","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js":"5","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js":"6","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js":"7","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js":"8","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js":"9","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js":"10","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js":"11","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js":"12","/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js":"13","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js":"14","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js":"15","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js":"16","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js":"17","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js":"18","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js":"19","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js":"20","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js":"21","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerDetail/Baker.detail.js":"22","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js":"23","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js":"24","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js":"25","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js":"26","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js":"27","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js":"28","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js":"29","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js":"30","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js":"31","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js":"32","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js":"33","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js":"34","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js":"35","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js":"36","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js":"37","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js":"38","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js":"39","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js":"40","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js":"41","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js":"42","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js":"43","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js":"44","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js":"45","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js":"46","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js":"47","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js":"48","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js":"49","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js":"50","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js":"51","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js":"52","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js":"53","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js":"54","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js":"55","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js":"56","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js":"57","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js":"58","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js":"59","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js":"60","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js":"61","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js":"62","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js":"63","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js":"64","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js":"65","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js":"66","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js":"67","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js":"68","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js":"69","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js":"70","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js":"71","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js":"72","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js":"73","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js":"74","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js":"75","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js":"76","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js":"77","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js":"78","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js":"79","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js":"80","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js":"81","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js":"82","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js":"83","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js":"84","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js":"85","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js":"86","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js":"87","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js":"88","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js":"89","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js":"90","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js":"91","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js":"92","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js":"93","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js":"94","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js":"95","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js":"96","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js":"97","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js":"98","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js":"99","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js":"100","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js":"101","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js":"102","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js":"103","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js":"104","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js":"105","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js":"106"},{"size":512,"mtime":1611009311383,"results":"107","hashOfConfig":"108"},{"size":535,"mtime":1611180593883,"results":"109","hashOfConfig":"108"},{"size":362,"mtime":1606471040948,"results":"110","hashOfConfig":"108"},{"size":634,"mtime":1613513272897,"results":"111","hashOfConfig":"108"},{"size":346,"mtime":1610230166303,"results":"112","hashOfConfig":"108"},{"size":435,"mtime":1616617718996,"results":"113","hashOfConfig":"108"},{"size":577,"mtime":1611176122563,"results":"114","hashOfConfig":"108"},{"size":1452,"mtime":1616616968097,"results":"115","hashOfConfig":"108"},{"size":4696,"mtime":1616618502498,"results":"116","hashOfConfig":"108"},{"size":1269,"mtime":1616676946672,"results":"117","hashOfConfig":"108"},{"size":3214,"mtime":1616621274698,"results":"118","hashOfConfig":"108"},{"size":1682,"mtime":1616284255578,"results":"119","hashOfConfig":"108"},{"size":2358,"mtime":1607268694251,"results":"120","hashOfConfig":"108"},{"size":127,"mtime":1611174635359,"results":"121","hashOfConfig":"108"},{"size":403,"mtime":1616385435415,"results":"122","hashOfConfig":"108"},{"size":2299,"mtime":1615045791817,"results":"123","hashOfConfig":"108"},{"size":421,"mtime":1614464076454,"results":"124","hashOfConfig":"108"},{"size":492,"mtime":1614464046520,"results":"125","hashOfConfig":"108"},{"size":2762,"mtime":1615045561924,"results":"126","hashOfConfig":"108"},{"size":3209,"mtime":1616848187225,"results":"127","hashOfConfig":"108"},{"size":3095,"mtime":1616687934580,"results":"128","hashOfConfig":"108"},{"size":2013,"mtime":1615555255236,"results":"129","hashOfConfig":"108"},{"size":1001,"mtime":1614859758854,"results":"130","hashOfConfig":"108"},{"size":291,"mtime":1610495432429,"results":"131","hashOfConfig":"108"},{"size":61,"mtime":1610495959140,"results":"132","hashOfConfig":"108"},{"size":266,"mtime":1616845042167,"results":"133","hashOfConfig":"108"},{"size":562,"mtime":1615556967780,"results":"134","hashOfConfig":"108"},{"size":358,"mtime":1616844851163,"results":"135","hashOfConfig":"108"},{"size":6825,"mtime":1616619806605,"results":"136","hashOfConfig":"108"},{"size":2679,"mtime":1613342502978,"results":"137","hashOfConfig":"108"},{"size":1520,"mtime":1616687688120,"results":"138","hashOfConfig":"108"},{"size":5894,"mtime":1616847120591,"results":"139","hashOfConfig":"108"},{"size":1429,"mtime":1613342737738,"results":"140","hashOfConfig":"108"},{"size":1110,"mtime":1611180422491,"results":"141","hashOfConfig":"108"},{"size":255,"mtime":1611009311399,"results":"142","hashOfConfig":"108"},{"size":491,"mtime":1613332062363,"results":"143","hashOfConfig":"108"},{"size":1188,"mtime":1615511477026,"results":"144","hashOfConfig":"108"},{"size":1627,"mtime":1616616896846,"results":"145","hashOfConfig":"108"},{"size":383,"mtime":1614540322693,"results":"146","hashOfConfig":"108"},{"size":610,"mtime":1614545600016,"results":"147","hashOfConfig":"108"},{"size":334,"mtime":1613259539924,"results":"148","hashOfConfig":"108"},{"size":549,"mtime":1613257854878,"results":"149","hashOfConfig":"108"},{"size":359,"mtime":1611183418811,"results":"150","hashOfConfig":"108"},{"size":970,"mtime":1616616861750,"results":"151","hashOfConfig":"108"},{"size":434,"mtime":1611177187515,"results":"152","hashOfConfig":"108"},{"size":1849,"mtime":1611179424823,"results":"153","hashOfConfig":"108"},{"size":183,"mtime":1613259470001,"results":"154","hashOfConfig":"108"},{"size":793,"mtime":1615480764634,"results":"155","hashOfConfig":"108"},{"size":791,"mtime":1613603676338,"results":"156","hashOfConfig":"108"},{"size":672,"mtime":1616527421000,"results":"157","hashOfConfig":"108"},{"size":2235,"mtime":1615044148513,"results":"158","hashOfConfig":"108"},{"size":3575,"mtime":1614914033630,"results":"159","hashOfConfig":"108"},{"size":8533,"mtime":1616286410150,"results":"160","hashOfConfig":"108"},{"size":9421,"mtime":1615406987096,"results":"161","hashOfConfig":"108"},{"size":2745,"mtime":1616619685749,"results":"162","hashOfConfig":"108"},{"size":610,"mtime":1616412671041,"results":"163","hashOfConfig":"108"},{"size":486,"mtime":1613342480562,"results":"164","hashOfConfig":"108"},{"size":1063,"mtime":1613331168151,"results":"165","hashOfConfig":"108"},{"size":1980,"mtime":1613334010555,"results":"166","hashOfConfig":"108"},{"size":2081,"mtime":1613333362699,"results":"167","hashOfConfig":"108"},{"size":8684,"mtime":1615409473588,"results":"168","hashOfConfig":"108"},{"size":651,"mtime":1616688912700,"results":"169","hashOfConfig":"108"},{"size":633,"mtime":1616621328958,"results":"170","hashOfConfig":"108"},{"size":4540,"mtime":1613248837949,"results":"171","hashOfConfig":"108"},{"size":6233,"mtime":1614858720126,"results":"172","hashOfConfig":"108"},{"size":316,"mtime":1613253405198,"results":"173","hashOfConfig":"108"},{"size":386,"mtime":1613253972814,"results":"174","hashOfConfig":"108"},{"size":356,"mtime":1616258507745,"results":"175","hashOfConfig":"108"},{"size":374,"mtime":1615496469829,"results":"176","hashOfConfig":"108"},{"size":332,"mtime":1613330590435,"results":"177","hashOfConfig":"108"},{"size":986,"mtime":1613515273746,"results":"178","hashOfConfig":"108"},{"size":1758,"mtime":1614727665904,"results":"179","hashOfConfig":"108"},{"size":498,"mtime":1614462510520,"results":"180","hashOfConfig":"108"},{"size":586,"mtime":1614554508990,"results":"181","hashOfConfig":"108"},{"size":1164,"mtime":1614547439588,"results":"182","hashOfConfig":"108"},{"size":2268,"mtime":1614899567812,"results":"183","hashOfConfig":"108"},{"size":2280,"mtime":1614727645776,"results":"184","hashOfConfig":"108"},{"size":6530,"mtime":1616278945627,"results":"185","hashOfConfig":"108"},{"size":3261,"mtime":1616286257490,"results":"186","hashOfConfig":"108"},{"size":5140,"mtime":1616286103470,"results":"187","hashOfConfig":"108"},{"size":3167,"mtime":1616286237742,"results":"188","hashOfConfig":"108"},{"size":5591,"mtime":1614849330908,"results":"189","hashOfConfig":"108"},{"size":911,"mtime":1614850173792,"results":"190","hashOfConfig":"108"},{"size":1957,"mtime":1615555237872,"results":"191","hashOfConfig":"108"},{"size":3953,"mtime":1615551437668,"results":"192","hashOfConfig":"108"},{"size":4237,"mtime":1615513126190,"results":"193","hashOfConfig":"108"},{"size":2081,"mtime":1615514393762,"results":"194","hashOfConfig":"108"},{"size":15158,"mtime":1616720099720,"results":"195","hashOfConfig":"108"},{"size":736,"mtime":1616694066645,"results":"196","hashOfConfig":"108"},{"size":699,"mtime":1616695834994,"results":"197","hashOfConfig":"108"},{"size":291,"mtime":1616258636674,"results":"198","hashOfConfig":"108"},{"size":709,"mtime":1615405380244,"results":"199","hashOfConfig":"108"},{"size":9858,"mtime":1616721111242,"results":"200","hashOfConfig":"108"},{"size":342,"mtime":1615556857056,"results":"201","hashOfConfig":"108"},{"size":627,"mtime":1616284676454,"results":"202","hashOfConfig":"108"},{"size":388,"mtime":1616284627210,"results":"203","hashOfConfig":"108"},{"size":384,"mtime":1615511536170,"results":"204","hashOfConfig":"108"},{"size":1370,"mtime":1616719026596,"results":"205","hashOfConfig":"108"},{"size":245,"mtime":1616258594386,"results":"206","hashOfConfig":"108"},{"size":1092,"mtime":1616364895490,"results":"207","hashOfConfig":"108"},{"size":6750,"mtime":1616284216226,"results":"208","hashOfConfig":"108"},{"size":9863,"mtime":1616847476331,"results":"209","hashOfConfig":"108"},{"size":9347,"mtime":1616685412412,"results":"210","hashOfConfig":"108"},{"size":6412,"mtime":1616690251804,"results":"211","hashOfConfig":"108"},{"size":367,"mtime":1616844825775,"results":"212","hashOfConfig":"108"},{"size":151,"mtime":1616844786719,"results":"213","hashOfConfig":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},"njy6to",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"217"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"217"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"217"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"217"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"217"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"217"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"217"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"217"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"217"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"217"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"217"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"217"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"217"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"217"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"217"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"217"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"217"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"217"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"217"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"217"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"217"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"217"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"217"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"217"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"217"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"217"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"217"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"217"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"217"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"217"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"217"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"217"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"217"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"217"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"217"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"217"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"217"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"217"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"217"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"217"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"217"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js",["473"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["474","475"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js",["476"],"import React from 'react';\nimport { jbInc } from '../../res/img';\n\nimport styles from './Admin.module.css'\n\nconst Admin = (props) => {\n    const {error} = props;\n    return (\n        <section className={styles.admin}>\n            <div className={styles.adminBox}>\n                <h2 className={styles.adminTitle}>Welcome Admin</h2>\n                <div className={styles.adminContainer}>\n                    <img src={jbInc} alt=\"Powered by Jb Inc\" className={styles.adminLogo} />\n                    <div className={styles.adminSignIn}>\n                        <div className={styles.adminSignInSheet}>\n                            <input type=\"text\" className={styles.adminInput} id=\"user\" name=\"user\" placeholder=\"User Name\" required />\n                            <label htmlFor=\"user\" className={styles.adminLabel}>Username</label>\n                        </div>\n                        <div className={styles.adminSignInSheet}>\n                            <input type=\"password\" className={styles.adminInput} id=\"password\" name=\"password\" placeholder=\"Password\"\n                                required />\n                            <label htmlFor=\"password\" className={styles.adminLabel}>Password</label>\n                        </div>\n                        <button className={styles.adminBtn} type=\"submit\">Login</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Admin;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js",["477"],"import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport { Header, NavBar } from '../../Components';\nimport { BakerDetails, RegisterSection } from '../../sections';\n\nimport styles from './Register.module.css';\n\nconst Register = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [tel, setTel] = useState('');\n    const [password, setPassword] = useState('');\n    const [conPw, setConPw] = useState('');\n    const [idCard, setIdCard] = useState('');\n    const [companyName, setCompanyName] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [errorName, setErrorName] = useState(false);\n    const [errorEmail, setErrorEmail] = useState(false);\n    const [errorTel, setErrorTel] = useState(false);\n    const [errorPassword, setErrorPassword] = useState(false);\n    const [errorConPw, setErrorConPw] = useState(false);\n    const [errorIdCard, setErrorIdCard] = useState(false);\n    const [errorCompanyName, setErrorCompanyName] = useState(false);\n    const [errorCategories, setErrorCategories] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n\n    return (\n        <section className={styles.Signup}>\n            <Header />\n            <main>\n                <Route path=\"/register\" exact render={(props) => (<RegisterSection \n                    {...props} \n                    name={name}\n                    email={email}\n                    tel={tel}\n                    password={password}\n                    conPw={conPw}\n                    setName={setName}\n                    setEmail={setEmail}\n                    setTel={setTel}\n                    setPassword={setPassword}\n                    setConPw={setConPw}\n                    errorName={errorName}\n                    errorEmail={errorEmail}\n                    errorTel={errorTel}\n                    errorPassword={errorPassword}\n                    errorConPw={errorConPw}\n                    setErrorName={setErrorName}\n                    setErrorEmail={setErrorEmail}\n                    setErrorTel={setErrorTel}\n                    setErrorPassword={setErrorPassword}\n                    setErrorConPw={setErrorConPw}\n                    loading={loading}\n                    setLoading={setLoading}\n                    idCard={idCard}\n                    categories={categories}\n                    companyName={companyName}\n                    setIdCard={setIdCard}\n                    setCategories={setCategories}\n                    setCompanyName={setCompanyName}\n                    errorIdCard={errorIdCard}\n                    errorCategories={errorCategories}\n                    errorCompanyName={errorCompanyName}\n                    setErrorIdCard={setErrorIdCard}\n                    setErrorCategories={setErrorCategories}\n                    setErrorCompanyName={setErrorCompanyName}\n                 /> )} />\n                <Route path=\"/register/baker\" render={(props) => (<BakerDetails\n                    {...props}\n                    name={name}\n                    email={email}\n                    tel={tel}\n                    password={password}\n                    conPw={conPw}\n                    idCard={idCard}\n                    categories={categories}\n                    companyName={companyName}\n                    setName={setName}\n                    setEmail={setEmail}\n                    setTel={setTel}\n                    setPassword={setPassword}\n                    setConPw={setConPw}\n                    setIdCard={setIdCard}\n                    setCategories={setCategories}\n                    setCompanyName={setCompanyName}\n                    errorName={errorName}\n                    errorEmail={errorEmail}\n                    errorTel={errorTel}\n                    errorPassword={errorPassword}\n                    errorConPw={errorConPw}\n                    errorIdCard={errorIdCard}\n                    errorCategories={errorCategories}\n                    errorCompanyName={errorCompanyName}\n                    setErrorName={setErrorName}\n                    setErrorEmail={setErrorEmail}\n                    setErrorTel={setErrorTel}\n                    setErrorPassword={setErrorPassword}\n                    setErrorConPw={setErrorConPw}\n                    setErrorIdCard={setErrorIdCard}\n                    setErrorCategories={setErrorCategories}\n                    setErrorCompanyName={setErrorCompanyName}\n                    loading={loading}\n                    setLoading={setLoading}\n                 />)} />\n            </main>\n            <NavBar />\n        </section>\n    )\n}\n\nexport default Register;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js",["478"],"import React, {useState} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport styles from './User.module.css';\nimport {\n    SideNav, \n    Cart, \n    Bakers, \n    Pastries, \n    Orders,\n    Events,\n    \n} from '../../sections';\nimport { WorkArea } from '../../Components';\n\nconst User = () => {\n    const [isDetail, setIsDetail] = useState(false);\n\n    const toggleDetail = () => {\n        setIsDetail(!isDetail);\n    }\n\n    return (\n        <div>\n            <section className={styles.Panel}>\n                <SideNav isDetail={isDetail} />\n                <WorkArea isDetail={isDetail}>\n                    <Route path=\"/user/event\"  render={(props) => (<Events  {...props} isDetail={isDetail} setIsDetail={setIsDetail} /> )} />\n                    <Route path=\"/user/shop\" exact render={(props) => (<Bakers {...props}  />)} />\n                    <Route path=\"/user/shop/pastries\" render={(props) => (<Pastries {...props}  />)} />\n                    <Route path=\"/user/cart\" render={(props) => (<Cart {...props} />)} />\n                    <Route path=\"/user/orders\" render={(props) => (<Orders {...props} isDetail={isDetail} setIsDetail={setIsDetail} />)} />\n                </WorkArea>\n            </section>\n        </div>\n    )\n}\n\nexport default User;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js",["479"],"import React from 'react';\n\nimport styles from './OrderDetail.module.css'\nimport { vals3, vals4, vals5 } from '../../../res/img';\nimport { Button, Spacer } from '../../../Components';\n\nconst OrderDetail = (props) => {\n    const {isDetail, setIsDetail} = props;\n    return (\n        <div className={isDetail ? styles.orderDetail: styles.orderNoDetail}>\n            <div className={styles.orderDetailImgContainer}>\n                <div className={styles.orderDetailTitle}>\n                    <h2>Order Summary</h2>\n                </div>\n                <div className={styles.orderDetailImgs}>\n                    <img src={vals5} alt=\"Product\" className={[styles.orderDetailImg1 ,styles.orderDetailHover].join(' ')} />\n                    <img src={vals4} alt=\"Product\" className={[styles.orderDetailImg2 ,styles.orderDetailHover].join(' ')} />\n                    <img src={vals3} alt=\"Product\" className={[styles.orderDetailImg3 ,styles.orderDetailHover].join(' ')} />\n                </div>\n            </div>\n            <div className={styles.orderDetails}>\n                <h1>Order Details</h1>\n                <h1 className={styles.orderDescription}>Order status</h1>\n                <ul className={styles.orderDescriptionList}>\n                    <li  className={styles.orderDescriptionText}>Processing</li>\n                    <li  className={styles.orderDescriptionText}>Registered</li>\n                    <li  className={styles.orderDescriptionText}>On the way</li>\n                    <li  className={styles.orderDescriptionText}>Delivered</li>\n                </ul>\n                <h1 className={styles.orderDescription}>Pastries Ordered</h1>\n                <ul className={styles.orderDescriptionList}>\n                    <li  className={styles.orderDescriptionText}>Ice cake</li>\n                    <li  className={styles.orderDescriptionText}>Fire Cake</li>\n                    <li  className={styles.orderDescriptionText}>Banana cake</li>\n                    <li  className={styles.orderDescriptionText}>Cupcakes</li>\n                </ul>\n                <h1>Total: 193,000FCFA</h1>\n                <div>\n                    <Button title=\"Close\" onClick={() => setIsDetail()} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OrderDetail;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js",["480"],"import React from 'react';\n\nimport styles from './OrderList.module.css'\nimport { OrderTable, Spacer } from '../../../Components';\n\nconst OrderList = (props) => {\n     const {isDetail, setIsDetail} = props;\n    return (\n        <div className={isDetail ? styles.orderListDetail : styles.orderList}>\n            <OrderTable isDetail={isDetail} setIsDetail={setIsDetail} />\n        </div>\n    )\n}\n\nexport default OrderList;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js",["481"],"import React from 'react';\n\nimport styles from './EventList.module.css';\nimport { Spacer, CreateEvent, EventCard } from '../../../Components';\n\nconst EventList = (props) => {\n    const {setIsOpen, isDetail, setIsDetail} = props;\n    return (\n        <div className={isDetail ? styles.eventListDetail : styles.eventList}>\n            <EventCard isDetail={isDetail} setIsDetail={setIsDetail} />\n            <CreateEvent setIsOpen={setIsOpen}/>\n        </div>\n    )\n}\n\nexport default EventList;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js",["482","483"],"import React from 'react';\n\nimport styles from './EventDetail.module.css';\nimport { logo6, vals2 } from '../../../res/img';\nimport { Button, Link, Spacer } from '../../../Components';\n\nconst EventDetail = (props) => {\n    const {isDetail, setIsDetail, setIsOpenEdit} = props;\n    return (\n         <div className={isDetail ? styles.eventDetail : styles.eventNoDetail}>\n            <div className={styles.eventDetailImgContainer}>\n                <div className={styles.eventDetailTitle}>\n                    <h2>Purpose</h2>\n                </div>\n                <img src={vals2} alt=\"Product\" className={styles.eventDetailImg} />\n                <div className={styles.eventDetailCountdown}>\n                    <h1 className={styles.eventDetailDaysContainer}>\n                        <b className={styles.eventDetailDaysNumber}>12</b>\n                        <br />\n                        <b className={styles.eventDetailDaysText}>Days</b>\n                    </h1>\n                    <h3 className={styles.eventDetailTimeContainer}>\n                        <b className={styles.eventDetailTimeNumber}>12 14 16</b>\n                        <br />\n                        <b className={styles.eventDetailTimeText}>Hours mins secs</b>\n                    </h3>\n                </div>\n            </div>\n            <div className={styles.eventDetails}>\n                <h1>For: Tuijah Christian</h1>\n                <h1 className={styles.eventDescription}>Cart</h1>\n                <ul className={styles.eventDescriptionList}>\n                    <li  className={styles.eventDescriptionText}>Birthday Cakes</li>\n                    <li  className={styles.eventDescriptionText}>Wedding Cakes</li>\n                    <li  className={styles.eventDescriptionText}>Cookies</li>\n                    <li  className={styles.eventDescriptionText}>Valentines</li>\n                </ul>\n                <button className={styles.eventMoreDetails} onClick={() => setIsDetail()}>More Details</button>\n                <h1 className={styles.eventDescription}>Reason</h1>\n                <p className={styles.eventDescriptionText}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sin</p>\n                <div className={styles.eventButtons}>\n                    <Link danger={true} title=\"Delete\" link=\"#\" />\n                    <Button title=\"Edit\" onClick={() => setIsOpenEdit()} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EventDetail;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js",["484","485","486","487","488"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js",["489","490","491","492"],"import React, {useEffect, useState} from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { BakerCard, Notification } from '../../../../Components';\nimport styles from './BakerList.module.css'\nimport {BASE_URL} from '../../../../utils/globalVariable';\nimport {setBakers} from '../../../../redux/Actions/Data.actions';\n\nconst BakerList = (props) => {\n    const {isDetail, setIsDetail, token, setBaker, _baker} = props;\n\n    const [bakers, setBakers] = useState([]);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        // setBaker([1,2]);\n        setLoading(true);\n        setIsDetail(false);\n        fetch(`${BASE_URL}/bakers`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Basic ${token}`,\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n                props.setBakers(response.bakers);\n                setBakers(response.bakers);\n                setTotal(response.totalItems);\n            }\n            if (statusCode === 404) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n\n            if (statusCode === 500) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.'\n            })\n        })\n\n        return () => {\n            setTotal(0)\n            setLoading(false);\n            setShow(false);\n            setMessage({});\n            setBakers([]);\n        }\n\n    }, []);\n\n\n    return (\n        <div className={styles.bakersList}>\n            {bakers.map((baker, index) => <BakerCard isDetail={isDetail} _setBaker={setBaker} setIsDetail={setIsDetail} baker={baker} key={index} {...props}/>)}\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBakers}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerList);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerDetail/Baker.detail.js",[],["493","494"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js",["495","496"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './CartTable.module.css';\nimport { IoTrashBinSharp } from 'react-icons/io5';\n\nconst CartTable = (props) => { \n    const {isDetail, setIsDetail, setPastry, user} = props;\n\n    const showDetail = (pastry) => {\n        setIsDetail(true);\n        setPastry(pastry);\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [_user, setUser] = useState([]);\n    const [message, setMessage] = useState({});\n    const [cart, setCart] = useState({});\n\n    useEffect(() => {\n        fetch(`${BASE_URL}/user/getcart/${user._id}`, {\n            method: 'GET'\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setUser(response.user);\n                setCart(response.bakers);\n            }\n\n            if (statusCode === 404) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n\n            if (statusCode === 500) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: `Unexpected Error`,\n                message: `Please check your internet connection.`\n            });\n        })\n\n        return () => {\n            setLoading(false);\n            setUser([]);\n            setShow(false);\n            setMessage({});\n            setCart({});\n        }\n    }, [isDetail, loading]);\n\n    const Trash = (event, id) => {\n        event.stopPropagation();\n        setLoading(true);\n        fetch(`${BASE_URL}/user/removeFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    message: `Pastry removed from cart`,\n                    title: 'Success'\n                });\n\n            }\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `Not removed from cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            console.log(err);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    return (\n        <>\n            {Object.values(cart).map((pastries, index) => (\n                <div className={styles.cartSeparator} key={ index }>\n                    <h1 className={styles.cartListBaker}>Company: {Object.keys(cart)[index]} {_user.find(data => data.pastryId.creator.companyName === `${Object.keys(cart)[index]}`).pastryId.creator.suspend && <span className={styles.suspended}>Suspended, order at your own discretion.</span>}</h1>\n                    <table className={styles.cartTable}>\n                        <thead className={styles.cartTableHeader}>\n                            <td className={styles.cartTableHeadeData}>Product</td>\n                            <td className={styles.cartTableHeaderData}>Price</td>\n                            <td className={styles.cartTableHeaderData}>Quantity</td>\n                            <td className={styles.cartTableHeaderData}>Total</td>\n                        </thead>\n\n                    {pastries.map((pastry, index) => \n                        <tr className={styles.cartTableRow} onClick={() => showDetail(pastry)} key={index}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={`${BASE_URL}/${pastry.pastryId.image}`} alt={pastry.pastryId.name} className={styles.cartTableDataImage} />\n                                <b>{pastry.pastryId.name}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{Thousand(pastry.pastryId.price)}</td>\n                            <td className={styles.cartTableData}>{pastry.quantity} <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={(event) => Trash(event, pastry.pastryId._id)}><IoTrashBinSharp /></button></td>\n                            <td className={styles.cartTableData}>{Thousand(pastry.quantity * pastry.pastryId.price)}</td>\n                        </tr>\n                    )}\n                        <tr className={styles.cartTableRow}>\n                            <td colSpan=\"2\" className={[styles.cartTableData, styles.cartCoupon].join(' ')}>\n                                <input type=\"text\" placeholder=\"Coupon Code\" className={styles.cartCouponInput} /> \n                                <button className={styles.cartButton}>Apply</button>\n                            </td>\n                            <td colSpan=\"1\" className={[styles.cartTableData, styles.cartCoupon].join(' ')}>\n                                <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Order</button>\n                            </td>\n                            <td colSpan=\"1\" className={styles.cartTableData}>Total: {Thousand(Object.values(cart)[index].reduce((sum, pastry) => sum + (pastry.quantity * pastry.pastryId.price), 0))}</td>\n                        </tr>\n                    </table>\n                </div>\n            ))}\n            <Notification setShow={setShow} show={show} message={message} />\n        </>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(CartTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js",["497"],"import React from 'react';\n\nimport { pans2 } from '../../res/img';\nimport styles from './OrderTable.module.css';\n\nconst OrderTable = (props) => {\n    const {isDetail, setIsDetail} = props;\n    return (\n            <div className={styles.orderSeparator}>\n                <h1 className={styles.orderListBaker}>Baker: Cara Brown</h1>\n                <table className={styles.orderTable}>\n                    <thead className={styles.orderTableHeader}>\n                        <td className={styles.orderTableHeaderData}>Product</td>\n                        <td className={styles.orderTableHeaderData}>Price</td>\n                        <td className={styles.orderTableHeaderData}>Quantity</td>\n                        <td className={styles.orderTableHeaderData}>Total</td>\n                    </thead>\n                    <tr className={styles.orderTableRow}>\n                        <td className={[styles.orderTableData , styles.orderTableImageContainer].join(' ')}>\n                            <img src={pans2} alt=\"Pastry Name\" className={styles.orderTableDataImage} />\n                            <p>Ice Cake</p>\n                        </td>\n                        <td className={styles.orderTableData}>3000</td>\n                        <td className={styles.orderTableData}>3</td>\n                        <td className={styles.orderTableData}>9000</td>\n                    </tr>\n                    <tr className={styles.orderTableRow}>\n                        <td className={[styles.orderTableData, styles.orderTableImageContainer].join(' ')}>\n                            <img src={pans2} alt=\"Pastry Name\" className={styles.orderTableDataImage} />\n                            <p>Ice Cake</p>\n                        </td>\n                        <td className={styles.orderTableData}>40000</td>\n                        <td className={styles.orderTableData}>4</td>\n                        <td className={styles.orderTableData}>160,000</td>\n                    </tr>\n                    <tr className={styles.orderTableRow}>\n                        <td colSpan=\"2\" className={[styles.orderTableData, styles.orderCoupon].join(' ')}>\n                            <h3>Order Status: Processing</h3>\n                        </td>\n                        <td colSpan=\"1\" className={[styles.orderTableData, styles.orderCoupon].join(' ')}>\n                            <button className={styles.orderButton} onClick={() => setIsDetail()}>Details</button>\n                        </td>\n                        <td colSpan=\"1\" className={styles.orderTableData}>Total: 169,000</td>\n                    </tr>\n                </table>\n            </div>\n    )\n}\n\nexport default OrderTable;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js",["498"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button } from '..';\nimport { logo5, vals3 } from '../../res/img';\nimport styles from './BakerCard.module.css';\nimport {setBaker} from '../../redux/Actions/Auth.actions';\n\nconst BakerCard = (props) => {\n    const {isDetail, setIsDetail, baker, _setBaker,} = props;\n\n    const showDetail = (baker) => {\n        _setBaker(baker);\n        setIsDetail(true);\n    }\n\n    const bakerShop = (bakerId) => {\n        props.setBaker(bakerId);\n        props.history.push({pathname: '/user/shop/pastries'})\n    }\n\n    return (\n            <div className={styles.bakerListImgContainer}>\n                <div className={styles.bakerListTitle}>\n                    <h2>{baker.companyName}</h2>\n                </div>\n                <img src={vals3} alt={baker.name} className={styles.bakerListImg} />\n                <div className={styles.bakerListImgLogoContainer}>\n                    <img src={logo5} alt=\"Product\" className={styles.bakerListImgLogo}/>\n                </div>\n                <div className={styles.bakersButtonContainer}>\n                    <Button onClick={() => showDetail(baker)} title=\"Details\" />\n                    <Button onClick={() => bakerShop(baker._id)} title=\"Shop\" />\n                </div>\n            </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(BakerCard);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js",["499","500","501","502","503","504"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js",["505"],"import React from 'react';\nimport { Button, Link } from '..';\nimport { vals2 } from '../../res/img';\n\nimport styles from './EventCard.module.css';\n\nconst DisplayCard = (props) => {\n    const {isDetail, setIsDetail} = props;\n    return (\n        <div className={styles.eventListImgContainer}>\n                <div className={styles.eventListTitle}>\n                    <h2>wow</h2>\n                </div>\n                <img src={vals2} alt=\"Product\" className={styles.eventListImg} />\n                <div className={styles.eventListCountdown}>\n                    <h1 className={styles.eventListDaysContainer}>\n                        <b className={styles.eventListDaysNumber}>12</b>\n                        <br />\n                        <b className={styles.eventListDaysText}>Days</b>\n                    </h1>\n                    <h3 className={styles.eventListTimeContainer}>\n                        <b className={styles.eventListTimeNumber}>12 14 16</b>\n                        <br />\n                        <b className={styles.eventListTimeText}>Hours mins secs</b>\n                    </h3>\n                </div>\n                <div className={styles.eventButtonContainer}>\n                    <Button title=\"Details\" danger={false} onClick={()=>setIsDetail()} />\n                    <Link title=\"Shop\" danger={false} link=\"/events\" />\n                </div>\n            </div>\n    )\n}\n\nexport default DisplayCard;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js",["506"],"import React from 'react'\n\nimport styles from './Links.module.css';\n\nconst Links = (props) => {\n    const {data} = props\n    return <li className={data.listStyles}><a href={data.link} className={data.styles}>{data.title}</a></li>\n}\n\nexport default Links;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js",["507"],"import React, { useEffect, useState } from 'react';\nimport { IoSearch } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport styles from './SearchBar.module.css';\nimport {setPastries, setBakers} from '../../redux/Actions/Data.actions';\nimport search from '../../utils/search';\n\nconst SearchBar = (props) => {\n    const {pastries} = props;\n\n    const [text, setText] = useState('');\n\n    const filterData = (event) => {\n        setText(event.target.value);\n    }\n\n    useEffect(() => {\n        search(text, pastries, props.setPastries,'name');\n    }, [text]);\n\n    return (\n        <div className={styles.searchContainer}>\n            <span className={styles.searchIcon}><IoSearch /></span>\n            <input type=\"text\" className={styles.searchContainerInput} placeholder=\"Search\" onChange={(event) => filterData(event)} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({data}) => {\n    return {\n        pastries: data.pastries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setPastries, setBakers}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js",["508","509"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {IoCart, IoEnter, IoHome, IoLogIn, IoLogInSharp, IoPersonAdd} from 'react-icons/io5';\n\nimport styles from './NavBar.module.css';\n\nconst NavBar = () => {\n    return (\n        <div className={styles.navi}>\n            <input type=\"checkbox\" id=\"navi-toggle\" className={styles.naviCheckbox}/>\n            <label htmlFor=\"navi-toggle\" className={styles.naviButton}>\n                <span className={styles.naviIcon}></span>\n            </label>\n            <div className={styles.naviList}>\n                <span className={[styles.naviItem, styles.naviItem1].join(' ')}>\n                    <NavLink to=\"/\" exact title=\"Home\"  activeClassName={styles.naviActive} className={styles.naviLink}><IoHome /></NavLink>\n                </span>\n                <span className={[styles.naviItem, styles.naviItem2].join(' ')}>\n                    <NavLink to=\"/login\" title=\"About\" activeClassName={styles.naviActive} className={styles.naviLink}><IoLogIn /></NavLink>\n                </span>\n                <span className={[styles.naviItem, styles.naviItem3].join(' ')}>\n                    <NavLink to=\"/register\" title=\"Gallery\" activeClassName={styles.naviActive} className={styles.naviLink}><IoPersonAdd /></NavLink>\n                </span>\n                <span className={[styles.naviItem, styles.naviItem4].join(' ')}>\n                    <NavLink to=\"/user/cart\" title=\"Story\" activeClassName={styles.naviActive} className={styles.naviLink}><IoCart /></NavLink>\n                </span>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js",["510","511","512"],"import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst Input = (props) => {\n    const {placeholder, label, value, setValue, len, type, error, setError} = props;\n    return (\n        <div className={styles.formGroup2}>\n            <input \n                type={type}\n                className={[\n                    styles.formInput,\n                    len === 1 ?  \n                    styles.formLength1 :\n                    len === 2 ?\n                    styles.formLength2 :\n                    len === 3 ?\n                    styles.formLength3 :\n                    len === 4 ?\n                    styles.formLength4 :\n                    styles.formLength5\n                ].join(' ')} \n                name={label} id={label} \n                placeholder={placeholder} \n                onChange={setValue} />\n                <label htmlFor={label} className={styles.formLabel}>{label}</label>\n        </div>\n    )\n}\n\nexport default Input;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js",["513","514","515"],"import React, { useState } from 'react';\n\nimport styles from './Header.module.css';\nimport {Links} from '../../Components';\nimport logo from \"../../res/img/caracakes2.png\";\n\nconst Header = (props) => {\n    const [active, setActive] = useState(1)\n    return (\n        <div className={styles.container}>\n            <img src={logo} alt=\"CaraCakes\" className={styles.containerLogo} />\n        </div>\n    )\n};\n    \nexport default Header;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js",["516","517","518"],"import React from 'react';\nimport { IoLogoFacebook, IoLogoInstagram, IoLogoWhatsapp, IoMail, IoPhonePortrait } from 'react-icons/io5';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './Footer.module.css';\nimport {jbInc, logo8} from '../../res/img';\n\nconst Footer = () => {\n    return (\n        <footer className={styles.secFooter}>\n            <div className={styles.footerLogoBox}>\n                <img src={logo8} alt=\"CaraCakes\" className={styles.footerLogo} />\n            </div>\n    <div className={styles.secContainer}>\n        <div className={[styles.secSide, styles.footerLinks].join(' ')}>\n            <div>\n                <div className={styles.footerLeft}>\n                    <h3 className={styles.subTitle}>\n                        Locations\n                    </h3>\n                    <ul className={styles.footerList}>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Buea</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Limbe</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Bamenda</NavLink></li>\n                    </ul>\n                </div>\n                <div className={styles.footerRight}>\n                    <h3 className={styles.subTitle}>\n                        Protocol\n                    </h3>\n                    <ul className={styles.footerList}>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Terms and Condition</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Privacy Policy</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Careers</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerDev}>JB Inc</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerDev}>Jume Brice</NavLink></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div className={styles.secSide}>\n            <div className={styles.footerCreator}>\n                <div className={styles.footerCreatorBox}>\n                    <img src={jbInc} alt=\"Creator\" className={styles.footerImage} />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div className={styles.footerContacts}>\n        <span className={styles.footerContactsRound}><a href='https://www.facebook.com/jume.njah' target=\"_blank\"><IoLogoFacebook className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}><a href='tel:237679574561'><IoPhonePortrait className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}><a href='mailto:bricejume@gmail.com'><IoMail className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}>\n            <a \n                href=\"https://wa.me/237681726633?text=Good%20day,%20Mr%20Jume%20Brice,%20I'm%20interested%20in%20creating%20a%20baker%20account%20for%20my%20pastry%20business\"\n                target=\"_blank\"\n            >\n                <IoLogoWhatsapp />\n            </a></span>\n    </div>\n    <div className={styles.copyRight}>\n        <p>Copyright &copy; of JBInc</p>\n    </div>\n</footer>\n    )\n}\n\nexport default Footer;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js",["519","520","521","522","523","524","525","526","527","528","529","530","531","532"],"import React, { useState } from 'react';\nimport makeAnimated from 'react-select/animated';\nimport Select from 'react-select';\n\nimport { ButtonOne, Input, LinkOne, Notification } from '../../Components';\nimport RadioButton from '../../Components/RadioButtons/RadioButtons.component';\nimport { AuthMail, AuthTel } from '../../utils/auth';\nimport styles from './Register.module.css';\nimport {BASE_URL} from '../../utils/globalVariable';\n\nconst animatedComponents = makeAnimated();\n\nconst RegisterSection = (props) => {\n    const {\n        name,\n        email,\n        tel,\n        password,\n        conPw,\n        categories,\n        idCard,\n        errorIdCard,\n        setName,\n        setEmail,\n        companyName,\n        setTel,\n        setIdCard,\n        setPassword,\n        setCompanyName,\n        setCategories,\n        setConPw,\n        errorName,\n        errorEmail,\n        errorCompanyName,\n        errorTel,\n        errorPassword,\n        errorConPw,\n        setErrorName,\n        setErrorEmail,\n        setErrorTel,\n        setErrorIdCard,\n        setErrorPassword,\n        setErrorCompanyName,\n        setErrorConPw,\n        loading,\n        setLoading,\n    } = props;\n\n    const [type, setType] = useState('');\n    const [_categories] = useState([\n        { value: 'birthday-cake', label: 'Birthday Cakes' },\n        { value: 'wedding-cake', label: 'Wedding Cakes' },\n        { value: 'cookies', label: 'Cookies' },\n        { value: 'doughnuts', label: 'Doughnuts' },\n        { value: 'pancakes', label: 'Pancakes' },\n        { value: 'cup-cakes', label: 'Cup Cake' },\n    ]);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    \n    const nextPage = () => {\n        props.history.push({pathname: '/register/baker'});\n    }\n\n    const authenticate = () => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 5) {\n            hasError = true;\n            setErrorName(true);\n        }\n\n        if (!AuthMail(email)) {\n            hasError = true;\n            setErrorEmail(true);\n        }\n\n        if (!AuthTel(tel)) {\n            hasError = true;\n            setErrorTel(true);\n        }\n\n        if(password.length < 5) {\n            hasError = true;\n            setErrorPassword(true);\n        }\n\n        if (password !== conPw) {\n            hasError = true;\n            setErrorPassword(true);\n            setErrorConPw(true);\n        }\n\n        if(hasError) {\n            console.log(name, email, tel, password, conPw);\n            setLoading(false)\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Invalid Data',\n                message: 'Data provided is not correct, please check again.'\n            })\n            return false;\n        }\n\n        const body = {\n            name,\n            tel,\n            email,\n            password\n        }\n\n        let statusCode, responseJson;\n        let url = `${BASE_URL}/user/register`;\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n        .then((response) => {\n            statusCode = response.status;\n            responseJson = response.json();\n            return Promise.all([statusCode, responseJson]);\n        })\n        .then((res) => {\n            statusCode = res[0];\n            responseJson = res[1];\n            setLoading(false);\n            if(statusCode === 201) {\n                console.log(responseJson);\n                props.history.push({pathname: '/login'});\n            }\n            if(statusCode === 422) {\n                console.log(responseJson, '422');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: responseJson.data[0].msg,\n                })\n            }\n            if(statusCode === 500) {\n                console.log(responseJson, '500');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: responseJson.message,\n                })\n            }\n            // console.log(responseJson);\n        })\n        .catch(err => {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.'\n            })\n        })\n    }\n\n    return (\n        <section className={styles.secSignup} id=\"signup\">\n            <div className={styles.signup}>\n                <div className={styles.signupForm}>\n                    <div>\n                        <Input \n                            len={1}\n                            type='text'\n                            placeholder=\"Jane Price\"\n                            label=\"Name\"\n                            value={name}\n                            setValue={(event) => setName(event.target.value)}\n                            error={errorName}\n                            serError={() => setErrorName()}\n                        />\n                        <Input\n                            len={2}\n                            type=\"email\"\n                            placeholder=\"janeprice@gmail.com\"\n                            label=\"Email\"\n                            value={email}\n                            setValue={(event) => setEmail(event.target.value)}\n                            error={errorEmail}\n                            serError={() => setErrorEmail()}\n                            />\n                            <Input\n                            len={3}\n                            type='number'\n                            placeholder={681726633}\n                            label=\"Telephone number\"\n                            value={tel}\n                            setValue={(event) => setTel(event.target.value)}\n                            error={errorTel}\n                            serError={() => setErrorTel()}\n                            />\n                        <div className={styles.formGroup}>\n                            <RadioButton type=\"Client\" setType={setType} />\n                            <RadioButton type=\"Baker\" setType={setType} />\n                        </div>\n                        {type === \"Client\" && (\n                            <>\n                                <Input\n                                    len={4}\n                                    type=\"password\"\n                                    placeholder=\"********\"\n                                    label=\"Password\"\n                                    value={password}\n                                    setValue={(event) => setPassword(event.target.value)}\n                                    error={errorPassword}\n                                    serError={() => setErrorPassword()}\n                                />\n                                <Input\n                                    len={5}\n                                    type=\"password\"\n                                    placeholder=\"********\"\n                                    label=\"Confirm password\"\n                                    value={conPw}\n                                    setValue={(event) => setConPw(event.target.value)}\n                                    error={errorConPw}\n                                    serError={() => setErrorConPw()}\n                                />\n                            </>\n                        )}\n                        <div className={styles.formGroup}>\n                            {type === \"Client\" && (\n                                <>\n                                    <LinkOne link=\"/login\" title=\"Login\" />\n                                    <ButtonOne title={loading ? 'Creating...' : \"Register\"} onClick={() => authenticate()} loading={loading} />\n                                </>\n                            )}\n                            {type === \"Baker\" && <ButtonOne title=\"Next\" onClick={() => nextPage()} />}\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.signupContainer}>\n                    <h2 className={styles.title}>\n                        Sign up\n                    </h2>\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </section>\n    )\n}\n\nexport default RegisterSection;\n\nconst colourStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#ff1493\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderBottom: '2px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: isFocused ? \"#ff1493\" : 'transparent',\n    borderRadius: '2px',\n    // overflow: 'hidden',\n    // clipPath: ,\n    \n    '&:hover': {\n        border: 'none',\n        boxShadow: 'none',\n        borderBottom: '2px',\n        borderBottomStyle: 'solid',\n        borderBottomColor: isFocused ? \"#ff1493\" : 'transparent',\n    }\n  })\n};\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js",["533"],"import React, { useState } from 'react'\n\nimport CartList from './CartList/Cart.list';\nimport styles from './Cart.module.css';\nimport { PastryCart } from '../../Components';\n\nconst UserSection = (props) => {\n    const {} = props;\n    const [isDetail, setIsDetail] = useState(false);\n    const [pastry, setPastry] = useState([]);\n\n    return (\n        <div className={styles.cart}>\n            <CartList isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} />\n            <PastryCart pastry={pastry} detail={isDetail} setDetail={setIsDetail} />\n        </div>\n    )\n}\n\nexport default UserSection;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js",["534","535"],"import React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Modal from 'react-modal';\n\nimport { Button, ButtonOne, DatePick, Input, Link, LinkOne, TextArea } from '../../Components';\nimport styles from './EditEvent.module.css';\n\nconst EditEvent = (props) => {\n    const {isOpen, setIsOpen} = props;\n    const [startDate, setStartDate] = useState(null);\n\n    return (\n        <Modal isOpen={isOpen} className={styles.secEditEvent} overlayClassName={styles.secEditEvent}>\n                <div className={styles.editEvent}>\n                    <div className={styles.editEventForm}>\n                            <Input\n                                placeholder=\"Party\"\n                                type=\"text\"\n                                label=\"Purpose\"\n                                len={2}\n                            />\n                            <Input\n                                placeholder=\"Me and Friends\"\n                                type=\"text\"\n                                label=\"For\"\n                                len={3}\n                            />\n                            <DatePick startDate={startDate} setStartDate={(date) => setStartDate(date)} />\n                            <TextArea\n                                placeholder=\"Showing appreciation to friends\"\n                                type=\"text\"\n                                label=\"Reason\"\n                                len={5}\n                            />\n                            <div className={styles.editButtons}>\n                                <Link link=\"#\" title=\"Edit\" />\n                                <Button onClick={() => setIsOpen(false)} title=\"Cancel\" />\n                            </div>\n                    </div>\n                    <div className={styles.editEventContainer}>\n                        <h2 className={styles.title}>\n                            Edit Event\n                        </h2>\n                    </div>\n                </div>\n        </Modal>\n    )\n}\n\nexport default EditEvent;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js",["536","537"],"import React, { useState } from 'react';\nimport makeAnimated from 'react-select/animated';\nimport Select from 'react-select';\n\nimport styles from './BakerDetails.module.css';\nimport {ButtonOne, Input, Notification, Selector} from '../../Components';\nimport { AuthMail, AuthTel } from '../../utils/auth';\nimport {BASE_URL} from '../../utils/globalVariable';\n\nconst animatedComponents = makeAnimated();\n\nconst BakerDetails = (props) => {\n    const {\n        name,\n        tel,\n        email,\n        password,\n        idCard,\n        categories,\n        companyName,\n        setPassword,\n        setIdCard,\n        setCategories,\n        setCompanyName,\n        errorPassword,\n        errorIdCard,\n        errorCategories,\n        errorCompanyName,\n        setErrorName,\n        setErrorEmail,\n        setErrorPassword,\n        setErrorIdCard,\n        setErrorTel,\n        setErrorCategories,\n        setErrorCompanyName,\n        loading,\n        setLoading,\n    } = props;\n\n    let Categories = [];\n\n    const authenticate = () => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 5) {\n            hasError = true;\n            setErrorName(true);\n        }\n\n        if (!AuthMail (email)) {\n            hasError = true;\n            setErrorEmail(true);\n        }\n\n        if (!AuthTel(tel)) {\n            hasError = true;\n            setErrorTel(true);\n        }\n\n        if(password.length < 5) {\n            hasError = true;\n            setErrorPassword(true);\n        }\n\n        if (idCard.length < 7) {\n            hasError = true;\n            setErrorIdCard(true);\n        }\n\n        if (companyName.length < 3) {\n            hasError = true;\n            setErrorCompanyName(true);\n        }\n\n        if (categories.length < 1) {\n            hasError = true;\n            setErrorCategories(true);\n        }\n\n        if(hasError) {\n            setLoading(false)\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Invalid Data',\n                message: 'Data provided is not correct, please check again.'\n            })\n            return false;\n        }\n\n        if(!hasError) {\n            categories.map((value, index) => (\n                Categories.push(value.label)\n            ))\n        }\n\n        const body = {\n            name,\n            email,\n            categories: Categories,\n            idCard,\n            password,\n            tel,\n            companyName\n        }\n\n        console.log(body, 'body');\n\n        let url = `${BASE_URL}/baker/register`;\n        let statusCode, responseJson;\n\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n        .then((response) => {\n            statusCode = response.status;\n            responseJson = response.json();\n            return Promise.all([statusCode, responseJson]);\n        })\n        .then((res) => {\n            statusCode = res[0];\n            responseJson = res[1];\n            setLoading(false);\n            if(statusCode === 201) {\n                console.log(responseJson);\n                props.history.push({pathname: '/login'});\n            }\n            if(statusCode === 422) {\n                console.log(responseJson, '422');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Details Conflict',\n                    message: responseJson.data[0].msg,\n                })\n            }\n            if(statusCode === 500) {\n                console.log(responseJson, '500');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: responseJson.message,\n                })\n            }\n            console.log(responseJson, statusCode);\n        })\n        .catch(err => {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.'\n            })\n        })\n    }\n\n    const [_categories] = useState([\n        { value: 'birthday-cake', label: 'Birthday Cakes' },\n        { value: 'wedding-cake', label: 'Wedding Cakes' },\n        { value: 'cookies', label: 'Cookies' },\n        { value: 'doughnuts', label: 'Doughnuts' },\n        { value: 'pancakes', label: 'Pancakes' },\n        { value: 'cup-cakes', label: 'Cup Cake' },\n    ]);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const previous = () => {\n        props.history.push({pathname: '/register'});\n    }\n\n    return (\n         <section className={styles.bakerSignup} id=\"signup\">\n                <div className={styles.signup}>\n                    <div className={styles.signupForm}>\n                        <div>\n                            <Input \n                                len={2}\n                                type='number'\n                                placeholder='000400370'\n                                label='ID card number'\n                                value={idCard}\n                                setValue={(event) => setIdCard(event.target.value)}\n                                error={errorIdCard}\n                                serError={() => setErrorIdCard()}\n                            />\n                            <Input \n                                len={3}\n                                type='text'\n                                placeholder='Henry pastries'\n                                label='Company name'\n                                value={companyName}\n                                setValue={(event) => setCompanyName(event.target.value)}\n                                error={errorCompanyName}\n                                serError={() => setErrorCompanyName()}\n                            />\n                            <div className={styles.formSelect}>\n                                    <Select \n                                        value={categories}\n                                        options={_categories}\n                                        styles={colourStyles}\n                                        onChange={(value) => setCategories(value)}\n                                        components={animatedComponents} \n                                        isMulti \n                                        className={[styles.formLength4, styles.formSelectInput].join(' ')} />\n                                </div>\n                            <Input \n                                len={5}\n                                type='password'\n                                placeholder=\"******\"\n                                label=\"Password\"\n                                value={password}\n                                setValue={(event) => setPassword(event.target.value)}\n                                error={errorPassword}\n                                serError={() => setErrorPassword()}\n                            />\n                            <div className={styles.formGroup}>\n                                <ButtonOne title=\"Back\" onClick={() => previous()} />\n                                <ButtonOne title=\"Register\" onClick={() => authenticate()} loading={loading} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.signupContainer}>\n                        <h2 className={styles.title}>\n                            Sign up\n                        </h2>\n                    </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </section>\n    )\n}\n\n\nexport default BakerDetails;\n\nconst colourStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#ff1493\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderBottom: '2px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: isFocused ? \"#ff1493\" : 'transparent',\n    borderRadius: '2px',\n    // overflow: 'hidden',\n    // clipPath: ,\n    \n    '&:hover': {\n        border: 'none',\n        boxShadow: 'none',\n        borderBottom: '2px',\n        borderBottomStyle: 'solid',\n        borderBottomColor: isFocused ? \"#ff1493\" : 'transparent',\n    }\n  })\n};","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js",["538"],"import React, { useState } from 'react';\n\nimport BakerList from './BakerList/Baker.list';\nimport styles from './Baker.module.css'\nimport { BakerDetails, PastryCard } from '../../../Components';\n\nconst BakerSection = (props) => {\n    \n    const [isDetail, setIsDetail] = useState(false);\n    const [baker, setBaker] = useState([]);\n    return (\n        <div className={styles.bakers}>\n            <BakerList isDetail={isDetail} setIsDetail={setIsDetail} setBaker={setBaker} _baker={baker} {...props} />\n            <BakerDetails detail={isDetail} setDetail={setIsDetail} baker={baker} {...props} />\n        </div>\n    )\n}\n\nexport default BakerSection;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js",["539"],"import React, { useState } from 'react';\n\nimport { PastryDetail } from '../../../Components';\nimport styles from './Pastry.module.css'\nimport PastryList from './PastryList/Pastry.list';\n\nconst PastrySection = (props) => {\n    const {} = props;\n    const [pastry, setPastry] = useState([])\n    const [isDetail, setIsDetail] = useState(false);\n    return (\n        <div className={styles.pastries}>\n            <PastryList isDetail={isDetail} setIsDetail={setIsDetail} setPastry={setPastry} />\n            <PastryDetail detail={isDetail} setDetail={setIsDetail} pastry={pastry} />\n        </div>\n    )\n}\n\nexport default PastrySection;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js",["540"],"import React from 'react';\nimport { \n    IoArchive, \n    IoBrush, \n    IoCafe, \n    IoDocument, \n    IoGift, \n    IoGrid, \n    IoLogOut, \n    IoPeople \n} from 'react-icons/io5';\nimport {NavLink} from 'react-router-dom';\nimport { favicon } from '../../res/img';\n\nimport styles from './AdminNav.module.css';\n\nconst AdminNav = () => {\n    return (\n            <div className={styles.panelUser}>\n                <ul className={styles.panelSideNav}>\n                    <img src={favicon} alt=\"Logo\" className={styles.panelLogo} />\n                    <li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/dashboard\" exact className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                        <span className={styles.panelSideNavIcon}><IoGrid /></span><span>Dasboard</span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/dashboard/bakers\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                            <span className={styles.panelSideNavIcon}><IoCafe /></span><span>Bakers</span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/dashboard/users\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                            <span className={styles.panelSideNavIcon}><IoPeople /></span><span>Users</span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/dashboard/orders\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                           <span className={styles.panelSideNavIcon}><IoArchive /></span><span>Orders</span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.panelSideNavItem}>\n                            <NavLink to=\"/admin/dashboard/pastry\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                                <span className={styles.panelSideNavIcon}><IoGift /></span><span>Pastries</span>\n                            </NavLink>\n                    </li>  \n                    <li className={styles.panelSideNavItem}>\n                            <NavLink to=\"/admin/dashboard/pastry-super\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                                <span className={styles.panelSideNavIcon}><IoGift /></span><span>Pastries Super</span>\n                            </NavLink>\n                    </li>  \n                    <li className={styles.panelSideNavItem}>\n                            <NavLink to=\"/admin/dashboard/profile\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                                <span className={styles.panelSideNavIcon}><IoBrush /></span><span>Profile</span>\n                            </NavLink>\n                    </li>   \n                    <li className={styles.panelSideNavItem}>\n                            <NavLink to=\"/\" className={styles.panelSideNavLink}>\n                                <span className={styles.panelSideNavIcon}><IoLogOut /></span><span>Logout</span>\n                            </NavLink>\n                    </li> \n                    {/*<li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/dashboard/all-orders\" className={styles.panelSideNavLink} activeClassName={styles.panelSideNavActive}>\n                            <span className={styles.panelSideNavIcon}><IoDocument /></span><span>All Orders</span>\n                        </NavLink>\n                    </li>\n                     <li className={styles.panelSideNavItem}>\n                        <NavLink to=\"/admin/addpastry\" className={styles.panelSideNavLink}>\n                            <span>Add Pastry</span>\n                        </NavLink>\n                    </li> */}\n                    {/* <input type=\"checkbox\" name=\"pastries\" id=\"pastries\" className={styles.addCategory} />\n                    <li className={styles.panelSideNavItem}>\n                        <label for=\"pastries\" className={styles.panelSideNavLink}>View Pantry</label>\n                    </li>\n                        <div className={styles.addCategoryShow}>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/cakes\" className={styles.panelSideNavLink}>Birthday Cakes</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/cookies\" className={styles.panelSideNavLink}>Cookies</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/pans\" className={styles.panelSideNavLink}>Pancakes</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/weds\" className={styles.panelSideNavLink}>Wedding Cakes</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/dons\" className={styles.panelSideNavLink}>Dougnuts</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/cups\" className={styles.panelSideNavLink}>Cup Cakes</NavLink></li>\n                            <li className={styles.panelSideNavItem}><NavLink to=\"/admin/vals\" className={styles.panelSideNavLink}>Valentine choice</NavLink></li>\n                        </div> */}\n                        {/* <li className={styles.panelSideNavItem}>\n                            <NavLink to=\"/admin/create\" className={styles.panelSideNavLink}>\n                                <span>Create Admin</span>\n                            </NavLink>\n                        </li> */}\n                </ul>\n                <div className={styles.power}>\n                <span>Copyrighted &copy;<NavLink to=\"#\" className={styles.dev}>JB Inc.</NavLink>All Rights reserved</span> \n                </div>\n            </div>\n    )\n}\n\nexport default AdminNav;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js",["541","542","543"],"import React from 'react';\n\nimport styles from './Input.module.css';\n\nconst TextArea = (props) => {\n    const {placeholder, label, value, setValue, len, type, error, setError} = props;\n    return (\n        <div className={styles.formGroup2}>\n            <textarea \n                type={type}\n                className={[\n                    styles.formInput,\n                    len === 1 ?  \n                    styles.formLength1 :\n                    len === 2 ?\n                    styles.formLength2 :\n                    len === 3 ?\n                    styles.formLength3 :\n                    len === 4 ?\n                    styles.formLength4 :\n                    styles.formLength5\n                ].join(' ')} \n                name=\"name\" id={label} \n                placeholder={placeholder} \n                onChange={setValue}></textarea>\n            {/* <label for=\"Name\" className={styles.formLabel}>{label}</label> */}\n        </div>\n    )\n}\n\nexport default TextArea;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js",["544"],"import React from 'react';\n\nimport styles from './CircleProgess.module.css';\n\nconst CircleProgess = () => {\n    return (\n         <div class=\"pie-wrapper progress-45 style-2\">\n            <span class=\"label\">45<span class=\"smaller\">%</span></span>\n            <div class=\"pie\">\n            <div class=\"left-side half-circle\"></div>\n            <div class=\"right-side half-circle\"></div>\n            </div>\n            <div class=\"shadow\"></div>\n        </div>\n    )\n}\n\nexport default CircleProgess;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js",["545","546"],"import React from 'react';\nimport { IoMail, IoThumbsDownSharp, IoThumbsUpSharp } from 'react-icons/io5';\nimport { NavLink } from 'react-router-dom';\n\nimport { cups2 } from '../../res/img';\nimport styles from './BakerInfo.module.css';\n\nconst BakerInfo = () => {\n    return (\n        <div className={styles.bakerCard}> \n            <div className={styles.bakerInfo}>\n                <img src={cups2} alt=\"Baker name\" className={styles.bakerImg} />\n                <div className={styles.bakerId}>\n                    <h2 className={styles.bakerTitle}>Noella Cara</h2>\n                    <b className={styles.bakerSubTitle}>C & K</b>\n                </div>\n                <button className={styles.bakerButton}>Details</button>\n            </div>\n            <div className={styles.bakerStats}>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>60</h2>\n                    <b className={styles.bakerSubTitle}>Orders</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>10</h2>\n                    <b className={styles.bakerSubTitle}>Ordered</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>5</h2>\n                    <b className={styles.bakerSubTitle}>Categories</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>50k</h2>\n                    <b className={styles.bakerSubTitle}>Earned</b>\n                </div>\n            </div>\n            <div className={styles.bakerFooter}>\n                {/* <NavLink to=\"#\" className={styles.bakerMsg}><IoMail className={styles.bakerIcon} /> MESSAGE</NavLink> */}\n                <div className={styles.bakerRating}>\n                    <b className={styles.bakerRatingVal}><IoThumbsUpSharp className={styles.bakerRatingIcon} /> 23K</b>\n                    <b className={styles.bakerRatingVal}><IoThumbsDownSharp className={styles.bakerRatingIcon} /> 2K</b>\n                </div>\n                <button className={styles.bakerBtn}>Suspend</button>\n            </div>\n        </div>\n    )\n}\n\nexport default BakerInfo;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js",["547","548","549"],"import React from 'react';\nimport { IoMail, IoThumbsDownSharp, IoThumbsUp, IoThumbsUpSharp } from 'react-icons/io5';\nimport { NavLink } from 'react-router-dom';\n\nimport { cups2 } from '../../res/img';\nimport styles from './UserInfo.module.css';\n\nconst UserInfo = () => {\n    return (\n        <div className={styles.bakerCard}> \n            <div className={styles.bakerInfo}>\n                <img src={cups2} alt=\"Baker name\" className={styles.bakerImg} />\n                <div className={styles.bakerId}>\n                    <h2 className={styles.bakerTitle}>Noella Cara</h2>\n                    <b className={styles.bakerSubTitle}>681726633</b>\n                </div>\n                <button className={styles.bakerButton}>Details</button>\n            </div>\n            <div className={styles.bakerStats}>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>60</h2>\n                    <b className={styles.bakerSubTitle}>Orders</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>10</h2>\n                    <b className={styles.bakerSubTitle}>Ordered</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>5</h2>\n                    <b className={styles.bakerSubTitle}>Categories</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>90k</h2>\n                    <b className={styles.bakerSubTitle}>Spent</b>\n                </div>\n            </div>\n            <div className={styles.bakerFooter}>\n                {/* <NavLink to=\"#\" className={styles.bakerMsg}><IoMail className={styles.bakerIcon} /> MESSAGE</NavLink> */}\n                <div className={styles.bakerRating}>\n                    <b className={styles.bakerRatingVal}><IoThumbsUpSharp className={styles.bakerRatingIcon} /> 23K</b>\n                    <b className={styles.bakerRatingVal}><IoThumbsDownSharp className={styles.bakerRatingIcon} /> 2K</b>\n                </div>\n                <button className={styles.bakerBtn}>Suspend</button>\n            </div>\n        </div>\n    )\n}\n\nexport default UserInfo;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js",["550","551"],"import React, { useState } from 'react';\nimport {IoTrashBinSharp } from 'react-icons/io5';\nimport { Notification, Verification } from '..';\n\nimport { pans2 } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './BakerTable.module.css';\n\nconst BakerTable = (props) => { \n    const {bakers, token} = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [verify, setVerify] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Delete = (data) => {\n        setVerify(true);\n        setMessage({\n            type: 'danger',\n            data: data,\n            title: 'Deletion imminent',\n            message: `Are you sure you want to delete company ${data.companyName}. They might have pending orders.`\n        })\n    }\n\n    const DeleteAuth = (id) => {\n        fetch(`${BASE_URL}/baker/delete/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n\n                setTimeout(() => {\n                    setVerify(false);\n                }, 2000)\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/baker/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    const Verify = (id) => {\n        fetch(`${BASE_URL}/baker/verify/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    return (\n        <>\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Name</td>\n                        <td className={styles.cartTableHeaderData}>Company</td>\n                        <td className={styles.cartTableHeaderData}>Categories</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Verified</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {bakers.map((baker, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={pans2} alt=\"Pastry Name\" className={styles.cartTableDataImage} />\n                                <b>{baker.name}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{baker.companyName}</td>\n                            <td className={styles.cartTableData}>{baker.categories.length}</td>\n                            <td className={styles.cartTableData}>{baker.suspend ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>{baker.verify ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.suspend].join(' ')} onClick={() => Suspend(baker._id)}>{baker.suspend ? 'Unsuspend' : 'Suspend'}</button>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => Verify(baker._id)}>{baker.verify ? 'Unverify' : 'Verify'}</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => console.log('Ordered')}>Details</button>\n                                <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => Delete(baker)}><IoTrashBinSharp /></button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n            <Verification verify={verify} setVerify={setVerify} message={message} onClick={(id) => DeleteAuth(id)} />\n        </>\n    )\n}\n\nexport default BakerTable;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js",["552","553","554"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { BakerTable, Notification} from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './Baker.module.css';\nimport {setBakers} from '../../redux/Actions/Data.actions';\n\nconst Bakers = (props) => {\n    const {user, token} = props;\n\n    const [bakers, setBakers] = useState([]);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/rawbakers`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Basic ${token}`,\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if(statusCode === 200) {\n                setBakers(response.bakers);\n                props.setBakers(response.bakers);\n                setTotal(response.totalItems);\n            }\n\n            if (statusCode === 404) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n\n            if(statusCode === 500) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    }, []);\n\n    return(\n       <div className={styles.bakerSection}>\n           <div className={styles.bakerLength}>\n               <h2 className={styles.bakerLengthTitle}>{total} Baker{total !== 1 && 's'}</h2>\n           </div>\n           <div className={styles.bakerCat}>\n               <button className={styles.bakerChoice}>All Bakers</button>\n               <button className={styles.bakerChoice}>New Bakers</button>\n               <button className={styles.bakerChoice}>Verified</button>\n               <button className={styles.bakerChoice}>Suspended</button>\n               <button className={styles.bakerChoice}>Add Baker</button>\n           </div>\n           <BakerTable bakers={bakers} token={token} />\n           <Notification show={show} setShow={setShow} message={message} />\n       </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBakers}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bakers);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js",["555","556"],"import React, { useState } from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\nimport { Notification, Verification } from '..';\n\nimport { pans2 } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './UserTable.module.css';\n\nconst UserTable = (props) => { \n    const {users, token} = props;\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [verify, setVerify] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Delete = (data) => {\n        setVerify(true);\n        setMessage({\n            type: 'danger',\n            data: data,\n            title: 'Deletion imminent',\n            message: `Are you sure you want to delete user ${data.name}. They might have pending orders.`\n        })\n    }\n\n    const DeleteAuth = (id) => {\n        fetch(`${BASE_URL}/user/delete/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n\n                setTimeout(() => {\n                    setVerify(false);\n                }, 2000)\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/user/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: response.message,\n                })\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                message: 'Please check your internet connection.',\n            })\n        })\n    }\n\n    return (\n        <>\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Name</td>\n                        <td className={styles.cartTableHeaderData}>Telephone</td>\n                        <td className={styles.cartTableHeaderData}>Ordered</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n\n                    {users.map((user, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={pans2} alt={user.name} className={styles.cartTableDataImage} />\n                                <b>{user.name}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{user.telNumber}</td>\n                            <td className={styles.cartTableData}>{user.ordered || 0}</td>\n                            <td className={styles.cartTableData}>{user.suspend ? 'True' : 'False'}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.suspend].join(' ')} onClick={() => Suspend(user._id)}>{user.suspend ? 'Unsuspend' : 'Suspend'}</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => console.log('Ordered')}>Details</button>\n                                <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => Delete(user)}><IoTrashBinSharp /></button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n            <Verification verify={verify} setVerify={setVerify} message={message} onClick={(id) => DeleteAuth(id)} />\n        </>\n    )\n}\n\nexport default UserTable;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js",["557","558","559"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification, UserTable } from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './User.module.css';\nimport {setUsers} from '../../redux/Actions/Data.actions';\n\nconst Users = (props) => {\n    const {user, token} = props;\n\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/users`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Basic ${token}`,\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if(statusCode === 200) {\n                setUsers(response.users);\n                props.setUsers(response.users);\n                setTotal(response.totalItems);\n            }\n\n            if (statusCode === 404) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n\n            if(statusCode === 500) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    }, []);\n\n    return(\n       <div className={styles.bakerSection}>\n           <div className={styles.bakerLength}>\n               <h2 className={styles.bakerLengthTitle}>{total} User{total !== 1 && 's'}</h2>\n           </div>\n           <div className={styles.bakerCat}>\n               <button className={styles.bakerChoice}>All Users</button>\n               <button className={styles.bakerChoice}>New Users</button>\n               <button className={styles.bakerChoice}>Suspended</button>\n               <button className={styles.bakerChoice}>Add User</button>\n           </div>\n           <UserTable users={users} token={token} />\n           <Notification show={show} setShow={setShow} message={message} />\n       </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setUsers}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js",["560","561","562"],"import React from 'react';\n\nimport { pans2 } from '../../res/img';\nimport styles from './OrderTable.module.css';\n\nconst OrderTable = (props) => { \n    const {isDetail, setIsDetail} = props;\n    return (\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Client Name</td>\n                        <td className={styles.cartTableHeaderData}>Company</td>\n                        <td className={styles.cartTableHeaderData}>Status</td>\n                        <td className={styles.cartTableHeaderData}>Total</td>\n                        <td className={styles.cartTableHeaderData}>Date</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    <tr className={styles.cartTableRow}>\n                        <td className={styles.cartTableData}><b>Ice Cake</b></td>\n                        <td className={styles.cartTableData}>Noelaa</td>\n                        <td className={styles.cartTableData}>New</td>\n                        <td className={styles.cartTableData}>10,000</td>\n                        <td className={styles.cartTableData}>Sat, 19th Mar, 2021</td>\n                        <td className={styles.cartTableData}>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Delete</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Inc Status</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Details</button>\n                        </td>\n                    </tr>\n                    <tr className={styles.cartTableRow}>\n                        <td className={styles.cartTableData}><b>Ice Cake</b></td>\n                        <td className={styles.cartTableData}>Noelaa</td>\n                        <td className={styles.cartTableData}>New</td>\n                        <td className={styles.cartTableData}>10,000</td>\n                        <td className={styles.cartTableData}>Sat, 19th Mar, 2021</td>\n                        <td className={styles.cartTableData}>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Delete</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Inc Status</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Details</button>\n                        </td>\n                    </tr>\n                    <tr className={styles.cartTableRow}>\n                        <td className={styles.cartTableData}><b>Ice Cake</b></td>\n                        <td className={styles.cartTableData}>Noelaa</td>\n                        <td className={styles.cartTableData}>New</td>\n                        <td className={styles.cartTableData}>10,000</td>\n                        <td className={styles.cartTableData}>Sat, 19th Mar, 2021</td>\n                        <td className={styles.cartTableData}>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Delete</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Inc Status</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Details</button>\n                        </td>\n                    </tr>\n                    <tr className={styles.cartTableRow}>\n                        <td className={styles.cartTableData}><b>Ice Cake</b></td>\n                        <td className={styles.cartTableData}>Noelaa</td>\n                        <td className={styles.cartTableData}>New</td>\n                        <td className={styles.cartTableData}>10,000</td>\n                        <td className={styles.cartTableData}>Sat, 19th Mar, 2021</td>\n                        <td className={styles.cartTableData}>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Delete</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Inc Status</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Details</button>\n                        </td>\n                    </tr>\n                    <tr className={styles.cartTableRow}>\n                        <td className={styles.cartTableData}><b>Ice Cake</b></td>\n                        <td className={styles.cartTableData}>Noelaa</td>\n                        <td className={styles.cartTableData}>New</td>\n                        <td className={styles.cartTableData}>10,000</td>\n                        <td className={styles.cartTableData}>Sat, 19th Mar, 2021</td>\n                        <td className={styles.cartTableData}>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Delete</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Inc Status</button>\n                            <button className={styles.cartButton} onClick={() => console.log('Ordered')}>Details</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n    )\n}\n\nexport default OrderTable;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js",["563","564","565","566"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { AddPastry } from '..';\nimport { Notification, PastryTable } from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './Pastry.module.css';\nimport {setPastries} from '../../redux/Actions/Data.actions';\n\nconst Pastry = (props) => {\n    const {token, user, pastry} = props;\n    const [active, setActive] = useState(-1);\n    const [isOpen, setIsOpen] = useState(false);\n    const [page, setPage] = useState(1);\n    const [pastries, setPastries] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`${BASE_URL}/bakerpastries/${user._id.toString()}?page=${page}`, {\n            method: 'GET',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if(statusCode === 200) {\n                console.log(response.pastries);\n                setPastries(response.pastries.reverse());\n                props.setPastries(response.pastries.reverse());\n                setTotal(response.totalItems);\n            }\n\n            if(statusCode === 500) {\n                console.log(response, '500');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n                console.log(err);\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    }, [isOpen]);\n\n    const setFilter = (index, type) => {\n        setActive(index);\n\n        if (type !== 'all') {\n            let _pastries = pastry.filter(data => data.type === type);\n            setPastries(_pastries);\n        }\n        if (type === 'all') {\n            console.log(pastry);\n            setPastries(pastry);\n        }\n    }\n\n    return(\n       <div className={styles.bakerSection}>\n           <div className={styles.bakerLength}>\n               <h2 className={styles.bakerLengthTitle}>{total} {(total === 0 || total > 1) ? 'Pastries' : 'Pastry'}</h2>\n           </div>\n           <div className={styles.bakerScroll}>\n                <div className={styles.bakerCat}>\n                    <button className={[styles.bakerChoice, active === -1 && styles.bakerActive].join(' ')} onClick={() => setFilter(-1, 'all')}>All Pastries</button>\n                    {user.categories.map((category, index) => <button className={[styles.bakerChoice, active === index && styles.bakerActive].join(' ')} onClick={() => setFilter(index, category)}>{category}</button>)}\n                    <button className={styles.bakerChoice} onClick={() => setIsOpen(true)}>Add Pastry</button>\n                </div>\n           </div>\n           <PastryTable pastries={pastries} />\n           <AddPastry  isOpen={isOpen} setIsOpen={setIsOpen} />\n           <Notification message={message} show={show} setShow={setShow} />\n       </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n        pastry: data.pastries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setPastries}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pastry);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js",["567","568","569","570"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification, PastryTableSuper } from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './Pastry.module.css';\nimport {setPastries} from '../../redux/Actions/Data.actions';\n\nconst Pastry = (props) => {\n    const {token, user, pastry} = props;\n    const [active, setActive] = useState(-1);\n    const [page, setPage] = useState(1);\n    const [pastries, setPastries] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        fetch(`${BASE_URL}/superpastries?page=${page}`, {\n            method: 'GET',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if(statusCode === 200) {\n                console.log(response.pastries);\n                setPastries(response.pastries.reverse());\n                props.setPastries(response.pastries.reverse());\n                setTotal(response.totalItems);\n            }\n\n            if(statusCode === 500) {\n                console.log(response, '500');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n    }, []);\n\n    const setFilter = (index, type) => {\n        setActive(index);\n\n        if (type !== 'all') {\n            let _pastries = pastry.filter(data => data.type === type);\n            setPastries(_pastries);\n        }\n        if (type === 'all') {\n            console.log(pastry);\n            setPastries(pastry);\n        }\n    }\n\n    return(\n       <div className={styles.bakerSection}>\n           <div className={styles.bakerLength}>\n               <h2 className={styles.bakerLengthTitle}>{total} {(total === 0 || total > 1) ? 'Pastries' : 'Pastry'}</h2>\n           </div>\n           <div className={styles.bakerScroll}>\n                <div className={styles.bakerCat}>\n                    <button className={[styles.bakerChoice, active === -1 && styles.bakerActive].join(' ')} onClick={() => setFilter(-1, 'all')}>All Pastries</button>\n                    <button className={[styles.bakerChoice, active === 0 && styles.bakerActive].join(' ')} onClick={() => setFilter(0, 'Birthday Cakes')}>Birthday Cakes</button>\n                    <button className={[styles.bakerChoice, active === 1 && styles.bakerActive].join(' ')} onClick={() => setFilter(1, 'Wedding Cakes')}>Wedding Cakes</button>\n                    <button className={[styles.bakerChoice, active === 2 && styles.bakerActive].join(' ')} onClick={() => setFilter(2, 'Doughnuts')}>Dougnuts</button>\n                    <button className={[styles.bakerChoice, active === 3 && styles.bakerActive].join(' ')} onClick={() => setFilter(3, 'Cookies')}>Cookies</button>\n                    <button className={[styles.bakerChoice, active === 4 && styles.bakerActive].join(' ')} onClick={() => setFilter(4, 'Pancakes')}>Pancakes</button>\n                    <button className={[styles.bakerChoice, active === 5 && styles.bakerActive].join(' ')} onClick={() => setFilter(5, 'Gift Baskets')}>Gift Baskets</button>\n                    <button className={[styles.bakerChoice, active === 6 && styles.bakerActive].join(' ')} onClick={() => setFilter(6, 'Cup Cakes')}>Cup Cakes</button>\n                </div>\n           </div>\n           <PastryTableSuper pastries={pastries} />\n           <Notification message={message} show={show} setShow={setShow} />\n       </div>\n    )\n}\n\nconst mapStateToProps = ({auth, data}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n        pastry: data.pastries,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setPastries}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pastry);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js",["571","572","573"],"import React, { useEffect, useState } from 'react';\nimport { IoBrush } from 'react-icons/io5';\nimport makeAnimated from 'react-select/animated';\nimport Select from 'react-select';\n\nimport { Button, Notification, SquareArea, SquareInput } from '../../Components';\nimport { cups1, vals3 } from '../../res/img';\nimport styles from './AdminProfile.module.css';\nimport { connect } from 'react-redux';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { bindActionCreators } from 'redux';\nimport { setUser } from '../../redux/Actions/Auth.actions';\nimport { SetLocation, SetCategories } from '../../utils/utilities';\n\nconst animatedComponents = makeAnimated();\n\nconst AdminProfile = (props) => {\n    const { user, token } = props;\n    const [locations] = useState([\n        { value: \"North-West\", label: \"North-West\" },\n        { value: \"South-West\", label: \"South-West\" },\n        { value: \"West\", label: \"West\" },\n        { value: \"Center\", label: \"Center\" },\n        { value: \"Litoral\", label: \"Litoral\" },\n        { value: \"North\", label: \"North\" },\n        { value: \"East\", label: \"East\" },\n        { value: \"North-West\", label: \"North-West\" },\n    ]);\n    const [_categories] = useState([\n        { value: 'birthday-cake', label: 'Birthday Cakes' },\n        { value: 'wedding-cake', label: 'Wedding Cakes' },\n        { value: 'cookies', label: 'Cookies' },\n        { value: 'doughnuts', label: 'Doughnuts' },\n        { value: 'pancakes', label: 'Pancakes' },\n        { value: 'cup-cakes', label: 'Cup Cake' },\n        { value: 'gift-baskets', label: 'Gift Baskets' },\n    ]);\n    const [loading, setLoading] = useState(false);\n    const [name, setName] = useState('');\n    const [company, setCompany] = useState('');\n    const [momoName, setMomoName] = useState('');\n    const [momo, setMomo] = useState('');\n    const [email, setEmail] = useState('');\n    const [contact, setContact] = useState('');\n    const [location, setLocation] = useState({});\n    const [about, setAbout] = useState('');\n    const [categories, setCategories] = useState([]);\n    const [nameError, setNameError] = useState(false);\n    const [companyError, setCompanyError] = useState(false);\n    const [momoNameError, setMomoNameError] = useState(false);\n    const [momoError, setMomoError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [contactError, setContactError] = useState(false);\n    const [locationError, setLocationError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n    let Categories = [];\n\n\n    useEffect(() => {\n        setName(user.name || \"'empty'\");\n        setCompany(user.companyName || \"'empty'\");\n        setMomoName(user.momoName || \"'empty'\");\n        setMomo(user.momoNumber || \"'empty'\");\n        setEmail(user.email || \"'empty'\");\n        setAbout(user.about || \"'empty'\");\n        setContact(user.telNumber || \"'empty'\");\n        setAbout(user.about || \"'empty'\");\n        setCategories(user.categories);\n        let loc = user.location;\n        let cats = user.categories;\n    \n        setLocation(SetLocation(loc, locations) || \"'empty'\")\n        setCategories(SetCategories(cats, _categories));\n\n        return () => {\n            setName('');\n            setCompany('');\n            setMomoName('');\n            setMomo('');\n            setEmail('');\n            setAbout('');\n            setContact('');\n            setLocation('');\n            setAbout('');\n            setNameError(false);\n            setCompanyError(false);\n            setMomoNameError(false);\n            setMomoError(false);\n            setEmailError(false);\n            setAboutError(false);\n            setContactError(false);\n            setAboutError(false);\n            setLocationError(false);\n        }\n    }, [])\n\n    const Authenticate = (id) => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 6) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (company.length < 6) {\n            setCompanyError(true);\n            hasError = true;\n        }\n\n        if (momoName.length < 9) {\n            setMomoNameError(true);\n            hasError = true;\n        }\n\n        if (momo.length < 9) {\n            setMomoError(true);\n            hasError = true;\n        }\n\n        if (about.length < 10) {\n            setAboutError(true);\n            hasError = true;\n        }\n\n        if (hasError) {\n            return false;\n        }\n\n        if(!hasError) {\n            if(categories){categories.map((value, index) => (\n                Categories.push(value.label)\n            ))}\n        }\n\n        const body = {\n            name,\n            company,\n            categories: Categories,\n            about,\n            momo,\n            momoName,\n            contact,\n            email,\n            location: location.value,\n        }\n\n        console.log(body);\n\n        fetch(`${BASE_URL}/baker/profile/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        title: 'Success',\n                        message: 'Your profile has been updated'\n                    })\n                    props.setUser(response.baker);\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n        })\n\n    }\n\n    return (\n        <div className={styles.aprofile}>\n            <div className={styles.profileContainer}>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={cups1} alt={'Username'} className={styles.profileImg} />\n                        <img src={vals3} alt={'Username'} className={styles.profileLogo} />\n                        <button className={styles.profileEdit}><IoBrush className={styles.profileIcon} /></button>\n                    </div>\n                    <div className={styles.profileCredentials}>\n                        <h2 className={styles.profileName}>{name.substr(0, 15)} | {company.substr(0, 15) || 'House of Flavours'}</h2>\n                        <h3 className={styles.profileSubTitle}><span className={styles.profileSubInfo} >{contact || \"'empty'\"}</span> | <span className={styles.profileSubInfo} >{user.idCardNumber}</span> | <span className={styles.profileSubInfo} >{momoName.substr(0, 12) || \"'empty'\"}</span> </h3>\n                        <h3 className={styles.profileSubTitle}><span className={styles.profileSubInfo} >{momo || \"'empty'\"}</span>  | <span className={styles.profileSubInfo} >{location.value || \"'empty'\"}</span>  | <span className={styles.profileSubInfo} >{email.substr(0, 12)}...</span> </h3>\n                    </div>\n                    <div className={styles.profileStats}>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>{user.orders}</h2>\n                            <b className={styles.profileSub}>Orders</b>\n                        </div>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>100</h2>\n                            <b className={styles.profileSub}>Ordered</b>\n                        </div>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>{user.categories.length}</h2>\n                            <b className={styles.profileSub}>Categories</b>\n                        </div>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>{user.total}</h2>\n                            <b className={styles.profileSub}>Earnings</b>\n                        </div>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>{user.likes.users.length}</h2>\n                            <b className={styles.profileSub}>Likes</b>\n                        </div>\n                        <div className={styles.profileNumber}>\n                            <h2 className={styles.profileTitle}>{user.dislikes.users.length}</h2>\n                            <b className={styles.profileSub}>Dislikes</b>\n                        </div>\n                    </div>\n                    <div className={styles.profileAbout}>\n                        <h2 className={styles.profileName}>About</h2>\n                        <b className={styles.profileHistory}>\n                            {about}\n                        </b>\n                    </div>\n                </div>\n                <div className={styles.profileFormContainer}>\n                    <div className={styles.profileForm}>\n                        <h2 className={styles.profileName}>My Details</h2>\n                        <SquareInput\n                            placeholder=\"Jane Doe\"\n                            label=\"Name\"\n                            value={name}\n                            setValue={event => setName(event.target.value)}\n                            error={nameError}\n                            setError={setNameError}\n                        />\n                        <SquareInput\n                            placeholder=\"Henry Pastries\"\n                            label=\"Company\"\n                            value={company}\n                            setValue={event => setCompany(event.target.value)}\n                            error={companyError}\n                            setError={setCompanyError}\n                        />\n                        <SquareInput\n                            placeholder=\"6x1234567\"\n                            label=\"MOMO Number\"\n                            value={momo}\n                            setValue={event => setMomo(event.target.value)}\n                            error={momoError}\n                            setError={setCompanyError}\n                        />\n                        <SquareInput\n                            placeholder=\"Janette Sirri\"\n                            label=\"MOMO Name\"\n                            value={momoName}\n                            setValue={event => setMomoName(event.target.value)}\n                            error={momoNameError}\n                            setError={setMomoNameError}\n                        />\n                        <SquareInput\n                            placeholder=\"6x1234567\"\n                            label=\"Contact\"\n                            value={contact}\n                            setValue={event => setContact(event.target.value)}\n                            error={contactError}\n                            setError={setContactError}\n                        />\n                        <div className={styles.profileGroup}>\n                            <b className={styles.profileLabel}>Categories</b>\n                            <div className={styles.selectWidth}>\n                                <Select\n                                    value={categories}\n                                    options={_categories}\n                                    components={animatedComponents}\n                                    onChange={value => setCategories(value)}\n                                    styles={locationStyles}\n                                    isMulti\n                                    className={styles.profileSelect}\n                                />\n                            </div>\n                        </div>\n                        <div className={styles.profileGroup}>\n                            <b className={styles.profileLabel}>Location</b>\n                            <Select\n                                value={location}\n                                options={locations}\n                                components={animatedComponents}\n                                onChange={value => setLocation(value)}\n                                styles={locationStyles}\n                                className={styles.profileSelect} />\n                        </div>\n                        <SquareInput\n                            placeholder=\"janedoe@gmail.cm\"\n                            label=\"Email\"\n                            value={email}\n                            setValue={event => setEmail(event.target.value)}\n                            error={emailError}\n                            setError={setEmailError}\n                        />\n                        <SquareArea\n                            placeholder={\"Tell your story\"}\n                            label=\"About\"\n                            value={about}\n                            setValue={event => setAbout(event.target.value)}\n                            error={aboutError}\n                            setError={setAboutError}\n                        />\n                        <div className={styles.profileActions}>\n                            <Button title=\"Save Changes\" onClick={() => Authenticate(user._id)} />\n                            <Button title=\"Edit Password\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Notification setShow={setShow} show={show} message={message} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setUser }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminProfile);\n\nconst locationStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#215379\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n      ...base,\n      border: 'none',\n      boxShadow: 'none',\n      borderRadius: '4px',\n      borderBottom: '2px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: '#14334a',\n      borderTop: '2px',\n      borderTopStyle: 'solid',\n      borderTopColor: '#14334a',\n      borderLeft: '2px',\n      borderLeftStyle: 'solid',\n      borderLeftColor: '#14334a',\n      borderRight: '2px',\n      borderRightStyle: 'solid',\n      borderRightColor: '#14334a',\n      cursor: 'pointer',\n    '&:hover': {\n        border: '2px',\n        boxShadow: 'none',\n        borderStyle: 'solid',\n        borderColor: isFocused ? \"#14334a\" : '#14334a',\n    }\n  })\n};\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js",["574"],"import React from 'react';\n\nimport styles from './SquareInput.module.css';\n\nconst SquareInput = (props) => {\n    const {\n        label, \n        placeholder, \n        type, \n        value, \n        setValue, \n        error, \n        setError,\n        name,\n    } = props;\n    return (\n        <div className={styles.inputContainer}>\n            <label className={styles.inputLabel}>{label}</label>\n            <input\n                className={[styles.inputField, error && styles.inputInvalid].join(' ')}\n                placeholder={placeholder}\n                type={type}\n                name={name}\n                value={value}\n                onChange={setValue}\n            />\n        </div>\n    )\n}\n\nexport default SquareInput;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js",["575"],"import React from 'react'\n\nimport styles from './SquareInput.module.css';\n\nconst SquareArea = (props) => {\n    const {\n        label, \n        placeholder,\n        value, \n        setValue, \n        error, \n        setError\n    } = props;\n    return (\n        <div className={styles.inputContainer}>\n            <label className={styles.inputLabel}>{label}</label>\n            <textarea \n                className={[styles.inputField, error && styles.inputInvalid].join(' ')} \n                placeholder={placeholder} \n                rows={5}\n                value={value}\n                onChange={setValue}\n            >\n            </textarea>\n        </div>\n    )\n}\n\nexport default SquareArea;","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js",["576"],"import React, { useEffect } from 'react';\n\nimport styles from './Notification.module.css';\n\nconst Notification = (props) => {\n    const {message, show, setShow} = props;\n\n    useEffect(() => {\n        setTimeout(() => {\n            setShow(false);\n        }, 3000);\n    }, [show])\n\n    return (\n        <div className={[styles.notifyContainer, show ? styles.showContainer : styles.hideContainer, message.type === 'error' && styles.dangerBorder, ].join(' ')}>\n            <h2 className={[styles.notifyTitle, message.type === 'error' && styles.dangerColor].join(' ')}>{message.title}</h2>\n            <b className={styles.notifyMessage}>{message.message}</b>\n        </div>\n    )\n}\n\nexport default Notification;","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js",["577","578","579","580"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nimport { Button, Link, Notification, SquareArea, SquareInput } from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AddPastry.module.css';\n\nconst animatedComponents = makeAnimated();\n\nconst AddPastry = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [type, setType] = useState('');\n    const [image, setImage] = useState('');\n    const [price, setPrice] = useState('');\n    const [about, setAbout] = useState('');\n    const [nameError, setNameError] = useState(false);\n    const [discountError, setDiscountError] = useState(false);\n    const [typeError, setTypeError] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const [priceError, setPriceError] = useState(false);\n    const [aboutError, setAboutError] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        let _categories = [];\n        user.categories.map((category, index) => _categories.push({value: category, label: category}));\n        setCategories(_categories);\n    }, [isOpen]);\n    \n    const authenticate = () => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 5) {\n            hasError = true;\n            setNameError(true);\n        }\n\n        if (name.length >= 5) {\n            setNameError(false);\n        }\n\n        if (Number(discount) < 0) {\n            hasError = true;\n            setDiscountError(true);\n        }\n\n        if (Number(discount) >= 0) {\n            setDiscountError(false);\n        }\n\n        if (type.length < 2) {\n            hasError = true;\n            setTypeError(true);\n        }\n\n        if (Number(price) < 25) {\n            hasError = true;\n            setPriceError(true);\n        }\n\n        if (Number(price) >= 25) {\n            setPriceError(false);\n        }\n\n        if (about.length < 10) {\n            hasError = true;\n            setAboutError(true);\n        }\n\n        if (!image) {\n            hasError = true;\n            console.log(image, 'this is the file')\n            setImageError(true);\n        }\n\n        if(hasError) {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Invalid Data',\n                message: 'Data provided is not correct, please check again.'\n            });\n            return false;\n        }\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('price', price);\n        formData.append('about', about);\n        formData.append('pastryImage', image[0]);\n        formData.append('userImage', image);\n        formData.append('logo', image);\n        formData.append('bakerImage', image);\n        formData.append('discount', discount);\n        formData.append('type', type.value);\n        formData.append('bakerId', user._id);\n\n        console.log(formData.values(), 'values', image);\n\n        fetch(`${BASE_URL}/create/pastry`, {\n            method: 'POST',\n            body: formData,\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const responseJson = res.json();\n            return Promise.all([statusCode, responseJson]);\n        })\n        .then(res => {\n            setLoading(false);\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 201) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    title: 'Success',\n                    message: `Pastry has ben added to ${type.value} store.`\n                });\n\n                setTimeout(() => {\n                    setIsOpen(false);\n                }, 3000);\n            }\n\n            if (statusCode === 401) {\n                console.log(response, '401');\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: response.data[0].msg,\n                    })\n            }\n\n            if (statusCode === 422) {\n                console.log(response, '422');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.data[0].msg,\n                })\n            }\n\n            if(statusCode === 500) {\n                console.log(response, '500');\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n                console.log(err);\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n\n    }\n\n    return (\n        <>\n            <Modal isOpen={isOpen} closeTimeoutMS={400} className={styles.secAddPastry} overlayClassName={styles.secAddPastry}>\n                <div className={styles.addPastryForm}>\n                    <h2 className={styles.formTitle}>Add Pastry</h2>\n                    <SquareInput\n                        placeholder=\"Frosty Cake\"\n                        type=\"text\"\n                        label=\"Name\"\n                        value={name}\n                        setValue={(event) => setName(event.target.value)}\n                        error={nameError}\n                        setError={() => setNameError}\n                    />\n                    <SquareInput \n                        placeholder=\"5\"\n                        type=\"number\"\n                        label=\"Discount\"\n                        value={discount}\n                        setValue={(event) => setDiscount(event.target.value)}\n                        error={discountError}\n                        setError={() => setDiscountError}\n                    />\n                    <div className={styles.formSelect}>\n                        <label className={styles.inputLabel}>Type</label>\n                        <Select \n                            value={type}\n                            options={categories}\n                            styles={colourStyles}\n                            onChange={(value) => setType(value)}\n                            components={animatedComponents}\n                            className={[styles.formLength4, styles.formSelectInput].join(' ')} />\n                    </div>\n                    <SquareInput \n                        placeholder=\"5\"\n                        type=\"file\"\n                        label=\"Image\"\n                        // value={image}\n                        name='pastryImage'\n                        setValue={(event) => setImage(event.target.files)}\n                        error={imageError}\n                        setError={() => setImageError}\n                    />\n                    <SquareInput\n                        placeholder=\"40000\"\n                        type=\"number\"\n                        label=\"Price\"\n                        value={price}\n                        setValue={(event) => setPrice(event.target.value)}\n                        error={priceError}\n                        setError={() => setPriceError}\n                    />\n                    <SquareArea\n                        placeholder=\"Frosty Cake\"\n                        type=\"text\"\n                        label=\"About\"\n                        value={about}\n                        setValue={(event) => setAbout(event.target.value)}\n                        error={aboutError}\n                        setError={() => setAboutError}\n                    />\n                    <div className={styles.addButtons}>\n                        <Button onClick={() => authenticate()} title=\"Add\" loading={loading} />\n                        <Button onClick={() => setIsOpen(false)} title=\"Cancel\"  />\n                    </div>\n                </div>\n            </Modal>\n            <Notification message={message} show={show} setShow={setShow} />\n        </>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(AddPastry);\n\n\nconst colourStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#215379\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n    ...base,\n    border: 'none',\n    // This line disable the blue border\n    boxShadow: 'none',\n    borderRadius: '4px',\n    borderBottom: '2px',\n    borderBottomStyle: 'solid',\n    borderBottomColor: '#14334a',\n    borderTop: '2px',\n    borderTopStyle: 'solid',\n    borderTopColor: '#14334a',\n    borderLeft: '2px',\n    borderLeftStyle: 'solid',\n    borderLeftColor: '#14334a',\n    borderRight: '2px',\n    borderRightStyle: 'solid',\n    borderRightColor: '#14334a',\n    marginTop: '5px',\n    cursor: 'pointer',\n    '&:hover': {\n        border: '2px',\n        boxShadow: 'none',\n        borderStyle: 'solid',\n        borderColor: isFocused ? \"#14334a\" : '#14334a',\n    }\n  })\n};","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js",["581","582"],"import React, { useEffect } from 'react';\nimport { Button } from '..';\n\nimport styles from './Verification.module.css';\n\nconst Verification = (props) => {\n    const {message, verify, setVerify, onClick} = props;\n\n    return (\n        <div className={verify ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, verify ? styles.showContainer : styles.hideContainer, message.type === 'danger' && styles.dangerBorder, ].join(' ')}>\n                <h2 className={[styles.notifyTitle, message.type === 'danger' && styles.dangerColor].join(' ')}>{message.title}</h2>\n                <b className={styles.notifyMessage}>{message.message}</b>\n                <div className={styles.notifyActions}>\n                    <button className={[styles.notifyButtons, styles.danger].join(' ')} onClick={() => onClick(message.data._id)}>Delete</button>\n                    <button className={styles.notifyButtons} onClick={() => setVerify(false)}>Cancel</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Verification;","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js",["583","584","585","586","587","588"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js",["589","590","591","592","593"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { Notification } from '..';\n\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryCart.module.css';\n\nconst PastryCart = (props) => {\n    const { detail, setDetail, pastry, onClick, user } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState(false);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setCount(count + 1);\n                console.log(response);\n            }\n\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `${pastry.name} not added to cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setCount(count - 1);\n            }\n\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `${pastry.name} not added to cart.`,\n                    title: 'Failed'\n                });\n            }\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.pastryId.likes.users.length);\n            setDislikes(pastry.pastryId.dislikes.users.length);\n            setPastryMessage(pastry.message);\n            setCount(pastry.quantity);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setPastryMessage('');\n            setCount(0);\n        }\n    }, [detail]);\n\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n               setShow(true);\n                setMessage({\n                    type: 'success',\n                    message: `${pastryMessage} added for pastry.`,\n                    title: 'Success'\n                });\n            }\n\n            if (statusCode === 500) {\n                console.log('error');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1].response;\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setLikes(response.likes.users.length);\n                setDislikes(response.dislikes.users.length);\n            }\n\n            if (statusCode === 500) {\n                console.log('error');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const likePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1].response;\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setLikes(response.likes.users.length);\n                setDislikes(response.dislikes.users.length);\n            }\n\n            if (statusCode === 404) {\n                console.log(response)\n            }\n\n            if (statusCode === 500) {\n                console.log('error 500');\n            }\n        })\n        .catch(err => {\n            console.log(err, 'ksjdkfljlsjf');\n        })\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')}>\n                {pastry.length !== 0 && \n                <>\n                    <button className={styles.closeButton} onClick={() => setDetail(false)}><IoClose /></button>\n                    <div className={styles.pastryContainer}>\n                        {pastry.pastryId.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.pastryId.discount || ''}%</div>}\n                        <div className={styles.pastryName}>{pastry.pastryId.name || ''}</div>\n                        <img src={`${BASE_URL}/${pastry.pastryId.image || ''}`} alt={pastry.price} className={styles.pastryImage} />\n                        <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price: {Thousand(count >= 1 ? count * pastry.pastryId.price : pastry.pastryId.price || 0)} XAF</div>\n                        <div className={styles.pastryLikes} onClick={() => likePastry(pastry.pastryId._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry.pastryId._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                    </div>\n                        {count === 0 ? \n                            <div className={styles.notifyActions}>\n                                <button className={styles.notifyButton} onClick={() => AddToCart(pastry.pastryId._id || '')}>Add to Cart</button>\n                            </div> :\n                            <div className={styles.notifyActions}>\n                                <button className={styles.pastryButton} onClick={() => SubFromCart(pastry.pastryId._id || '')}><IoRemove /></button>\n                                <b className={styles.pastryQty}>Quantity: {count || ''}</b>\n                                <button className={styles.pastryButton} onClick={() => AddToCart(pastry.pastryId._id || '')}><IoAdd /></button>\n                            </div>\n                        }\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" value={pastryMessage || ''} className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry.pastryId._id || '')}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                    <button className={styles.notifyButton} onClick={() => setDetail(false)}>Close</button>\n                </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\n\nexport default connect(mapStateToProps)(PastryCart);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js",["594","595","596","597","598","599","600"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoPeople, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './BakerDetails.module.css';\n\nconst BakerDetails = (props) => {\n    const { detail, setDetail, baker, user } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [followers, setFollowers] = useState(0);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState(false);\n\n    useEffect(() => {\n        if (baker.length !== 0) {\n            setLikes(baker.likes.users.length);\n            setDislikes(baker.dislikes.users.length);\n            setFollowers(baker.followers.users.length);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setFollowers(0);\n        }\n    }, [detail]);\n\n\n    const disLikeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1].baker;\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setLikes(response.likes.users.length);\n                setDislikes(response.dislikes.users.length);\n            }\n\n            if (statusCode === 500) {\n                console.log('error');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const likeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1].baker;\n            setLoading(false);\n            if (statusCode === 200) {\n                setLikes(response.likes.users.length);\n                setDislikes(response.dislikes.users.length);\n            }\n\n            if (statusCode === 404) {\n                console.log(response)\n            }\n\n            if (statusCode === 500) {\n                console.log('error 500');\n            }\n        })\n        .catch(err => {\n            console.log(err, 'ksjdkfljlsjf');\n        })\n    }\n\n    const followBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/follow/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1].baker;\n            setLoading(false);\n            if (statusCode === 200) {\n                setFollowers(response.followers.users.length);\n            }\n\n            if (statusCode === 404) {\n                console.log(response)\n            }\n\n            if (statusCode === 500) {\n                console.log('error 500');\n            }\n        })\n        .catch(err => {\n            console.log(err, 'ksjdkfljlsjf');\n        })\n    }\n\n    const bakerShop = (bakerId) => {\n        props.setBaker(bakerId);\n        props.history.push({pathname: '/user/shop/pastries'})\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')}>\n                {baker.length !== 0 && \n                    <>\n                    <button className={styles.closeButton} onClick={() => setDetail(false)}><IoClose /></button>\n                    <div className={styles.bakerContainer}>\n                        <div className={styles.pastryContainer}>\n                            <div className={styles.pastryDiscount} onClick={() => followBaker(baker._id || '')}><IoPeople className={styles.icon} /> Followers: {Thousand(followers)}</div>\n                            <img src={`${BASE_URL}/${baker.image || ''}`} alt={baker.price} className={styles.pastryImage} />\n                            <div className={styles.pastryPrice}> </div>\n                            <div className={styles.pastryLikes} onClick={() => likeBaker(baker._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikeBaker(baker._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        <div className={styles.bakerDetails}>\n                            <h1 className={styles.bakerCompany}>{baker.companyName}</h1>\n                            <b className={styles.bakerCEO}>CEO: <span className={styles.info}>{baker.name}</span></b>\n                            <h2 className={styles.subTitle}>About</h2>\n                            <b className={styles.bakerAbout}>{baker.about || 'empty'}</b>\n                            <div className={styles.actions}>\n                                {user.type === 'Admin' && <Button title='Delete' danger={true} onClick={() => console.log('haha')} />}\n                                <Button title='Shop' onClick={() => bakerShop(baker._id)} />\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js",[],{"ruleId":"601","severity":1,"message":"602","line":3,"column":8,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"605","replacedBy":"606"},{"ruleId":"607","replacedBy":"608"},{"ruleId":"601","severity":1,"message":"609","line":7,"column":12,"nodeType":"603","messageId":"604","endLine":7,"endColumn":17},{"ruleId":"601","severity":1,"message":"610","line":2,"column":17,"nodeType":"603","messageId":"604","endLine":2,"endColumn":23},{"ruleId":"601","severity":1,"message":"611","line":19,"column":11,"nodeType":"603","messageId":"604","endLine":19,"endColumn":23},{"ruleId":"601","severity":1,"message":"612","line":5,"column":18,"nodeType":"603","messageId":"604","endLine":5,"endColumn":24},{"ruleId":"601","severity":1,"message":"612","line":4,"column":22,"nodeType":"603","messageId":"604","endLine":4,"endColumn":28},{"ruleId":"601","severity":1,"message":"612","line":4,"column":10,"nodeType":"603","messageId":"604","endLine":4,"endColumn":16},{"ruleId":"601","severity":1,"message":"613","line":4,"column":10,"nodeType":"603","messageId":"604","endLine":4,"endColumn":15},{"ruleId":"601","severity":1,"message":"612","line":5,"column":24,"nodeType":"603","messageId":"604","endLine":5,"endColumn":30},{"ruleId":"601","severity":1,"message":"614","line":5,"column":36,"nodeType":"603","messageId":"604","endLine":5,"endColumn":48},{"ruleId":"601","severity":1,"message":"615","line":17,"column":9,"nodeType":"603","messageId":"604","endLine":17,"endColumn":16},{"ruleId":"601","severity":1,"message":"616","line":22,"column":12,"nodeType":"603","messageId":"604","endLine":22,"endColumn":19},{"ruleId":"601","severity":1,"message":"617","line":23,"column":12,"nodeType":"603","messageId":"604","endLine":23,"endColumn":17},{"ruleId":"618","severity":1,"message":"619","line":85,"column":8,"nodeType":"620","endLine":85,"endColumn":10,"suggestions":"621"},{"ruleId":"601","severity":1,"message":"622","line":11,"column":52,"nodeType":"603","messageId":"604","endLine":11,"endColumn":58},{"ruleId":"601","severity":1,"message":"616","line":16,"column":12,"nodeType":"603","messageId":"604","endLine":16,"endColumn":19},{"ruleId":"601","severity":1,"message":"617","line":17,"column":12,"nodeType":"603","messageId":"604","endLine":17,"endColumn":17},{"ruleId":"618","severity":1,"message":"623","line":81,"column":8,"nodeType":"620","endLine":81,"endColumn":10,"suggestions":"624"},{"ruleId":"605","replacedBy":"625"},{"ruleId":"607","replacedBy":"626"},{"ruleId":"618","severity":1,"message":"627","line":78,"column":8,"nodeType":"620","endLine":78,"endColumn":27,"suggestions":"628"},{"ruleId":"601","severity":1,"message":"629","line":93,"column":19,"nodeType":"603","messageId":"604","endLine":93,"endColumn":27},{"ruleId":"601","severity":1,"message":"630","line":7,"column":12,"nodeType":"603","messageId":"604","endLine":7,"endColumn":20},{"ruleId":"601","severity":1,"message":"630","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":20},{"ruleId":"601","severity":1,"message":"631","line":6,"column":10,"nodeType":"603","messageId":"604","endLine":6,"endColumn":15},{"ruleId":"601","severity":1,"message":"614","line":7,"column":32,"nodeType":"603","messageId":"604","endLine":7,"endColumn":44},{"ruleId":"601","severity":1,"message":"630","line":13,"column":9,"nodeType":"603","messageId":"604","endLine":13,"endColumn":17},{"ruleId":"601","severity":1,"message":"616","line":20,"column":12,"nodeType":"603","messageId":"604","endLine":20,"endColumn":19},{"ruleId":"601","severity":1,"message":"632","line":25,"column":12,"nodeType":"603","messageId":"604","endLine":25,"endColumn":18},{"ruleId":"601","severity":1,"message":"629","line":109,"column":19,"nodeType":"603","messageId":"604","endLine":109,"endColumn":27},{"ruleId":"601","severity":1,"message":"630","line":8,"column":12,"nodeType":"603","messageId":"604","endLine":8,"endColumn":20},{"ruleId":"601","severity":1,"message":"602","line":3,"column":8,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"618","severity":1,"message":"633","line":21,"column":8,"nodeType":"620","endLine":21,"endColumn":14,"suggestions":"634"},{"ruleId":"601","severity":1,"message":"635","line":3,"column":17,"nodeType":"603","messageId":"604","endLine":3,"endColumn":24},{"ruleId":"601","severity":1,"message":"636","line":3,"column":43,"nodeType":"603","messageId":"604","endLine":3,"endColumn":55},{"ruleId":"601","severity":1,"message":"637","line":6,"column":32,"nodeType":"603","messageId":"604","endLine":6,"endColumn":37},{"ruleId":"601","severity":1,"message":"609","line":6,"column":60,"nodeType":"603","messageId":"604","endLine":6,"endColumn":65},{"ruleId":"601","severity":1,"message":"638","line":6,"column":67,"nodeType":"603","messageId":"604","endLine":6,"endColumn":75},{"ruleId":"601","severity":1,"message":"639","line":4,"column":9,"nodeType":"603","messageId":"604","endLine":4,"endColumn":14},{"ruleId":"601","severity":1,"message":"640","line":8,"column":12,"nodeType":"603","messageId":"604","endLine":8,"endColumn":18},{"ruleId":"601","severity":1,"message":"641","line":8,"column":20,"nodeType":"603","messageId":"604","endLine":8,"endColumn":29},{"ruleId":"601","severity":1,"message":"642","line":2,"column":26,"nodeType":"603","messageId":"604","endLine":2,"endColumn":41},{"ruleId":"643","severity":1,"message":"644","line":50,"column":99,"nodeType":"645","endLine":50,"endColumn":114},{"ruleId":"643","severity":1,"message":"644","line":56,"column":17,"nodeType":"645","endLine":56,"endColumn":32},{"ruleId":"601","severity":1,"message":"646","line":3,"column":8,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"601","severity":1,"message":"647","line":11,"column":7,"nodeType":"603","messageId":"604","endLine":11,"endColumn":25},{"ruleId":"601","severity":1,"message":"648","line":20,"column":9,"nodeType":"603","messageId":"604","endLine":20,"endColumn":19},{"ruleId":"601","severity":1,"message":"649","line":21,"column":9,"nodeType":"603","messageId":"604","endLine":21,"endColumn":15},{"ruleId":"601","severity":1,"message":"650","line":22,"column":9,"nodeType":"603","messageId":"604","endLine":22,"endColumn":20},{"ruleId":"601","severity":1,"message":"651","line":25,"column":9,"nodeType":"603","messageId":"604","endLine":25,"endColumn":20},{"ruleId":"601","severity":1,"message":"652","line":27,"column":9,"nodeType":"603","messageId":"604","endLine":27,"endColumn":18},{"ruleId":"601","severity":1,"message":"653","line":29,"column":9,"nodeType":"603","messageId":"604","endLine":29,"endColumn":23},{"ruleId":"601","severity":1,"message":"654","line":30,"column":9,"nodeType":"603","messageId":"604","endLine":30,"endColumn":22},{"ruleId":"601","severity":1,"message":"655","line":34,"column":9,"nodeType":"603","messageId":"604","endLine":34,"endColumn":25},{"ruleId":"601","severity":1,"message":"656","line":41,"column":9,"nodeType":"603","messageId":"604","endLine":41,"endColumn":23},{"ruleId":"601","severity":1,"message":"657","line":43,"column":9,"nodeType":"603","messageId":"604","endLine":43,"endColumn":28},{"ruleId":"601","severity":1,"message":"658","line":50,"column":12,"nodeType":"603","messageId":"604","endLine":50,"endColumn":23},{"ruleId":"601","severity":1,"message":"659","line":255,"column":7,"nodeType":"603","messageId":"604","endLine":255,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":8,"column":11,"nodeType":"662","messageId":"663","endLine":8,"endColumn":13},{"ruleId":"601","severity":1,"message":"664","line":5,"column":18,"nodeType":"603","messageId":"604","endLine":5,"endColumn":27},{"ruleId":"601","severity":1,"message":"665","line":5,"column":52,"nodeType":"603","messageId":"604","endLine":5,"endColumn":59},{"ruleId":"601","severity":1,"message":"666","line":6,"column":41,"nodeType":"603","messageId":"604","endLine":6,"endColumn":49},{"ruleId":"601","severity":1,"message":"667","line":27,"column":9,"nodeType":"603","messageId":"604","endLine":27,"endColumn":24},{"ruleId":"601","severity":1,"message":"668","line":5,"column":24,"nodeType":"603","messageId":"604","endLine":5,"endColumn":34},{"ruleId":"660","severity":1,"message":"661","line":8,"column":11,"nodeType":"662","messageId":"663","endLine":8,"endColumn":13},{"ruleId":"601","severity":1,"message":"669","line":6,"column":5,"nodeType":"603","messageId":"604","endLine":6,"endColumn":15},{"ruleId":"601","severity":1,"message":"637","line":6,"column":32,"nodeType":"603","messageId":"604","endLine":6,"endColumn":37},{"ruleId":"601","severity":1,"message":"609","line":6,"column":60,"nodeType":"603","messageId":"604","endLine":6,"endColumn":65},{"ruleId":"601","severity":1,"message":"638","line":6,"column":67,"nodeType":"603","messageId":"604","endLine":6,"endColumn":75},{"ruleId":"601","severity":1,"message":"602","line":3,"column":8,"nodeType":"603","messageId":"604","endLine":3,"endColumn":14},{"ruleId":"601","severity":1,"message":"670","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":16},{"ruleId":"601","severity":1,"message":"671","line":3,"column":10,"nodeType":"603","messageId":"604","endLine":3,"endColumn":17},{"ruleId":"601","severity":1,"message":"670","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":16},{"ruleId":"601","severity":1,"message":"672","line":2,"column":37,"nodeType":"603","messageId":"604","endLine":2,"endColumn":47},{"ruleId":"601","severity":1,"message":"671","line":3,"column":10,"nodeType":"603","messageId":"604","endLine":3,"endColumn":17},{"ruleId":"601","severity":1,"message":"616","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":19},{"ruleId":"601","severity":1,"message":"673","line":11,"column":21,"nodeType":"603","messageId":"604","endLine":11,"endColumn":31},{"ruleId":"601","severity":1,"message":"674","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":16},{"ruleId":"601","severity":1,"message":"616","line":16,"column":12,"nodeType":"603","messageId":"604","endLine":16,"endColumn":19},{"ruleId":"618","severity":1,"message":"675","line":69,"column":8,"nodeType":"620","endLine":69,"endColumn":10,"suggestions":"676"},{"ruleId":"601","severity":1,"message":"616","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":19},{"ruleId":"601","severity":1,"message":"673","line":11,"column":21,"nodeType":"603","messageId":"604","endLine":11,"endColumn":31},{"ruleId":"601","severity":1,"message":"674","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":16},{"ruleId":"601","severity":1,"message":"616","line":16,"column":12,"nodeType":"603","messageId":"604","endLine":16,"endColumn":19},{"ruleId":"618","severity":1,"message":"675","line":69,"column":8,"nodeType":"620","endLine":69,"endColumn":10,"suggestions":"677"},{"ruleId":"601","severity":1,"message":"678","line":3,"column":10,"nodeType":"603","messageId":"604","endLine":3,"endColumn":15},{"ruleId":"601","severity":1,"message":"630","line":7,"column":12,"nodeType":"603","messageId":"604","endLine":7,"endColumn":20},{"ruleId":"601","severity":1,"message":"679","line":7,"column":22,"nodeType":"603","messageId":"604","endLine":7,"endColumn":33},{"ruleId":"601","severity":1,"message":"680","line":12,"column":12,"nodeType":"603","messageId":"604","endLine":12,"endColumn":17},{"ruleId":"601","severity":1,"message":"681","line":15,"column":18,"nodeType":"603","messageId":"604","endLine":15,"endColumn":25},{"ruleId":"601","severity":1,"message":"616","line":20,"column":12,"nodeType":"603","messageId":"604","endLine":20,"endColumn":19},{"ruleId":"618","severity":1,"message":"682","line":63,"column":8,"nodeType":"620","endLine":63,"endColumn":16,"suggestions":"683"},{"ruleId":"601","severity":1,"message":"680","line":11,"column":12,"nodeType":"603","messageId":"604","endLine":11,"endColumn":17},{"ruleId":"601","severity":1,"message":"674","line":11,"column":19,"nodeType":"603","messageId":"604","endLine":11,"endColumn":23},{"ruleId":"601","severity":1,"message":"681","line":13,"column":18,"nodeType":"603","messageId":"604","endLine":13,"endColumn":25},{"ruleId":"618","severity":1,"message":"684","line":49,"column":8,"nodeType":"620","endLine":49,"endColumn":10,"suggestions":"685"},{"ruleId":"601","severity":1,"message":"616","line":38,"column":12,"nodeType":"603","messageId":"604","endLine":38,"endColumn":19},{"ruleId":"601","severity":1,"message":"686","line":54,"column":12,"nodeType":"603","messageId":"604","endLine":54,"endColumn":25},{"ruleId":"618","severity":1,"message":"687","line":98,"column":8,"nodeType":"620","endLine":98,"endColumn":10,"suggestions":"688"},{"ruleId":"601","severity":1,"message":"638","line":13,"column":9,"nodeType":"603","messageId":"604","endLine":13,"endColumn":17},{"ruleId":"601","severity":1,"message":"638","line":12,"column":9,"nodeType":"603","messageId":"604","endLine":12,"endColumn":17},{"ruleId":"618","severity":1,"message":"689","line":12,"column":8,"nodeType":"620","endLine":12,"endColumn":14,"suggestions":"690"},{"ruleId":"601","severity":1,"message":"691","line":7,"column":18,"nodeType":"603","messageId":"604","endLine":7,"endColumn":22},{"ruleId":"601","severity":1,"message":"680","line":14,"column":37,"nodeType":"603","messageId":"604","endLine":14,"endColumn":42},{"ruleId":"601","severity":1,"message":"692","line":25,"column":12,"nodeType":"603","messageId":"604","endLine":25,"endColumn":21},{"ruleId":"618","severity":1,"message":"693","line":36,"column":8,"nodeType":"620","endLine":36,"endColumn":16,"suggestions":"694"},{"ruleId":"601","severity":1,"message":"695","line":1,"column":17,"nodeType":"603","messageId":"604","endLine":1,"endColumn":26},{"ruleId":"601","severity":1,"message":"696","line":2,"column":10,"nodeType":"603","messageId":"604","endLine":2,"endColumn":16},{"ruleId":"601","severity":1,"message":"697","line":13,"column":39,"nodeType":"603","messageId":"604","endLine":13,"endColumn":46},{"ruleId":"601","severity":1,"message":"616","line":15,"column":12,"nodeType":"603","messageId":"604","endLine":15,"endColumn":19},{"ruleId":"601","severity":1,"message":"629","line":38,"column":19,"nodeType":"603","messageId":"604","endLine":38,"endColumn":27},{"ruleId":"601","severity":1,"message":"629","line":88,"column":19,"nodeType":"603","messageId":"604","endLine":88,"endColumn":27},{"ruleId":"618","severity":1,"message":"698","line":126,"column":8,"nodeType":"620","endLine":126,"endColumn":16,"suggestions":"699"},{"ruleId":"601","severity":1,"message":"629","line":139,"column":19,"nodeType":"603","messageId":"604","endLine":139,"endColumn":27},{"ruleId":"601","severity":1,"message":"697","line":11,"column":40,"nodeType":"603","messageId":"604","endLine":11,"endColumn":47},{"ruleId":"601","severity":1,"message":"616","line":13,"column":12,"nodeType":"603","messageId":"604","endLine":13,"endColumn":19},{"ruleId":"601","severity":1,"message":"629","line":76,"column":19,"nodeType":"603","messageId":"604","endLine":76,"endColumn":27},{"ruleId":"618","severity":1,"message":"700","line":116,"column":8,"nodeType":"620","endLine":116,"endColumn":16,"suggestions":"701"},{"ruleId":"601","severity":1,"message":"629","line":130,"column":19,"nodeType":"603","messageId":"604","endLine":130,"endColumn":27},{"ruleId":"601","severity":1,"message":"702","line":6,"column":18,"nodeType":"603","messageId":"604","endLine":6,"endColumn":30},{"ruleId":"601","severity":1,"message":"616","line":15,"column":12,"nodeType":"603","messageId":"604","endLine":15,"endColumn":19},{"ruleId":"601","severity":1,"message":"703","line":19,"column":12,"nodeType":"603","messageId":"604","endLine":19,"endColumn":16},{"ruleId":"601","severity":1,"message":"704","line":19,"column":18,"nodeType":"603","messageId":"604","endLine":19,"endColumn":25},{"ruleId":"601","severity":1,"message":"705","line":20,"column":12,"nodeType":"603","messageId":"604","endLine":20,"endColumn":19},{"ruleId":"601","severity":1,"message":"706","line":20,"column":21,"nodeType":"603","messageId":"604","endLine":20,"endColumn":31},{"ruleId":"618","severity":1,"message":"707","line":33,"column":8,"nodeType":"620","endLine":33,"endColumn":16,"suggestions":"708"},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["709"],"no-negated-in-lhs",["710"],"'error' is assigned a value but never used.","'Switch' is defined but never used.","'toggleDetail' is assigned a value but never used.","'Spacer' is defined but never used.","'logo6' is defined but never used.","'PastryDetail' is defined but never used.","'refresh' is assigned a value but never used.","'loading' is assigned a value but never used.","'total' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bakerId', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["711"],"'_baker' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props', 'setIsDetail', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["712"],["709"],["710"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["713"],"'response' is assigned a value but never used.","'isDetail' is assigned a value but never used.","'logo5' is defined but never used.","'detail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pastries' and 'props.setPastries'. Either include them or remove the dependency array.",["714"],"'IoEnter' is defined but never used.","'IoLogInSharp' is defined but never used.","'value' is assigned a value but never used.","'setError' is assigned a value but never used.","'Links' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'IoLogoInstagram' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Select' is defined but never used.","'animatedComponents' is assigned a value but never used.","'categories' is assigned a value but never used.","'idCard' is assigned a value but never used.","'errorIdCard' is assigned a value but never used.","'companyName' is assigned a value but never used.","'setIdCard' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'errorCompanyName' is assigned a value but never used.","'setErrorIdCard' is assigned a value but never used.","'setErrorCompanyName' is assigned a value but never used.","'_categories' is assigned a value but never used.","'colourStyles' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'ButtonOne' is defined but never used.","'LinkOne' is defined but never used.","'Selector' is defined but never used.","'errorCategories' is assigned a value but never used.","'PastryCard' is defined but never used.","'IoDocument' is defined but never used.","'IoMail' is defined but never used.","'NavLink' is defined but never used.","'IoThumbsUp' is defined but never used.","'setLoading' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["715"],["716"],"'pans2' is defined but never used.","'setIsDetail' is assigned a value but never used.","'token' is assigned a value but never used.","'setPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page', 'props', and 'user._id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["717"],"React Hook useEffect has missing dependencies: 'page' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["718"],"'locationError' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_categories', 'locations', 'user.about', 'user.categories', 'user.companyName', 'user.email', 'user.location', 'user.momoName', 'user.momoNumber', 'user.name', and 'user.telNumber'. Either include them or remove the dependency array.",["719"],"React Hook useEffect has a missing dependency: 'setShow'. Either include it or remove the dependency array.",["720"],"'Link' is defined but never used.","'typeError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.categories'. Either include it or remove the dependency array.",["721"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'onClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pastry.dislikes.users.length', 'pastry.length', 'pastry.likes.users.length', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["722"],"React Hook useEffect has missing dependencies: 'pastry.length', 'pastry.message', 'pastry.pastryId.dislikes.users.length', 'pastry.pastryId.likes.users.length', and 'pastry.quantity'. Either include them or remove the dependency array.",["723"],"'Notification' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'baker.dislikes.users.length', 'baker.followers.users.length', 'baker.length', and 'baker.likes.users.length'. Either include them or remove the dependency array.",["724"],"no-global-assign","no-unsafe-negation",{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"733","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},"Update the dependencies array to be: [bakerId, props, token]",{"range":"752","text":"753"},"Update the dependencies array to be: [props, setIsDetail, token]",{"range":"754","text":"755"},"Update the dependencies array to be: [isDetail, loading, user._id]",{"range":"756","text":"757"},"Update the dependencies array to be: [pastries, props.setPastries, text]",{"range":"758","text":"759"},"Update the dependencies array to be: [props, token]",{"range":"760","text":"761"},{"range":"762","text":"761"},"Update the dependencies array to be: [isOpen, page, props, user._id]",{"range":"763","text":"764"},"Update the dependencies array to be: [page, props]",{"range":"765","text":"766"},"Update the dependencies array to be: [_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",{"range":"767","text":"768"},"Update the dependencies array to be: [setShow, show]",{"range":"769","text":"770"},"Update the dependencies array to be: [isOpen, user.categories]",{"range":"771","text":"772"},"Update the dependencies array to be: [detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length, props]",{"range":"773","text":"774"},"Update the dependencies array to be: [detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",{"range":"775","text":"776"},"Update the dependencies array to be: [baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]",{"range":"777","text":"778"},[2524,2526],"[bakerId, props, token]",[2485,2487],"[props, setIsDetail, token]",[2288,2307],"[isDetail, loading, user._id]",[612,618],"[pastries, props.setPastries, text]",[2174,2176],"[props, token]",[2161,2163],[2205,2213],"[isOpen, page, props, user._id]",[1690,1692],"[page, props]",[3872,3874],"[_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",[273,279],"[setShow, show]",[1534,1542],"[isOpen, user.categories]",[3930,3938],"[detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length, props]",[3586,3594],"[detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",[1203,1211],"[baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]"]