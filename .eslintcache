[{"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js":"1","/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js":"2","/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js":"3","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js":"4","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js":"5","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js":"6","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js":"7","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js":"8","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js":"9","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js":"10","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js":"11","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js":"12","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js":"13","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js":"14","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js":"15","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js":"16","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js":"17","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AdminImage/AdminImage.component.js":"18","/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js":"19","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js":"20","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js":"21","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js":"22","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js":"23","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js":"24","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js":"25","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js":"26","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js":"27","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js":"28","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js":"29","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js":"30","/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js":"31","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js":"32","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js":"33","/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js":"34","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js":"35","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js":"36","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js":"37","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js":"38","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js":"39","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js":"40","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js":"41","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js":"42","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js":"43","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js":"44","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js":"45","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js":"46","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js":"47","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js":"48","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js":"49","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js":"50","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js":"51","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js":"52","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js":"53","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js":"54","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js":"55","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js":"56","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js":"57","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js":"58","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js":"59","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareImg.component.js":"60","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js":"61","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js":"62","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js":"63","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js":"64","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js":"65","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js":"66","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js":"67","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js":"68","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js":"69","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js":"70","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js":"71","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js":"72","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js":"73","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js":"74","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js":"75","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js":"76","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js":"77","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js":"78","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js":"79","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js":"80","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js":"81","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js":"82","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js":"83","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js":"84","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js":"85","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js":"86","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js":"87","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js":"88","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js":"89","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js":"90","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js":"91","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js":"92","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js":"93","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js":"94","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js":"95","/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js":"96","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js":"97","/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js":"98","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js":"99","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js":"100","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js":"101","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js":"102","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js":"103","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js":"104","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js":"105","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js":"106","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/OrdersSuper/Order.section.js":"107","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SOrdersTable/OrderTable.component.js":"108","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserDetails/UserDetails.component.js":"109","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderDetails/OrderDetails.component.js":"110","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/UserProfile/UserProfile.section.js":"111","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserImage/UserImage.component.js":"112","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPastry/EditPastry.section.js":"113","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryFilter/PastryFilter.section.js":"114","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderFilter/OrderFilter.section.js":"115","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AImage/AImage.component.js":"116","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPassword/EditPassword.section.js":"117","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerProfile/BakerProfile.section.js":"118","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js":"119"},{"size":512,"mtime":1616967156312,"results":"120","hashOfConfig":"121"},{"size":507,"mtime":1616967251902,"results":"122","hashOfConfig":"121"},{"size":362,"mtime":1606471040948,"results":"123","hashOfConfig":"121"},{"size":9773,"mtime":1618775606661,"results":"124","hashOfConfig":"121"},{"size":7339,"mtime":1618778567215,"results":"125","hashOfConfig":"121"},{"size":1129,"mtime":1618778653441,"results":"126","hashOfConfig":"121"},{"size":334,"mtime":1616967155352,"results":"127","hashOfConfig":"121"},{"size":359,"mtime":1616967155320,"results":"128","hashOfConfig":"121"},{"size":316,"mtime":1616967155296,"results":"129","hashOfConfig":"121"},{"size":374,"mtime":1616967155260,"results":"130","hashOfConfig":"121"},{"size":332,"mtime":1616967155288,"results":"131","hashOfConfig":"121"},{"size":498,"mtime":1616967155344,"results":"132","hashOfConfig":"121"},{"size":4351,"mtime":1618778623784,"results":"133","hashOfConfig":"121"},{"size":7330,"mtime":1618778676149,"results":"134","hashOfConfig":"121"},{"size":291,"mtime":1616967155132,"results":"135","hashOfConfig":"121"},{"size":295,"mtime":1616967155152,"results":"136","hashOfConfig":"121"},{"size":10235,"mtime":1618778602132,"results":"137","hashOfConfig":"121"},{"size":4348,"mtime":1618778523438,"results":"138","hashOfConfig":"121"},{"size":870,"mtime":1617999706354,"results":"139","hashOfConfig":"121"},{"size":266,"mtime":1616967156432,"results":"140","hashOfConfig":"121"},{"size":367,"mtime":1616967156432,"results":"141","hashOfConfig":"121"},{"size":923,"mtime":1617400868498,"results":"142","hashOfConfig":"121"},{"size":346,"mtime":1616967156292,"results":"143","hashOfConfig":"121"},{"size":645,"mtime":1617470251822,"results":"144","hashOfConfig":"121"},{"size":476,"mtime":1617470138686,"results":"145","hashOfConfig":"121"},{"size":435,"mtime":1616967156192,"results":"146","hashOfConfig":"121"},{"size":4696,"mtime":1616967156192,"results":"147","hashOfConfig":"121"},{"size":5534,"mtime":1617912940139,"results":"148","hashOfConfig":"121"},{"size":1964,"mtime":1618008013758,"results":"149","hashOfConfig":"121"},{"size":577,"mtime":1616967156176,"results":"150","hashOfConfig":"121"},{"size":1051,"mtime":1618007217969,"results":"151","hashOfConfig":"121"},{"size":3906,"mtime":1617908480348,"results":"152","hashOfConfig":"121"},{"size":2052,"mtime":1617914337096,"results":"153","hashOfConfig":"121"},{"size":2141,"mtime":1618778463605,"results":"154","hashOfConfig":"121"},{"size":433,"mtime":1618778158014,"results":"155","hashOfConfig":"121"},{"size":356,"mtime":1616967155512,"results":"156","hashOfConfig":"121"},{"size":255,"mtime":1616967155456,"results":"157","hashOfConfig":"121"},{"size":386,"mtime":1616967155528,"results":"158","hashOfConfig":"121"},{"size":2257,"mtime":1617141358785,"results":"159","hashOfConfig":"121"},{"size":618,"mtime":1617479404364,"results":"160","hashOfConfig":"121"},{"size":1636,"mtime":1617907459169,"results":"161","hashOfConfig":"121"},{"size":183,"mtime":1616967155796,"results":"162","hashOfConfig":"121"},{"size":969,"mtime":1617915296841,"results":"163","hashOfConfig":"121"},{"size":734,"mtime":1618778868082,"results":"164","hashOfConfig":"121"},{"size":8656,"mtime":1618775930550,"results":"165","hashOfConfig":"121"},{"size":491,"mtime":1616967155356,"results":"166","hashOfConfig":"121"},{"size":549,"mtime":1616967155724,"results":"167","hashOfConfig":"121"},{"size":1429,"mtime":1616967155360,"results":"168","hashOfConfig":"121"},{"size":7445,"mtime":1618778842389,"results":"169","hashOfConfig":"121"},{"size":986,"mtime":1616967155440,"results":"170","hashOfConfig":"121"},{"size":586,"mtime":1616967155396,"results":"171","hashOfConfig":"121"},{"size":970,"mtime":1616967155424,"results":"172","hashOfConfig":"121"},{"size":1164,"mtime":1616967155444,"results":"173","hashOfConfig":"121"},{"size":3960,"mtime":1618778943188,"results":"174","hashOfConfig":"121"},{"size":6493,"mtime":1618778963344,"results":"175","hashOfConfig":"121"},{"size":4926,"mtime":1618778779028,"results":"176","hashOfConfig":"121"},{"size":736,"mtime":1616967155812,"results":"177","hashOfConfig":"121"},{"size":2389,"mtime":1618778823213,"results":"178","hashOfConfig":"121"},{"size":699,"mtime":1616967155828,"results":"179","hashOfConfig":"121"},{"size":971,"mtime":1616967155812,"results":"180","hashOfConfig":"121"},{"size":13147,"mtime":1618776059273,"results":"181","hashOfConfig":"121"},{"size":11092,"mtime":1618776026436,"results":"182","hashOfConfig":"121"},{"size":709,"mtime":1616967155488,"results":"183","hashOfConfig":"121"},{"size":4540,"mtime":1616967157576,"results":"184","hashOfConfig":"121"},{"size":5400,"mtime":1618778753623,"results":"185","hashOfConfig":"121"},{"size":1092,"mtime":1616967155996,"results":"186","hashOfConfig":"121"},{"size":799,"mtime":1618673115636,"results":"187","hashOfConfig":"121"},{"size":2664,"mtime":1617136724183,"results":"188","hashOfConfig":"121"},{"size":8410,"mtime":1618000505815,"results":"189","hashOfConfig":"121"},{"size":3641,"mtime":1618778037519,"results":"190","hashOfConfig":"121"},{"size":9421,"mtime":1617111437233,"results":"191","hashOfConfig":"121"},{"size":3479,"mtime":1617922492259,"results":"192","hashOfConfig":"121"},{"size":2235,"mtime":1616967157748,"results":"193","hashOfConfig":"121"},{"size":127,"mtime":1616967158152,"results":"194","hashOfConfig":"121"},{"size":2177,"mtime":1618776393563,"results":"195","hashOfConfig":"121"},{"size":1063,"mtime":1616967157828,"results":"196","hashOfConfig":"121"},{"size":1980,"mtime":1616967157588,"results":"197","hashOfConfig":"121"},{"size":7589,"mtime":1618067845912,"results":"198","hashOfConfig":"121"},{"size":2081,"mtime":1616967157820,"results":"199","hashOfConfig":"121"},{"size":486,"mtime":1616967157916,"results":"200","hashOfConfig":"121"},{"size":6446,"mtime":1617917508666,"results":"201","hashOfConfig":"121"},{"size":610,"mtime":1616967157716,"results":"202","hashOfConfig":"121"},{"size":5246,"mtime":1617917497362,"results":"203","hashOfConfig":"121"},{"size":5162,"mtime":1617917409821,"results":"204","hashOfConfig":"121"},{"size":5922,"mtime":1617991040276,"results":"205","hashOfConfig":"121"},{"size":6067,"mtime":1618074585260,"results":"206","hashOfConfig":"121"},{"size":8885,"mtime":1618073902964,"results":"207","hashOfConfig":"121"},{"size":5531,"mtime":1618002929973,"results":"208","hashOfConfig":"121"},{"size":6750,"mtime":1616967157792,"results":"209","hashOfConfig":"121"},{"size":10214,"mtime":1617474346087,"results":"210","hashOfConfig":"121"},{"size":151,"mtime":1616967156392,"results":"211","hashOfConfig":"121"},{"size":362,"mtime":1617915415275,"results":"212","hashOfConfig":"121"},{"size":416,"mtime":1617470148494,"results":"213","hashOfConfig":"121"},{"size":121,"mtime":1618670781901,"results":"214","hashOfConfig":"121"},{"size":291,"mtime":1616967158360,"results":"215","hashOfConfig":"121"},{"size":2329,"mtime":1617201290462,"results":"216","hashOfConfig":"121"},{"size":622,"mtime":1617971997529,"results":"217","hashOfConfig":"121"},{"size":640,"mtime":1617400812380,"results":"218","hashOfConfig":"121"},{"size":2299,"mtime":1616967157928,"results":"219","hashOfConfig":"121"},{"size":2762,"mtime":1616967157836,"results":"220","hashOfConfig":"121"},{"size":781,"mtime":1617482433168,"results":"221","hashOfConfig":"121"},{"size":973,"mtime":1617991334710,"results":"222","hashOfConfig":"121"},{"size":805,"mtime":1617918247302,"results":"223","hashOfConfig":"121"},{"size":639,"mtime":1616967158068,"results":"224","hashOfConfig":"121"},{"size":4418,"mtime":1617916522457,"results":"225","hashOfConfig":"121"},{"size":3950,"mtime":1617996649084,"results":"226","hashOfConfig":"121"},{"size":5869,"mtime":1617917423821,"results":"227","hashOfConfig":"121"},{"size":2801,"mtime":1618778895943,"results":"228","hashOfConfig":"121"},{"size":7333,"mtime":1618778914471,"results":"229","hashOfConfig":"121"},{"size":6784,"mtime":1618775701836,"results":"230","hashOfConfig":"121"},{"size":10757,"mtime":1618779134792,"results":"231","hashOfConfig":"121"},{"size":4235,"mtime":1618778929015,"results":"232","hashOfConfig":"121"},{"size":10817,"mtime":1617302799035,"results":"233","hashOfConfig":"121"},{"size":2090,"mtime":1617995129191,"results":"234","hashOfConfig":"121"},{"size":2317,"mtime":1617918733035,"results":"235","hashOfConfig":"121"},{"size":4021,"mtime":1618778537450,"results":"236","hashOfConfig":"121"},{"size":6402,"mtime":1617914162769,"results":"237","hashOfConfig":"121"},{"size":16084,"mtime":1618074011256,"results":"238","hashOfConfig":"121"},{"size":7519,"mtime":1618779078595,"results":"239","hashOfConfig":"121"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"njy6to",{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"485","messages":"486","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},"/home/jb-inc/Desktop/cara-cakes-react-app/src/index.js",["495"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/App.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/reportWebVitals.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CartTable/CartTable.component.js",["496","497","498","499"],"import React, { useEffect, useState } from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { ActivityTwo, Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './CartTable.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst CartTable = (props) => { \n    const {isDetail, setIsDetail, setPastry, user, refresh, token} = props;\n\n    const showDetail = (pastry) => {\n        setIsDetail(true);\n        setPastry(pastry);\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [_user, setUser] = useState([]);\n    const [message, setMessage] = useState({});\n    const [cart, setCart] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [isDetail])\n\n    useEffect(() => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: 'Please sign up and get an account for free.',\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/getcart/${user._id}`, {\n            method: 'GET'\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setUser(response.user);\n                setCart(response.bakers);\n            }\n\n            if (statusCode === 404) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n\n            if (statusCode === 500) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: response.message,\n                })\n            }\n        })\n        .catch(err => {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: `Unexpected Error`,\n                message: `Please check your internet connection.`\n            });\n        })\n\n        return () => {\n            setLoading(false);\n            setUser([]);\n            setShow(false);\n            setMessage({});\n            setCart({});\n        }\n    }, [refresh]);\n\n    const Trash = (event, id) => {\n        event.stopPropagation();\n        setLoading(true);\n        fetch(`${BASE_URL}/user/removeFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n            props.setRefresh(true);\n\n            if (statusCode === 200) {\n                setShow(true);\n                setMessage({\n                    type: 'success',\n                    message: `Pastry removed from cart`,\n                    title: 'Success'\n                });\n                props.setRefresh(false);\n            }\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `Not removed from cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            setLoading(false);\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    const Order = (id) => {\n        fetch(`${BASE_URL}/create/order/${user._id}?baker=${id}`, {\n            method: 'POST',\n            headers: {\n                'Authorization': `Basic ${token}`,\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        title: 'Success',\n                        message: 'Successfully placed your order',\n                    });\n                    setTimeout(() => {\n                        props.setRefresh(true);                        \n                    }, 2000);\n                }\n            })\n            .catch(err => {\n                setLoading(false);\n                setShow(true);\n                setMessage({\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                });\n        })\n    }\n\n    return (\n        <>\n            {loading ? <div>\n                <ActivityTwo />\n            </div> : <>\n                {Object.keys(cart)[0] ? Object.values(cart).map((pastries, index) => (\n                    <div className={styles.cartSeparator} key={ index }>\n                        <h1 className={styles.cartListBaker}>Company: {Object.keys(cart)[index]} {_user.find(data => data.pastryId.creator.companyName === `${Object.keys(cart)[index]}`).pastryId.creator.suspend && <span className={styles.suspended}>Suspended, order at your own discretion.</span>}</h1>\n                        <table className={styles.cartTable}>\n                            <thead className={styles.cartTableHeader}>\n                                <td className={styles.cartTableHeadeData}>Product</td>\n                                <td className={styles.cartTableHeaderData}>Price</td>\n                                <td className={styles.cartTableHeaderData}>Discount</td>\n                                <td className={styles.cartTableHeaderData}>Quantity</td>\n                                <td className={styles.cartTableHeaderData}>Total</td>\n                            </thead>\n\n                        {pastries.map((pastry, index) => \n                            <tr className={styles.cartTableRow} onClick={() => showDetail(pastry)} key={index}>\n                                <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                    <img src={`${BASE_URL}/${pastry.pastryId.image}`} alt={pastry.pastryId.name} className={styles.cartTableDataImage} />\n                                    <b>{pastry.pastryId.name}</b>\n                                </td>\n                                <td className={styles.cartTableData}>{Thousand(pastry.pastryId.price)}</td>\n                                <td className={styles.cartTableData}>{pastry.pastryId.discount}%</td>\n                                <td className={styles.cartTableData}>{pastry.quantity} <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={(event) => Trash(event, pastry.pastryId._id)}><IoTrashBinSharp /></button></td>\n                                <td className={styles.cartTableData}>{Thousand(pastry.quantity * pastry.pastryId.price)}</td>\n                            </tr>\n                        )}\n                            <tr className={styles.cartTableRow}>\n                                <td colSpan=\"3\" className={[styles.cartTableData, styles.cartCoupon].join(' ')}>\n                                    <input type=\"text\" placeholder=\"Coupon Code\" className={styles.cartCouponInput} /> \n                                    <button className={styles.cartButton}>Apply</button>\n                                </td>\n                                <td colSpan=\"1\" className={[styles.cartTableData, styles.cartCoupon].join(' ')}>\n                                    <button className={styles.cartButton} onClick={() => Order(_user.find(data => data.pastryId.creator.companyName === `${Object.keys(cart)[index]}`).pastryId.creator._id)}>Order</button>\n                                </td>\n                                <td colSpan=\"1\" className={styles.cartTableData}>Total: {Thousand(Object.values(cart)[index].reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}</td>\n                            </tr>\n                        </table>\n                    </div>\n                )) : <div className={styles.cartSeparator}>\n                            <h2 className={styles.title}>No Pastries in Cart</h2>\n                    </div>}\n                <Notification setShow={setShow} show={show} message={message} />\n            </>}\n        </>\n    )\n}\n\nconst mapStateToProps = ({auth, refresh}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n        refresh: refresh.refresh\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerCard/BakerCard.component.js",["500","501","502"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersCard/BakersCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CreateEvent/CreateEvent.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonTwo/ButtonTwo.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ButtonThree/ButtonThree.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Button.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Button/Link.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/CircleProgress/CircleProgess.section.js",["503"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerInfo/BakerInfo.component.js",["504","505"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakersTable/BakerTable.component.js",["506","507","508","509"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Activity/Activity.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/ActivityTwo/Activity.component.js",["510"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/BakerDetails/BakerDetails.component.js",["511","512","513"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoPeople, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './BakerDetails.module.css';\nimport { HLogo, HouseLogo, vals3 } from '../../res/img';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst BakerDetails = (props) => {\n    const { detail, setDetail, baker, user, refresh } = props;\n\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [followers, setFollowers] = useState(0);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        if (baker.length !== 0) {\n            setLikes(baker.likes.users.length);\n            setDislikes(baker.dislikes.users.length);\n            setFollowers(baker.followers.users.length);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setFollowers(0);\n        }\n    }, [detail]);\n\n    useEffect(() => {\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setFollowers(0);\n        }\n    }, []);\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    const Close = () => {\n        setDetail(false);\n    };\n\n\n    const disLikeBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likeBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log('response')\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const followBaker = (id) => {\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to follow ${baker.companyName}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/baker/follow/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                if (statusCode === 200) {\n                    setFollowers(response.followers.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log('response')\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const bakerShop = (bakerId) => {\n        props.setBaker(bakerId);\n        props.history.push({pathname: '/user/shop/pastries'})\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(event) => stopClose(event)}>\n                {baker.length !== 0 && \n                    <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.bakerContainer}>\n                        <div className={styles.pastryContainer}>\n                            <div className={styles.pastryDiscount} onClick={() => followBaker(baker._id || '')}><IoPeople className={styles.icon} /> Followers: {Thousand(followers)}</div>\n                            <img src={baker.ceoImage ? `${BASE_URL}/${baker.ceoImage}` : HouseLogo} alt={baker.price} className={styles.pastryImage} />\n                            <div className={styles.pastryPrice}><img src={baker.companyImage ? `${BASE_URL}/${baker.companyImage}` : HLogo} alt=\"Product\" className={styles.bakerListImgLogo}/></div>\n                            <div className={styles.pastryLikes} onClick={() => likeBaker(baker._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikeBaker(baker._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        <div className={styles.bakerDetails}>\n                            <h1 className={styles.bakerCompany}>{baker.companyName}</h1>\n                            <div className={styles.bakerDetailsScroll}>\n                                <b className={styles.bakerCEO}>CEO: <span className={styles.info}>{baker.name}</span></b>\n                                <h2 className={styles.subTitle}>Categories</h2>\n                                <ol className={styles.bakerCategories}>\n                                    {baker.categories.map((category, index) => <li>{category}</li>)}\n                                </ol>\n                                {user.type === ('Admin') &&\n                                    <>\n                                        <h2 className={styles.smallDetails}>Email: <span className={styles.info}>{baker.email}</span></h2>\n                                        <h2 className={styles.smallDetails}>Telephone: <span className={styles.info}>{baker.telNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>ID No: <span className={styles.info}>{baker.idCardNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>Location: <span className={styles.info}>{baker.location}</span></h2>\n                                        <h2 className={styles.smallDetails}>MoMO Number: <span className={styles.info}>{baker.momp}</span></h2>\n                                        <h2 className={styles.smallDetails}>MOMO Name : <span className={styles.info}>{baker.momoName}</span></h2>\n                                    </>\n                                }\n                                <h2 className={styles.subTitle}>About</h2>\n                                <b className={styles.bakerAbout}>{baker.about || 'empty'}</b>\n                            </div>\n                            <div className={styles.actions}>\n                                {user.type !== 'Baker' && user.type !== 'Admin' && <Button title='Shop' onClick={() => bakerShop(baker._id)} />}\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker, setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BakerDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AdminImage/AdminImage.component.js",["514"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AdminImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HLogo, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst AdminImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [logo, setLogo] = useState('');\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState(false);\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    const Save = (id) => {\n        const formData = new FormData();\n        formData.append('image', image[0]);\n        formData.append('logo', logo[0]);\n\n        fetch(`${BASE_URL}/baker/images/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                setShow(true);\n                props.setUser(response.baker);\n                setMessage({\n                    type: 'success',\n                    message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                    title: 'Success'\n                });\n                setTimeout(() => {\n                    setIsOpen(false);\n                 }, 2000);\n            }\n\n            if (statusCode === 500) {\n                console.log('error');\n                setIsOpen(false);\n            }\n        })\n        .catch(err => {\n            setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n    }\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.ceoImage ? `${BASE_URL}/${user.ceoImage}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                        <img src={logo ? URL.createObjectURL(logo[0]) : user.companyImage ? `${BASE_URL}/${user.companyImage}` : HLogo} alt={'Username'} className={styles.profileLogo} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <SquareImage\n                        label={'Upload Logo'}\n                        type='file'\n                        setValue={event => setLogo(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Router/Routes.navigation.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Refresh.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Data.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Reducers/Auth.reducer.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/types.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Login/Login.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Register/Register.screen.js",["515"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/AdminLogin/Admin.screen.js",["516","517","518"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Admin/Admin.screen.js",["519"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/Home/Home.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Screens/User/User.screen.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/res/img/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Header/Header.component.js",["520","521","522"],"import React, { useState } from 'react';\n\nimport styles from './Header.module.css';\nimport {Links} from '../../Components';\nimport { HouseLogo } from '../../res/img';\n\nconst Header = (props) => {\n    const [active, setActive] = useState(1)\n    return (\n        <div className={styles.container}>\n            <img src={HouseLogo} alt=\"CaraCakes\" className={styles.containerLogo} />\n        </div>\n    )\n};\n    \nexport default Header;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/ButtonOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Links/Links.component.js",["523"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/One/LinkOne.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SampleCard/SampleCard.component.js",["524"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/WorkArea/WorkArea.component.js",["525","526","527"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/NavBar/NavBar.component.js",["528","529","530"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Spacer/Spacer.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SearchBar/SearchBar.component.js",["531","532","533"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Profile/Profile.component.js",["534"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderTable/OrderTable.component.js",["535"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/DatePicker/DatePicker.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/RadioButtons/RadioButtons.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/EventCard/EventCard.component.js",["536"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCard/PastryCard.component.js",["537","538","539","540","541","542","543","544"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { IoStatsChart, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\n\nimport styles from './PastryCard.module.css';\nimport { HouseLogo, logo5, vals3 } from '../../res/img';\nimport { Button, Notification, PastryDetail } from '..';\nimport {BASE_URL} from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\n\nconst PastryCard = (props) => {\n    const {\n        isDetail,\n        setIsDetail,\n        pastry,\n        setPastry,\n        user,\n        filter,\n    } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState({});\n    const [show, setShow] = useState(false);\n    const [likes, setLikes] = useState(pastry.likes.users.length);\n    const [dislikes, setDislikes] = useState(pastry.dislikes.users.length);\n    const [detail, setDetails] = useState(false);\n\n    const showDetail = (pastry) => {\n        setIsDetail(true);\n        setPastry(pastry);\n    }\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    }\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: 'Please create your account to add to cart',\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastry.name} added to cart.`,\n                        title: 'Success'\n                    });\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    }\n\n    useEffect(() => {\n        return () => {\n            setLoading(false);\n            setShow(false);\n            setDetails(false);\n            setMessage({});\n        }\n    }, []);\n\n    return (\n        <>\n            <div className={styles.pastryListImgContainer}>\n                <h2 className={styles.pastryTitle}>{pastry.name}</h2>\n                <div className={styles.pastryImgContainer}>\n                    {pastry.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.discount}%</div>}\n                    <img src={pastry.image ? `${BASE_URL}/${pastry.image}` : HouseLogo} alt=\"Product\" className={styles.pastryListImg} />\n                    <div className={styles.pastryStats}>\n                        <div className={styles.pastryLikes}>\n                            <div className={styles.likeData} onClick={() => likePastry(pastry._id)}><IoThumbsUp /> {likes} </div>\n                            <div className={styles.likeData} onClick={() => disLikePastry(pastry._id)}><IoThumbsDown /> {dislikes} </div>\n                        </div>\n                        <h3>Price: {Thousand(pastry.price)} XAF</h3>\n                    </div>\n                </div>\n                <div className={styles.pastriesButtonContainer}>\n                    <Button title=\"Details\" onClick={() => showDetail(pastry)} />\n                    <Button title=\"Add to Cart\" onClick={() => AddToCart(pastry._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </>\n    )\n};\n\nconst mapStateToProps = ({ auth }) => {\n    return {\n        user: auth.user,\n    }\n};\n\nexport default connect(mapStateToProps)(PastryCard);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/TextArea.component.js",["545","546","547"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/InfoCard/InfoCard.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Input/Input.component.js",["548","549","550"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Language/Language.component.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserInfo/UserInfo.component.js",["551","552"],"import React, { useState } from 'react';\nimport { IoThumbsDownSharp, IoThumbsUpSharp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { UserDetails } from '..';\n\nimport { cups2, HLogo } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { HNumber, Thousand } from '../../utils/utilities';\nimport styles from './UserInfo.module.css';\n\nconst UserInfo = (props) => {\n    const { user, token, setRusers, User } = props;\n    const [_user, setUser] = useState([]);\n    const [detail, setDetail] = useState(false);\n\n    const ShowDetail = (user) => {\n        setUser(user);\n        setDetail(true);\n    };\n\n    const Suspend = (id) => {\n        fetch(`${BASE_URL}/user/suspend/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n\n                if (statusCode === 200) {\n                    setRusers(true);\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    \n    return (\n        <div className={styles.bakerCard}> \n            <div className={styles.bakerInfo}>\n                <img src={user.image ? `${BASE_URL}/${user.image}` : HLogo} alt=\"Baker name\" className={styles.bakerImg} />\n                <div className={styles.bakerId}>\n                    <h2 className={styles.bakerTitle}>{user.name.substr(0, 12)}</h2>\n                    <b className={styles.bakerSubTitle}>{HNumber(user.telNumber)}</b>\n                </div>\n                {User.type === 'Admin' && <button className={styles.bakerButton} onClick={() => ShowDetail(user)}>Details</button>}\n            </div>\n            <div className={styles.bakerStats}>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{user.orders.ordered.length}</h2>\n                    <b className={styles.bakerSubTitle}>Orders</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>10</h2>\n                    <b className={styles.bakerSubTitle}>Ordered</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>5</h2>\n                    <b className={styles.bakerSubTitle}>Categories</b>\n                </div>\n                <div className={styles.bakerNumber}>\n                    <h2 className={styles.bakerTitle}>{Thousand(user.total)}</h2>\n                    <b className={styles.bakerSubTitle}>Spent</b>\n                </div>\n            </div>\n            <div className={styles.bakerFooter}>\n                {/* <NavLink to=\"#\" className={styles.bakerMsg}><IoMail className={styles.bakerIcon} /> MESSAGE</NavLink> */}\n                <div className={styles.bakerRating}>\n                    <b className={styles.bakerRatingVal}><IoThumbsUpSharp className={styles.bakerRatingIcon} /> {user.likes.users.length}</b>\n                    <b className={styles.bakerRatingVal}><IoThumbsDownSharp className={styles.bakerRatingIcon} /> {user.dislikes.users.length}</b>\n                </div>\n                {User.type === 'Admin' && <button className={styles.bakerBtn} onClick={() => Suspend(user._id)}>{user.suspend ? 'Unsuspend' : 'Suspend'}</button>}\n            </div>\n            <UserDetails detail={detail} setDetail={setDetail} _user={_user} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        token: auth.token,\n        refresh: refresh.refresh,\n        User: auth.user,\n    }\n}\n\nexport default connect(mapStateToProps)(UserInfo);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UsersTable/UserTable.component.js",["553","554","555"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTable/PastryTable.component.js",["556","557","558","559"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareInput.component.js",["560"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastriesTableSuper/PastryTable.component.js",["561","562"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareTextArea.component.js",["563"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SquareInput/SquareImg.component.js",["564","565","566","567","568"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryDetail/PastryDetail.component.js",["569","570","571","572","573","574"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryDetail.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryDetail = (props) => {\n    const {detail, setDetail, pastry, user, refresh, setIsEdit} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.likes.users.length);\n            setDislikes(pastry.dislikes.users.length);\n        }\n        setCount(0);\n\n        return () => {\n            setPastryMessage('');\n            setLoading(false);\n            setLikes(0);\n            setDislikes(0);\n            setCount(0);\n            setShow(false);\n            setMessage({});\n        }\n\n    }, [detail]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to add to cart`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if(statusCode === 200) {\n                setCount(count + 1);\n                if(count === 0) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastry.name} added to cart`,\n                        title: 'Success'\n                    });\n                }\n            }\n\n            if(statusCode === 422) {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    message: `${pastry.name} not added to cart.`,\n                    title: 'Failed'\n                });\n            }\n\n        })\n        .catch(err => {\n            setShow(true);\n            setMessage({\n                type: 'error',\n                title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n            });\n        })\n    }\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const Close = () => {\n        setDetail(false);\n    }\n\n    const EditPastry = (pastry) => {\n        setIsEdit(true);\n        setDetail(false);\n    };\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to dislike ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        if (!user.hasOwnProperty('name')) {\n            setShow(true);\n            setMessage({\n                type: 'success',\n                message: `Please create your account to like ${pastry.name}`,\n                title: 'Unsuccessful'\n            });\n            return false;\n        }\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}  onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.pastryContainer}>\n                    {pastry.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.discount}%</div>}\n                    <div className={styles.pastryName}>{pastry.name}</div>\n                    <img src={`${BASE_URL}/${pastry.image}`} alt={pastry.price} className={styles.pastryImage} />\n                    {user.type !== 'Baker' ?\n                        <>\n                            <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price: {Thousand(count >= 1 ? count * pastry.price : pastry.price || 0)} XAF</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry._id)}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes} onClick={() => likePastry(pastry._id)}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        </> :\n                        <>\n                            <div className={styles.pastryDislikes}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                            <div className={styles.pastryLikes}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            {user.type === 'Baker' && <div className={styles.pastryEdit} onClick={() => EditPastry(pastry)}><IoBrush className={styles.icon} /> Edit</div>}\n                            <div className={styles.pastryPrice2}><IoThumbsUp className={styles.icon} /> Price: {Thousand(pastry.price || 0)} XAF</div>\n                        </>\n                    }\n                </div>\n                    {user.type !== 'Baker' && (count === 0 ? \n                        <div className={styles.notifyActions}>\n                            <button className={styles.notifyButton} onClick={() => AddToCart(pastry._id)}>Add to Cart</button>\n                        </div> :\n                        <div className={styles.notifyActions}>\n                            <button className={styles.pastryButton} onClick={() => SubFromCart(pastry._id)}><IoRemove /></button>\n                            <b className={styles.pastryQty}>Quantity: {count}</b>\n                            <button className={styles.pastryButton} onClick={() => AddToCart(pastry._id)}><IoAdd /></button>\n                        </div>\n                    )}\n                {count !== 0 && (\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry._id)}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                )}\n                <div className={styles.pastryDetails}>\n                   <h2 className={styles.pastryTitle}>Type: {pastry.type}</h2>\n                   <h2 className={styles.pastryTitle}>About</h2>\n                   <b className={styles.pastryDescription}>{pastry.description}</b>\n                   <h2 className={styles.pastryTitle}>Recipe</h2>\n                   <b className={styles.pastryDescription}>{pastry.recipe || 'Loading...'}</b>\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryDetail);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryCart/PastryCart.component.js",["575","576","577","578","579","580"],"import React, { useEffect, useState } from 'react';\nimport { IoAdd, IoBrush, IoClose, IoRemove, IoStatsChart, IoThumbsDown, IoThumbsUp, IoWallet } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Notification } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand } from '../../utils/utilities';\nimport styles from './PastryCart.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\n\nconst PastryCart = (props) => {\n    const { detail, setDetail, pastry, user, refresh } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [count, setCount] = useState(0);\n    const [show, setShow] = useState(false);\n    const [pastryMessage, setPastryMessage] = useState('');\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n    }, [refresh]);\n\n    const AddToCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/addToCart/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count + 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const SubFromCart = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/user/subFromCart/${id}?user=${user._id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setCount(count - 1);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 422) {\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        message: `${pastry.name} not added to cart.`,\n                        title: 'Failed'\n                    });\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                });\n            })\n    };\n\n    const Close = () => {\n        setDetail(false);\n    };\n\n\n    useEffect(() => {\n        if(pastry.length !== 0) {\n            setLikes(pastry.pastryId.likes.users.length);\n            setDislikes(pastry.pastryId.dislikes.users.length);\n            setPastryMessage(pastry.message);\n            setCount(pastry.quantity);\n        }\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n            setPastryMessage('');\n            setCount(0);\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, [detail]);\n\n\n    const Message = (id) => {\n        fetch(`${BASE_URL}/user/message/${id}?user=${user._id}&message=${pastryMessage}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        type: 'success',\n                        message: `${pastryMessage} added for pastry.`,\n                        title: 'Success'\n                    });\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const disLikePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n               setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likePastry = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/pastry/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].response;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                    props.setRefresh(true);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')}>\n                {pastry.length !== 0 && \n                <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.pastryContainer}>\n                        {pastry.pastryId.discount > 0 && <div className={styles.pastryDiscount}><IoStatsChart /> Discount: {pastry.pastryId.discount || ''}%</div>}\n                        <div className={styles.pastryName}>{pastry.pastryId.name || ''}</div>\n                        <img src={`${BASE_URL}/${pastry.pastryId.image || ''}`} alt={pastry.price} className={styles.pastryImage} />\n                        <div className={styles.pastryPrice}><IoWallet className={styles.icon} /> Price: {Thousand(count >= 1 ? count * pastry.pastryId.price : pastry.pastryId.price || 0)} XAF</div>\n                        <div className={styles.pastryLikes} onClick={() => likePastry(pastry.pastryId._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                        <div className={styles.pastryDislikes} onClick={() => disLikePastry(pastry.pastryId._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                    </div>\n                        {count === 0 ? \n                            <div className={styles.notifyActions}>\n                                <button className={styles.notifyButton} onClick={() => AddToCart(pastry.pastryId._id || '')}>Add to Cart</button>\n                            </div> :\n                            <div className={styles.notifyActions}>\n                                <button className={styles.pastryButton} onClick={() => SubFromCart(pastry.pastryId._id || '')}><IoRemove /></button>\n                                <b className={styles.pastryQty}>Quantity: {count || ''}</b>\n                                <button className={styles.pastryButton} onClick={() => AddToCart(pastry.pastryId._id || '')}><IoAdd /></button>\n                            </div>\n                        }\n                    <div>\n                        <input type=\"text\" placeholder=\"Message on pastry\" value={pastryMessage || ''} className={styles.pastryMessage} onChange={event => setPastryMessage(event.target.value)} />\n                        <button className={styles.notifyButton} onClick={() => Message(pastry.pastryId._id || '')}><IoBrush className={styles.icon} style={{paddingTop: '3px'}} />Paste</button>\n                    </div>\n                    <button className={styles.notifyButton} onClick={() => setDetail(false)}>Close</button>\n                </>}\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PastryCart);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Notification/Notification.component.js",["581"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AboutSection/About.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrdersTable/OrderTable.component.js",["582","583","584","585"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { HouseLogo, pans2 } from '../../res/img';\nimport { DateString, Thousand } from '../../utils/utilities';\nimport styles from './OrderTable.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Notification } from '..';\n\nconst OrderTable = (props) => { \n    const { orders, token, refresh, setDetail, setOrder } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n        \n        return () => {\n            setLoading(false);\n            setShow(false);\n            setMessage({});\n        }\n    }, [refresh]);\n    \n    const IncStatus = (order, total) => {\n        if (order.status !== 'On the Way' && order.status !== 'Confirmed') {\n            setLoading(true);\n            fetch(`${BASE_URL}/order/status/${order._id}?total=${total}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Basic ${token}`,\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(res => {\n                    const statusCode = res.status;\n                    const response = res.json();\n                    return Promise.all([statusCode, response]);\n                })\n                .then(res => {\n                    const statusCode = res[0];\n                    const response = res[1];\n                    setLoading(false);\n    \n                    if (statusCode === 200) {\n                        setShow(true);\n                        setMessage({\n                            title: 'Success',\n                            message: 'Order status updated.'\n                        });\n                        props.setRefresh(true);\n                    }\n    \n                })\n                .catch(err => {\n                    setLoading(false);\n                    setShow(true);\n                    setMessage({\n                        type: 'error',\n                        title: 'Unexpected Error',\n                        message: 'Please check your internet connection.',\n                    });\n                })\n        }\n    };\n\n    const OrderDetails = (order) => {\n        setOrder(order);\n        setDetail(true);\n    }\n\n\n    return (\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeaderData}>Client Name</td>\n                        <td className={styles.cartTableHeaderData}>Suspended</td>\n                        <td className={styles.cartTableHeaderData}>Status</td>\n                        <td className={styles.cartTableHeaderData}>Total</td>\n                        <td className={styles.cartTableHeaderData}>Date</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {orders.map((order, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={order.userId.image ? `${BASE_URL}/${order.userId.image}` : HouseLogo} alt={order.userId.name} className={styles.cartTableDataImage} />\n                                <b>{order.userId.name.substr(0, 20)}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{order.userId.suspend ? \"True\" : \"False\"}</td>\n                            <td className={styles.cartTableData}>{order.status}</td>\n                            <td className={styles.cartTableData}>{Thousand(order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}</td>\n                            <td className={styles.cartTableData}>{DateString(order.createdAt)}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => IncStatus(order, order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}>Inc Status</button>\n                                <button className={[styles.cartButton, styles.details].join(' ')} onClick={() => OrderDetails(order)}>Details</button>\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            <Notification setShow={setShow} show={show} message={message} />\n            </div>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        user: auth.user,\n        refresh: refresh.refresh\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderTable);\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/Verification/Verification.component.js",["586","587"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Header/Header.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Sample/Sample.section.js",["588","589","590","591","592","593","594"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Login/Login.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Footer/Footer.section.js",["595","596","597"],"import React from 'react';\nimport { IoLogoFacebook, IoLogoInstagram, IoLogoWhatsapp, IoMail, IoPhonePortrait } from 'react-icons/io5';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './Footer.module.css';\nimport {jbInc, HouseLogo1} from '../../res/img';\n\nconst Footer = () => {\n    return (\n        <footer className={styles.secFooter}>\n            <div className={styles.footerLogoBox}>\n                <img src={HouseLogo1} alt=\"CaraCakes\" className={styles.footerLogo} />\n            </div>\n    <div className={styles.secContainer}>\n        <div className={[styles.secSide, styles.footerLinks].join(' ')}>\n            <div>\n                <div className={styles.footerLeft}>\n                    <h3 className={styles.subTitle}>\n                        Locations\n                    </h3>\n                    <ul className={styles.footerList}>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Buea</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Limbe</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Bamenda</NavLink></li>\n                    </ul>\n                </div>\n                <div className={styles.footerRight}>\n                    <h3 className={styles.subTitle}>\n                        Protocol\n                    </h3>\n                    <ul className={styles.footerList}>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Terms and Condition</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Privacy Policy</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerLink}>Careers</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerDev}>JB Inc</NavLink></li>\n                        <li className={styles.footerItem}><NavLink to='/hello' className={styles.footerDev}>Jume Brice</NavLink></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div className={styles.secSide}>\n            <div className={styles.footerCreator}>\n                <div className={styles.footerCreatorBox}>\n                    <img src={jbInc} alt=\"Creator\" className={styles.footerImage} />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div className={styles.footerContacts}>\n        <span className={styles.footerContactsRound}><a href='https://www.facebook.com/jume.njah' target=\"_blank\"><IoLogoFacebook className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}><a href='tel:237679574561'><IoPhonePortrait className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}><a href='mailto:bricejume@gmail.com'><IoMail className={styles.footerIcons}/></a></span>\n        <span className={styles.footerContactsRound}>\n            <a \n                href=\"https://wa.me/237681726633?text=Good%20day,%20Mr%20Jume%20Brice,%20I'm%20interested%20in%20creating%20a%20baker%20account%20for%20my%20pastry%20business\"\n                target=\"_blank\"\n            >\n                <IoLogoWhatsapp />\n            </a></span>\n    </div>\n    <div className={styles.copyRight}>\n        <p>Copyright &copy; of <NavLink to=\"/admin\" className={styles.admin}>JBInc</NavLink></p>\n    </div>\n</footer>\n    )\n}\n\nexport default Footer;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Register/Register.section.js",["598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/SideNav/SideNav.section.js",["612"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Contact/Contact.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/index.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Baker/Baker.section.js",["613"],"import React, { useEffect, useState } from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport styles from './Baker.module.css';\nimport {BakersCard, Notification} from '../../Components';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { setBakers } from '../../redux/Actions/Data.actions';\n\nconst Baker = (props) => {\n\n    const [bakers, setBakers] = useState([]);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        fetch(`${BASE_URL}/bakers`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n\n            if (statusCode === 200) {\n                props.setBakers(response.bakers);\n                setBakers(response.bakers.sort((x, y) => y.total - x.total));\n            }\n        })\n        .catch(err => {\n            setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n\n        return () => {\n        }\n\n    }, []);\n\n    return (\n        <section className={styles.secDescription} id=\"stry\">\n            <h2 className={styles.title}>\n                Our top expert bakers\n            </h2>\n            <div className={styles.dashScroll}>\n                <div className={styles.dashContainer}>\n                    {bakers.map((baker, index) => ((index <= 3) && <BakersCard baker={baker} key={index} />))}\n                </div>\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n        </section>\n    )\n}\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setBakers }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(Baker);\n\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/Event.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddEvent/AddEvent.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminNav/AdminNav.section.js",["614","615"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditEvent/EditEvent.section.js",["616","617"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/Order.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Bakers/Baker.section.js",["618","619","620","621","622"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/Cart.section.js",["623"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Users/User.section.js",["624","625","626","627"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Pastry/Pastry.section.js",["628","629","630","631","632"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Orders/Order.section.js",["633","634","635","636"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/PastrySuper/Pastry.section.js",["637","638","639","640","641","642"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerDetails/BakerDetails.section.js",["643","644"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Dashboard/Dashboard.section.js",["645","646","647","648","649"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Details/Details.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AddPastry/AddPastry.section.js",["650","651","652","653"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Refresh.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/search.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Auth.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/globalVariable.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/auth.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/utils/utilities.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/Pastry.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/redux/Actions/Data.actions.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderDetail/Order.detail.js",["654"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventDetail/Event.detail.js",["655","656"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Events/EventList/Event.list.js",["657"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Order/OrderList/Order.list.js",["658","659"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Cart/CartList/Cart.list.js",["660"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/Baker.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/PastryShop/PastryList/Pastry.list.js",["661","662","663","664"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/Shop/BakerShop/BakerList/Baker.list.js",["665","666","667"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/OrdersSuper/Order.section.js",["668","669","670","671","672","673","674"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/SOrdersTable/OrderTable.component.js",["675","676","677"],"import React from 'react';\nimport { IoTrashBinSharp } from 'react-icons/io5';\n\nimport { HouseLogo, pans2 } from '../../res/img';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { DateString, Thousand } from '../../utils/utilities';\nimport styles from './OrderTable.module.css';\n\nconst OrderTable = (props) => { \n    const { orders, token, setOrder, setDetail } = props;\n\n    const OrderDetails = (order) => {\n        setOrder(order);\n        setDetail(true);\n    }\n\n    return (\n            <div className={styles.cartSeparator}>\n                <table className={styles.cartTable}>\n                    <thead className={styles.cartTableHeader}>\n                        <td className={styles.cartTableHeadeData}>Client Name</td>\n                        <td className={styles.cartTableHeaderData}>Company Name</td>\n                        <td className={styles.cartTableHeaderData}>Status</td>\n                        <td className={styles.cartTableHeaderData}>Total</td>\n                        <td className={styles.cartTableHeaderData}>Date</td>\n                        <td className={styles.cartTableHeaderData}>Actions</td>\n                    </thead>\n                    {orders.map((order, index) => \n                        <tr className={styles.cartTableRow}>\n                            <td className={[styles.cartTableData, styles.cartTableImageContainer].join(' ')}>\n                                <img src={order.userId.image ? `${BASE_URL}/${order.userId.image}` : HouseLogo} alt={order.userId.name} className={styles.cartTableDataImage} />\n                                <b>{order.userId.name.substr(0, 20)}</b>\n                            </td>\n                            <td className={styles.cartTableData}>{order.bakerId.companyName}</td>\n                            <td className={styles.cartTableData}>{order.status}</td>\n                            <td className={styles.cartTableData}>{Thousand(order.pastries.reduce((sum, pastry) => sum + (pastry.pastryId.discount ? (((100 - pastry.pastryId.discount)/100) * pastry.pastryId.price * pastry.quantity) : (pastry.pastryId.price * pastry.quantity)), 0))}</td>\n                            <td className={styles.cartTableData}>{DateString(order.createdAt)}</td>\n                            <td className={styles.cartTableData}>\n                                <button className={[styles.cartButton, styles.verify].join(' ')} onClick={() => OrderDetails(order)}>Details</button>\n                                {/* <button className={[styles.cartDelete, styles.suspend].join(' ')} onClick={() => console.log('Haha')}><IoTrashBinSharp /></button> */}\n                            </td>\n                        </tr>\n                    )}\n                </table>\n            </div>\n    )\n}\n\nexport default OrderTable;\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserDetails/UserDetails.component.js",["678","679","680"],"import React, { useEffect, useState } from 'react';\nimport { IoClose, IoThumbsDown, IoThumbsUp } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { Thousand, HNumber } from '../../utils/utilities';\nimport { setBaker } from '../../redux/Actions/Auth.actions';\nimport styles from './UserDetails.module.css';\nimport { HouseLogo, vals3 } from '../../res/img';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { Notification } from '..';\n\nconst UserDetails = (props) => {\n    const { detail, setDetail, _user, user } = props;\n    \n    const [loading, setLoading] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        if (_user.length !== 0) {\n            setLikes(_user.likes.users.length);\n            setDislikes(_user.dislikes.users.length);\n        }\n        props.setRefresh(false);\n        return () => {\n            setLikes(0);\n            setDislikes(0);\n        }\n    }, [detail]);\n\n    const Close = () => {\n        setDetail(false);\n        // props.setRefresh(true);\n    }\n\n\n    const disLikeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/dislike/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 500) {\n                    console.log('error');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const likeBaker = (id) => {\n        setLoading(true);\n        fetch(`${BASE_URL}/baker/like/${id}?user=${user._id}`, {\n            method: 'POST',\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1].baker;\n                setLoading(false);\n                if (statusCode === 200) {\n                    setLikes(response.likes.users.length);\n                    setDislikes(response.dislikes.users.length);\n                }\n\n                if (statusCode === 404) {\n                    console.log(response)\n                }\n\n                if (statusCode === 500) {\n                    console.log('error 500');\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    return (\n        <div className={detail ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, detail ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                {_user.length !== 0 && \n                    <>\n                    <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                    <div className={styles.bakerContainer}>\n                        <div className={styles.pastryContainer}>\n                            <div className={styles.pastryDiscount}> {HNumber(_user.telNumber)}</div>\n                            <div className={styles.pastryName}>{_user.name || ''}</div>\n                            <img src={_user.image ? `${BASE_URL}/${_user.image}` : HouseLogo} alt={_user.price} className={styles.pastryImage} />\n                            <div className={styles.pastryLikes} onClick={() => likeBaker(_user._id || '')}><IoThumbsUp className={styles.icon} /> Likes: {Thousand(likes)}</div>\n                            <div className={styles.pastryDislikes} onClick={() => disLikeBaker(_user._id || '')}><IoThumbsDown className={styles.icon} /> Dislikes: {Thousand(dislikes)}</div>\n                        </div>\n                        {/* <div className={styles.bakerDetails}>\n                            <h1 className={styles.bakerCompany}>{_user.name}</h1>\n                            <div className={styles.bakerDetailsScroll}>\n                                <b className={styles.bakerCEO}>N: <span className={styles.info}>{_user.name}</span></b>\n                                <h2 className={styles.subTitle}>Categories</h2>\n                                {user.type === 'Baker' &&\n                                    <>\n                                        <h2 className={styles.smallDetails}>Email: <span className={styles.info}>{_user.email}</span></h2>\n                                        <h2 className={styles.smallDetails}>Telephone: <span className={styles.info}>{_user.telNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>ID No: <span className={styles.info}>{_user.idCardNumber}</span></h2>\n                                        <h2 className={styles.smallDetails}>Location: <span className={styles.info}>{_user.location}</span></h2>\n                                        <h2 className={styles.smallDetails}>MoMO Number: <span className={styles.info}>{_user.momp}</span></h2>\n                                        <h2 className={styles.smallDetails}>MOMO Name : <span className={styles.info}>{_user.momoName}</span></h2>\n                                    </>\n                                }\n                                <h2 className={styles.subTitle}>About</h2>\n                                <b className={styles.bakerAbout}>{_user.about || 'empty'}</b>\n                            </div>\n                            <div className={styles.actions}>\n                                {user.type !== ('Baker' || 'Admin') && <Button title='Shop' onClick={() => bakerShop(_user._id)} />}\n                            </div>\n                        </div> */}\n                    </div>\n                </>}\n            </div>\n            <Notification show={show} setShow={setShow} message={message} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({setBaker, setRefresh}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderDetails/OrderDetails.component.js",["681","682","683","684","685","686","687","688","689"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/UserProfile/UserProfile.section.js",["690","691","692","693"],"import React, { useEffect, useState } from 'react';\nimport { IoBrush } from 'react-icons/io5';\nimport { Redirect } from 'react-router';\nimport makeAnimated from 'react-select/animated';\nimport Select from 'react-select';\n\nimport { Button, Notification, SquareInput, UserImage } from '../../Components';\nimport { cups1, HLogo } from '../../res/img';\nimport styles from './UserProfile.module.css';\nimport { connect } from 'react-redux';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { bindActionCreators } from 'redux';\nimport { setUser } from '../../redux/Actions/Auth.actions';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { HNumber, SetLocation, Thousand } from '../../utils/utilities';\nimport { EditPassword } from '..';\n\nconst animatedComponents = makeAnimated();\n\nconst UserProfile = (props) => {\n    const { user, token, refresh } = props;\n    const [locations] = useState([\n        { value: \"North-West\", label: \"North-West\" },\n        { value: \"South-West\", label: \"South-West\" },\n        { value: \"West\", label: \"West\" },\n        { value: \"Center\", label: \"Center\" },\n        { value: \"Litoral\", label: \"Litoral\" },\n        { value: \"North\", label: \"North\" },\n        { value: \"East\", label: \"East\" },\n        { value: \"North-West\", label: \"North-West\" },\n    ]);\n    const [loading, setLoading] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contact, setContact] = useState('');\n    const [location, setLocation] = useState({});\n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [contactError, setContactError] = useState(false);\n    const [locationError, setLocationError] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [isEditPass, setIsEditPass] = useState(false);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        props.setRefresh(false);\n        setName(user.name || \"'empty'\");\n        setEmail(user.email || \"'empty'\");\n        setContact(user.telNumber || \"'empty'\");\n        let loc = user.location;\n\n        setLocation(SetLocation(loc, locations) || \"'empty'\");\n\n        return () => {\n            setName('');\n            setEmail('');\n            setContact('');\n            setLocation('');\n            setNameError(false);\n            setEmailError(false);\n            setContactError(false);\n            setLocationError(false);\n        }\n    }, [refresh]);\n\n    const Authenticate = (id) => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 2) {\n            setNameError(true);\n            hasError = true;\n        }\n\n\n        if (hasError) {\n            return false;\n        }\n\n        const body = {\n            name,\n            contact,\n            email,\n            location: location.value,\n        }\n\n        fetch(`${BASE_URL}/user/profile/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    props.setRefresh(true);\n                    setShow(true);\n                    setMessage({\n                        title: 'Success',\n                        message: 'Your profile has been updated'\n                    });\n                    props.setUser(response.user);\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                });\n            })\n    }\n\n    return (\n        <> {(!token || !user.hasOwnProperty('name')) ? <Redirect to=\"/user/shop\" /> :\n            <div className={styles.aprofile}>\n                <div className={styles.profileContainer}>\n                    <div className={styles.profileInfo}>\n                        <div className={styles.profileBoard}>\n                            <img src={user.image ? `${BASE_URL}/${user.image}` : HLogo} alt={'Username'} className={styles.profileImg} />\n                            <button className={styles.profileEdit} onClick={() => setIsOpen(true)}><IoBrush className={styles.profileIcon} /></button>\n                        </div>\n                        <div className={styles.profileCredentials}>\n                            <h2 className={styles.profileName}>{name}</h2>\n                            <h3 className={styles.profileSubTitle}><span className={styles.profileSubInfo} >{HNumber(contact) || \"'empty'\"}</span> | <span className={styles.profileSubInfo} >{user.location || \"'location'\"}</span></h3>\n                            <h3 className={styles.profileSubTitle}><span className={styles.profileSubInfo} >{user.location || \"'empty'\"}</span>  | <span className={styles.profileSubInfo} >{email}</span> </h3>\n                        </div>\n                        <div className={styles.profileStats}>\n                            <div className={styles.profileNumber}>\n                                <h2 className={styles.profileTitle}>{user.orders.ordered.length}</h2>\n                                <b className={styles.profileSub}>Orders</b>\n                            </div>\n                            <div className={styles.profileNumber}>\n                                <h2 className={styles.profileTitle}>{Thousand(user.total)}</h2>\n                                <b className={styles.profileSub}>Spendings</b>\n                            </div>\n                            <div className={styles.profileNumber}>\n                                <h2 className={styles.profileTitle}>{user.likes.users.length}</h2>\n                                <b className={styles.profileSub}>Likes</b>\n                            </div>\n                            <div className={styles.profileNumber}>\n                                <h2 className={styles.profileTitle}>{user.dislikes.users.length}</h2>\n                                <b className={styles.profileSub}>Dislikes</b>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.profileFormContainer}>\n                        <div className={styles.profileForm}>\n                            <h2 className={styles.profileName}>My Details</h2>\n                            <SquareInput\n                                placeholder=\"Jane Doe\"\n                                label=\"Name\"\n                                value={name}\n                                setValue={event => setName(event.target.value)}\n                                error={nameError}\n                                setError={setNameError}\n                            />\n                            <SquareInput\n                                placeholder=\"6x1234567\"\n                                label=\"Contact\"\n                                value={contact}\n                                setValue={event => setContact(event.target.value)}\n                                error={contactError}\n                                setError={setContactError}\n                            />\n                            <div className={styles.profileGroup}>\n                                <b className={styles.profileLabel}>Location</b>\n                                <Select\n                                    value={location}\n                                    options={locations}\n                                    components={animatedComponents}\n                                    onChange={value => setLocation(value)}\n                                    styles={locationStyles}\n                                    className={styles.profileSelect} />\n                            </div>\n                            <SquareInput\n                                placeholder=\"janedoe@gmail.cm\"\n                                label=\"Email\"\n                                value={email}\n                                setValue={event => setEmail(event.target.value)}\n                                error={emailError}\n                                setError={setEmailError}\n                            />\n                            <div className={styles.profileActions}>\n                                <Button title=\"Save Changes\" onClick={() => Authenticate(user._id)} />\n                                <Button title=\"Edit Password\" onClick={() => setIsEditPass(true)} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <UserImage isOpen={isOpen} setIsOpen={setIsOpen} user={user} />\n                <Notification setShow={setShow} show={show} message={message} />\n                <EditPassword isOpen={isEditPass} setIsOpen={setIsEditPass} type={'user'} />\n            </div>\n        }\n        </>\n    )\n}\n\nconst mapStateToProps = ({ auth, refresh }) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n        refresh: refresh.refresh,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setUser, setRefresh }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n\nconst locationStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#215379\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n      ...base,\n      border: 'none',\n      boxShadow: 'none',\n      borderRadius: '4px',\n      borderBottom: '2px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: '#14334a',\n      borderTop: '2px',\n      borderTopStyle: 'solid',\n      borderTopColor: '#14334a',\n      borderLeft: '2px',\n      borderLeftStyle: 'solid',\n      borderLeftColor: '#14334a',\n      borderRight: '2px',\n      borderRightStyle: 'solid',\n      borderRightColor: '#14334a',\n      cursor: 'pointer',\n    '&:hover': {\n        border: '2px',\n        boxShadow: 'none',\n        borderStyle: 'solid',\n        borderColor: isFocused ? \"#14334a\" : '#14334a',\n    }\n  })\n};\n","/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/UserImage/UserImage.component.js",["694","695"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './UserImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst UserImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        return () => {\n            setImage('');\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, []);\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const Save = (id) => {\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append('image', image[0]);\n\n        fetch(`${BASE_URL}/user/image/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    console.log(response);\n                    props.setUser(response.user);\n                    setMessage({\n                        type: 'success',\n                        message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                        title: 'Success'\n                    });\n                    setTimeout(() => {\n                        setIsOpen(false);\n                    }, 2000);\n                }\n\n                if (statusCode === 500) {\n                    console.log(response, 'error');\n                    setIsOpen(false);\n                }\n            })\n            .catch(err => {\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n            })\n    };\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.image ? `${BASE_URL}/${user.image}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPastry/EditPastry.section.js",["696","697","698","699"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/PastryFilter/PastryFilter.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/OrderFilter/OrderFilter.section.js",["700"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/Components/AImage/AImage.component.js",["701","702"],"import React, { useEffect, useState } from 'react';\nimport { IoClose } from 'react-icons/io5';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { Button, Notification, SquareImage } from '..';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport styles from './AImage.module.css';\nimport { setRefresh } from '../../redux/Actions/Refresh.actions';\nimport { cups1, HouseLogo } from '../../res/img';\nimport { setUser } from '../../redux/Actions/Auth.actions';\n\nconst AImage = (props) => {\n    const {isOpen, setIsOpen, user, token} = props;\n\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n    const Close = () => {\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        return () => {\n            setImage('');\n            setShow(false);\n            setMessage({});\n            setLoading(false);\n        }\n    }, []);\n\n    const stopClose = (e) => {\n        e.stopPropagation();\n    }\n\n    const Save = (id) => {\n\n        setLoading(true);\n        const formData = new FormData();\n        formData.append('image', image[0]);\n\n        fetch(`${BASE_URL}/admin/image/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`\n            },\n            body: formData,\n        })\n        .then(res => {\n            const statusCode = res.status;\n            const response = res.json();\n            return Promise.all([statusCode, response]);\n        })\n        .then(res => {\n            const statusCode = res[0];\n            const response = res[1];\n            setLoading(false);\n\n            if (statusCode === 200) {\n                setShow(true);\n                props.setUser(response.admin);\n                setMessage({\n                    type: 'success',\n                    message: `Mr/Miss ${user.name}, your profile has been updated.`,\n                    title: 'Success'\n                });\n                setTimeout(() => {\n                    setIsOpen(false);\n                 }, 2000);\n            }\n\n            if (statusCode === 500) {\n                setIsOpen(false);\n            }\n        })\n        .catch(err => {\n            setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.'\n                })\n        })\n    }\n\n    return (\n        <div className={isOpen ? styles.notifyBackdrop : styles.notifyNoBackdrop} onClick={() => Close()}>\n            <div className={[styles.notifyContainer, isOpen ? styles.showContainer : styles.hideContainer].join(' ')} onClick={(e) => stopClose(e)}>\n                <button className={styles.closeButton} onClick={() => Close()}><IoClose /></button>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={image ? URL.createObjectURL(image[0]) : user.image ? `${BASE_URL}/${user.image}` : HouseLogo} alt={'Username'} className={styles.profileImg} />\n                    </div>\n                </div>\n                <div className={styles.sqrButtons}>\n                    <SquareImage\n                        label={'Upload Image'}\n                        type='file'\n                        setValue={event => setImage(event.target.files) }\n                    />\n                    <Button title=\"Save\" onClick={() => Save(user._id)} />\n                </div>\n            </div>\n            <Notification message={message} show={show} setShow={setShow} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        user: auth.user,\n        token: auth.token,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ setRefresh, setUser }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AImage);","/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/EditPassword/EditPassword.section.js",[],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/BakerProfile/BakerProfile.section.js",["703","704","705"],"/home/jb-inc/Desktop/cara-cakes-react-app/src/sections/AdminProfile/AdminProfile.section.js",["706","707","708","709","710"],"import React, { useEffect, useState } from 'react';\nimport { IoBrush } from 'react-icons/io5';\n\nimport { AImage, Button, Notification, SquareInput } from '../../Components';\nimport { cups1, HLogo } from '../../res/img';\nimport styles from './AdminProfile.module.css';\nimport { connect } from 'react-redux';\nimport { BASE_URL } from '../../utils/globalVariable';\nimport { bindActionCreators } from 'redux';\nimport { setUser } from '../../redux/Actions/Auth.actions';\nimport { HNumber } from '../../utils/utilities';\nimport { EditPassword } from '..';\n\nconst AdminProfile = (props) => {\n    const { user, token } = props;\n    const [loading, setLoading] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [contact, setContact] = useState('');\n    const [type, setType] = useState('');\n    const [nameError, setNameError] = useState(false);\n    const [emailError, setEmailError] = useState(false);\n    const [contactError, setContactError] = useState(false);\n    const [typeError, setTypeError] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [isEditPass, setIsEditPass] = useState(false);\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({});\n\n\n    useEffect(() => {\n        setName(user.name || \"'empty'\");\n        setEmail(user.email || \"'empty'\");\n        setContact(user.telNumber || \"'empty'\");\n        setType(user.type || \"'empty'\");\n    \n\n        return () => {\n            setName('');\n            setEmail('');\n            setType('');\n            setContact('');\n            setNameError(false);\n            setEmailError(false);\n            setTypeError(false);\n            setContactError(false);\n        }\n    }, [])\n\n    const Authenticate = (id) => {\n        let hasError = false;\n        setLoading(true);\n\n        if (name.length < 2) {\n            setNameError(true);\n            hasError = true;\n        }\n\n        if (hasError) {\n            return false;\n        }\n\n        const body = {\n            name,\n            contact,\n            email,\n        }\n\n        fetch(`${BASE_URL}/admin/updateprofile/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Authorization': `Basic ${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        })\n            .then(res => {\n                const statusCode = res.status;\n                const response = res.json();\n                return Promise.all([statusCode, response]);\n            })\n            .then(res => {\n                const statusCode = res[0];\n                const response = res[1];\n                setLoading(false);\n\n                if (statusCode === 200) {\n                    setShow(true);\n                    setMessage({\n                        title: 'Success',\n                        message: 'Your profile has been updated'\n                    });\n                    props.setUser(response.admin);\n                }\n\n            })\n            .catch(err => {\n                console.log(err);\n                setShow(true);\n                setMessage({\n                    type: 'error',\n                    title: 'Unexpected Error',\n                    message: 'Please check your internet connection.',\n                });\n        })\n    }\n\n    return (\n        <div className={styles.aprofile}>\n            <div className={styles.profileContainer}>\n                <div className={styles.profileInfo}>\n                    <div className={styles.profileBoard}>\n                        <img src={user.image ? `${BASE_URL}/${user.image}`  : HLogo} alt={'Username'} className={styles.profileImg} />\n                        <button className={styles.profileEdit} onClick={() => setIsOpen(true)}><IoBrush className={styles.profileIcon} /></button>\n                    </div>\n                    <div className={styles.profileCredentials}>\n                        <h2 className={styles.profileName}>{name}</h2>\n                        <h3 className={styles.profileSubTitle}><span className={styles.profileSubInfo} >{type}</span>  | <span className={styles.profileSubInfo} >{HNumber(contact) || \"'empty'\"}</span> | <span className={styles.profileSubInfo} >{user.email}</span></h3>\n                    </div>\n                </div>\n                <div className={styles.profileFormContainer}>\n                    <div className={styles.profileForm}>\n                        <h2 className={styles.profileName}>My Details</h2>\n                        <SquareInput\n                            placeholder=\"Jane Doe\"\n                            label=\"Name\"\n                            value={name}\n                            setValue={event => setName(event.target.value)}\n                            error={nameError}\n                            setError={setNameError}\n                        />\n                        <SquareInput\n                            placeholder=\"6x1234567\"\n                            label=\"Contact\"\n                            value={contact}\n                            setValue={event => setContact(event.target.value)}\n                            error={contactError}\n                            setError={setContactError}\n                        />\n\n                        <SquareInput\n                            placeholder=\"janedoe@gmail.cm\"\n                            label=\"Email\"\n                            value={email}\n                            setValue={event => setEmail(event.target.value)}\n                            error={emailError}\n                            setError={setEmailError}\n                        />\n                        <div className={styles.profileActions}>\n                            <Button title=\"Save Changes\" onClick={() => Authenticate(user._id)} />\n                            <Button title=\"Edit Password\" onClick={() => setIsEditPass(true)} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <AImage isOpen={isOpen} setIsOpen={setIsOpen} user={user} />\n            <Notification setShow={setShow} show={show} message={message} />\n            <EditPassword isOpen={isEditPass} setIsOpen={setIsEditPass} type={'admin'} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        token: auth.token,\n        user: auth.user,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ setUser }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminProfile);\n\nconst locationStyles = {\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isFocused ? \"#215379\" : null,\n      color: isFocused ? \"white\" : '#999',\n    };\n  },\n  control: (base, {isFocused}) => ({\n      ...base,\n      border: 'none',\n      boxShadow: 'none',\n      borderRadius: '4px',\n      borderBottom: '2px',\n      borderBottomStyle: 'solid',\n      borderBottomColor: '#14334a',\n      borderTop: '2px',\n      borderTopStyle: 'solid',\n      borderTopColor: '#14334a',\n      borderLeft: '2px',\n      borderLeftStyle: 'solid',\n      borderLeftColor: '#14334a',\n      borderRight: '2px',\n      borderRightStyle: 'solid',\n      borderRightColor: '#14334a',\n      cursor: 'pointer',\n    '&:hover': {\n        border: '2px',\n        boxShadow: 'none',\n        borderStyle: 'solid',\n        borderColor: isFocused ? \"#14334a\" : '#14334a',\n    }\n  })\n};\n",{"ruleId":"711","severity":1,"message":"712","line":3,"column":8,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"715","severity":1,"message":"716","line":28,"column":8,"nodeType":"717","endLine":28,"endColumn":18,"suggestions":"718"},{"ruleId":"715","severity":1,"message":"719","line":95,"column":8,"nodeType":"717","endLine":95,"endColumn":17,"suggestions":"720"},{"ruleId":"711","severity":1,"message":"721","line":110,"column":19,"nodeType":"713","messageId":"714","endLine":110,"endColumn":27},{"ruleId":"711","severity":1,"message":"721","line":159,"column":23,"nodeType":"713","messageId":"714","endLine":159,"endColumn":31},{"ruleId":"711","severity":1,"message":"722","line":7,"column":28,"nodeType":"713","messageId":"714","endLine":7,"endColumn":33},{"ruleId":"711","severity":1,"message":"723","line":15,"column":13,"nodeType":"713","messageId":"714","endLine":15,"endColumn":21},{"ruleId":"711","severity":1,"message":"724","line":19,"column":12,"nodeType":"713","messageId":"714","endLine":19,"endColumn":19},{"ruleId":"711","severity":1,"message":"712","line":3,"column":8,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"711","severity":1,"message":"725","line":5,"column":10,"nodeType":"713","messageId":"714","endLine":5,"endColumn":15},{"ruleId":"711","severity":1,"message":"721","line":37,"column":19,"nodeType":"713","messageId":"714","endLine":37,"endColumn":27},{"ruleId":"711","severity":1,"message":"726","line":13,"column":27,"nodeType":"713","messageId":"714","endLine":13,"endColumn":34},{"ruleId":"711","severity":1,"message":"724","line":14,"column":12,"nodeType":"713","messageId":"714","endLine":14,"endColumn":19},{"ruleId":"711","severity":1,"message":"727","line":14,"column":21,"nodeType":"713","messageId":"714","endLine":14,"endColumn":31},{"ruleId":"715","severity":1,"message":"716","line":21,"column":8,"nodeType":"717","endLine":21,"endColumn":10,"suggestions":"728"},{"ruleId":"711","severity":1,"message":"729","line":6,"column":12,"nodeType":"713","messageId":"714","endLine":6,"endColumn":16},{"ruleId":"711","severity":1,"message":"722","line":11,"column":28,"nodeType":"713","messageId":"714","endLine":11,"endColumn":33},{"ruleId":"715","severity":1,"message":"730","line":34,"column":8,"nodeType":"717","endLine":34,"endColumn":16,"suggestions":"731"},{"ruleId":"715","severity":1,"message":"716","line":46,"column":8,"nodeType":"717","endLine":46,"endColumn":17,"suggestions":"732"},{"ruleId":"711","severity":1,"message":"733","line":10,"column":10,"nodeType":"713","messageId":"714","endLine":10,"endColumn":15},{"ruleId":"711","severity":1,"message":"734","line":2,"column":17,"nodeType":"713","messageId":"714","endLine":2,"endColumn":23},{"ruleId":"711","severity":1,"message":"735","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":25},{"ruleId":"711","severity":1,"message":"736","line":18,"column":12,"nodeType":"713","messageId":"714","endLine":18,"endColumn":22},{"ruleId":"711","severity":1,"message":"724","line":19,"column":12,"nodeType":"713","messageId":"714","endLine":19,"endColumn":19},{"ruleId":"715","severity":1,"message":"737","line":17,"column":8,"nodeType":"717","endLine":17,"endColumn":21,"suggestions":"738"},{"ruleId":"711","severity":1,"message":"739","line":4,"column":9,"nodeType":"713","messageId":"714","endLine":4,"endColumn":14},{"ruleId":"711","severity":1,"message":"740","line":8,"column":12,"nodeType":"713","messageId":"714","endLine":8,"endColumn":18},{"ruleId":"711","severity":1,"message":"741","line":8,"column":20,"nodeType":"713","messageId":"714","endLine":8,"endColumn":29},{"ruleId":"711","severity":1,"message":"712","line":3,"column":8,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"711","severity":1,"message":"742","line":6,"column":10,"nodeType":"713","messageId":"714","endLine":6,"endColumn":15},{"ruleId":"711","severity":1,"message":"743","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":18},{"ruleId":"711","severity":1,"message":"744","line":4,"column":8,"nodeType":"713","messageId":"714","endLine":4,"endColumn":15},{"ruleId":"711","severity":1,"message":"745","line":5,"column":8,"nodeType":"713","messageId":"714","endLine":5,"endColumn":17},{"ruleId":"711","severity":1,"message":"746","line":3,"column":9,"nodeType":"713","messageId":"714","endLine":3,"endColumn":15},{"ruleId":"711","severity":1,"message":"747","line":3,"column":17,"nodeType":"713","messageId":"714","endLine":3,"endColumn":24},{"ruleId":"711","severity":1,"message":"748","line":3,"column":43,"nodeType":"713","messageId":"714","endLine":3,"endColumn":55},{"ruleId":"711","severity":1,"message":"749","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"750","line":1,"column":28,"nodeType":"713","messageId":"714","endLine":1,"endColumn":36},{"ruleId":"711","severity":1,"message":"751","line":8,"column":8,"nodeType":"713","messageId":"714","endLine":8,"endColumn":14},{"ruleId":"711","severity":1,"message":"722","line":3,"column":17,"nodeType":"713","messageId":"714","endLine":3,"endColumn":22},{"ruleId":"715","severity":1,"message":"752","line":87,"column":8,"nodeType":"717","endLine":87,"endColumn":17,"suggestions":"753"},{"ruleId":"711","severity":1,"message":"723","line":8,"column":12,"nodeType":"713","messageId":"714","endLine":8,"endColumn":20},{"ruleId":"711","severity":1,"message":"754","line":6,"column":21,"nodeType":"713","messageId":"714","endLine":6,"endColumn":26},{"ruleId":"711","severity":1,"message":"722","line":6,"column":28,"nodeType":"713","messageId":"714","endLine":6,"endColumn":33},{"ruleId":"711","severity":1,"message":"755","line":7,"column":32,"nodeType":"713","messageId":"714","endLine":7,"endColumn":44},{"ruleId":"711","severity":1,"message":"723","line":13,"column":9,"nodeType":"713","messageId":"714","endLine":13,"endColumn":17},{"ruleId":"711","severity":1,"message":"756","line":18,"column":9,"nodeType":"713","messageId":"714","endLine":18,"endColumn":15},{"ruleId":"711","severity":1,"message":"724","line":21,"column":12,"nodeType":"713","messageId":"714","endLine":21,"endColumn":19},{"ruleId":"711","severity":1,"message":"757","line":26,"column":12,"nodeType":"713","messageId":"714","endLine":26,"endColumn":18},{"ruleId":"711","severity":1,"message":"721","line":147,"column":23,"nodeType":"713","messageId":"714","endLine":147,"endColumn":31},{"ruleId":"711","severity":1,"message":"758","line":6,"column":32,"nodeType":"713","messageId":"714","endLine":6,"endColumn":37},{"ruleId":"711","severity":1,"message":"759","line":6,"column":60,"nodeType":"713","messageId":"714","endLine":6,"endColumn":65},{"ruleId":"711","severity":1,"message":"760","line":6,"column":67,"nodeType":"713","messageId":"714","endLine":6,"endColumn":75},{"ruleId":"711","severity":1,"message":"758","line":6,"column":32,"nodeType":"713","messageId":"714","endLine":6,"endColumn":37},{"ruleId":"711","severity":1,"message":"759","line":6,"column":60,"nodeType":"713","messageId":"714","endLine":6,"endColumn":65},{"ruleId":"711","severity":1,"message":"760","line":6,"column":67,"nodeType":"713","messageId":"714","endLine":6,"endColumn":75},{"ruleId":"711","severity":1,"message":"725","line":6,"column":10,"nodeType":"713","messageId":"714","endLine":6,"endColumn":15},{"ruleId":"711","severity":1,"message":"721","line":35,"column":23,"nodeType":"713","messageId":"714","endLine":35,"endColumn":31},{"ruleId":"711","severity":1,"message":"761","line":8,"column":17,"nodeType":"713","messageId":"714","endLine":8,"endColumn":22},{"ruleId":"711","severity":1,"message":"724","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":19},{"ruleId":"715","severity":1,"message":"716","line":22,"column":8,"nodeType":"717","endLine":22,"endColumn":17,"suggestions":"762"},{"ruleId":"711","severity":1,"message":"761","line":6,"column":21,"nodeType":"713","messageId":"714","endLine":6,"endColumn":26},{"ruleId":"711","severity":1,"message":"763","line":14,"column":61,"nodeType":"713","messageId":"714","endLine":14,"endColumn":65},{"ruleId":"711","severity":1,"message":"724","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":19},{"ruleId":"715","severity":1,"message":"716","line":22,"column":8,"nodeType":"717","endLine":22,"endColumn":17,"suggestions":"764"},{"ruleId":"711","severity":1,"message":"760","line":13,"column":9,"nodeType":"713","messageId":"714","endLine":13,"endColumn":17},{"ruleId":"711","severity":1,"message":"765","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":25},{"ruleId":"711","severity":1,"message":"761","line":4,"column":21,"nodeType":"713","messageId":"714","endLine":4,"endColumn":26},{"ruleId":"711","severity":1,"message":"760","line":12,"column":9,"nodeType":"713","messageId":"714","endLine":12,"endColumn":17},{"ruleId":"711","severity":1,"message":"749","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"759","line":11,"column":9,"nodeType":"713","messageId":"714","endLine":11,"endColumn":14},{"ruleId":"711","severity":1,"message":"760","line":12,"column":9,"nodeType":"713","messageId":"714","endLine":12,"endColumn":17},{"ruleId":"711","severity":1,"message":"766","line":13,"column":9,"nodeType":"713","messageId":"714","endLine":13,"endColumn":13},{"ruleId":"711","severity":1,"message":"767","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":17},{"ruleId":"711","severity":1,"message":"724","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":19},{"ruleId":"715","severity":1,"message":"716","line":25,"column":8,"nodeType":"717","endLine":25,"endColumn":17,"suggestions":"768"},{"ruleId":"715","severity":1,"message":"769","line":44,"column":8,"nodeType":"717","endLine":44,"endColumn":16,"suggestions":"770"},{"ruleId":"711","severity":1,"message":"721","line":70,"column":19,"nodeType":"713","messageId":"714","endLine":70,"endColumn":27},{"ruleId":"711","severity":1,"message":"721","line":120,"column":23,"nodeType":"713","messageId":"714","endLine":120,"endColumn":31},{"ruleId":"711","severity":1,"message":"721","line":166,"column":23,"nodeType":"713","messageId":"714","endLine":166,"endColumn":31},{"ruleId":"711","severity":1,"message":"724","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":19},{"ruleId":"715","severity":1,"message":"716","line":25,"column":8,"nodeType":"717","endLine":25,"endColumn":17,"suggestions":"771"},{"ruleId":"711","severity":1,"message":"721","line":39,"column":23,"nodeType":"713","messageId":"714","endLine":39,"endColumn":31},{"ruleId":"711","severity":1,"message":"721","line":82,"column":23,"nodeType":"713","messageId":"714","endLine":82,"endColumn":31},{"ruleId":"715","severity":1,"message":"772","line":130,"column":8,"nodeType":"717","endLine":130,"endColumn":16,"suggestions":"773"},{"ruleId":"711","severity":1,"message":"721","line":144,"column":23,"nodeType":"713","messageId":"714","endLine":144,"endColumn":31},{"ruleId":"715","severity":1,"message":"774","line":12,"column":8,"nodeType":"717","endLine":12,"endColumn":14,"suggestions":"775"},{"ruleId":"711","severity":1,"message":"761","line":5,"column":21,"nodeType":"713","messageId":"714","endLine":5,"endColumn":26},{"ruleId":"711","severity":1,"message":"724","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":19},{"ruleId":"715","severity":1,"message":"716","line":27,"column":8,"nodeType":"717","endLine":27,"endColumn":17,"suggestions":"776"},{"ruleId":"711","severity":1,"message":"721","line":46,"column":27,"nodeType":"713","messageId":"714","endLine":46,"endColumn":35},{"ruleId":"711","severity":1,"message":"749","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"777","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":16},{"ruleId":"711","severity":1,"message":"740","line":12,"column":12,"nodeType":"713","messageId":"714","endLine":12,"endColumn":18},{"ruleId":"711","severity":1,"message":"741","line":12,"column":20,"nodeType":"713","messageId":"714","endLine":12,"endColumn":29},{"ruleId":"711","severity":1,"message":"778","line":13,"column":18,"nodeType":"713","messageId":"714","endLine":13,"endColumn":25},{"ruleId":"711","severity":1,"message":"779","line":15,"column":12,"nodeType":"713","messageId":"714","endLine":15,"endColumn":17},{"ruleId":"711","severity":1,"message":"780","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":19},{"ruleId":"711","severity":1,"message":"781","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":16},{"ruleId":"715","severity":1,"message":"782","line":49,"column":8,"nodeType":"717","endLine":49,"endColumn":10,"suggestions":"783"},{"ruleId":"711","severity":1,"message":"784","line":2,"column":26,"nodeType":"713","messageId":"714","endLine":2,"endColumn":41},{"ruleId":"785","severity":1,"message":"786","line":50,"column":99,"nodeType":"787","endLine":50,"endColumn":114},{"ruleId":"785","severity":1,"message":"786","line":56,"column":17,"nodeType":"787","endLine":56,"endColumn":32},{"ruleId":"711","severity":1,"message":"788","line":3,"column":8,"nodeType":"713","messageId":"714","endLine":3,"endColumn":14},{"ruleId":"711","severity":1,"message":"789","line":11,"column":7,"nodeType":"713","messageId":"714","endLine":11,"endColumn":25},{"ruleId":"711","severity":1,"message":"790","line":20,"column":9,"nodeType":"713","messageId":"714","endLine":20,"endColumn":19},{"ruleId":"711","severity":1,"message":"791","line":21,"column":9,"nodeType":"713","messageId":"714","endLine":21,"endColumn":15},{"ruleId":"711","severity":1,"message":"792","line":22,"column":9,"nodeType":"713","messageId":"714","endLine":22,"endColumn":20},{"ruleId":"711","severity":1,"message":"793","line":25,"column":9,"nodeType":"713","messageId":"714","endLine":25,"endColumn":20},{"ruleId":"711","severity":1,"message":"794","line":27,"column":9,"nodeType":"713","messageId":"714","endLine":27,"endColumn":18},{"ruleId":"711","severity":1,"message":"795","line":29,"column":9,"nodeType":"713","messageId":"714","endLine":29,"endColumn":23},{"ruleId":"711","severity":1,"message":"796","line":30,"column":9,"nodeType":"713","messageId":"714","endLine":30,"endColumn":22},{"ruleId":"711","severity":1,"message":"797","line":34,"column":9,"nodeType":"713","messageId":"714","endLine":34,"endColumn":25},{"ruleId":"711","severity":1,"message":"798","line":41,"column":9,"nodeType":"713","messageId":"714","endLine":41,"endColumn":23},{"ruleId":"711","severity":1,"message":"799","line":43,"column":9,"nodeType":"713","messageId":"714","endLine":43,"endColumn":28},{"ruleId":"711","severity":1,"message":"800","line":50,"column":12,"nodeType":"713","messageId":"714","endLine":50,"endColumn":23},{"ruleId":"711","severity":1,"message":"801","line":255,"column":7,"nodeType":"713","messageId":"714","endLine":255,"endColumn":19},{"ruleId":"711","severity":1,"message":"802","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":15},{"ruleId":"715","severity":1,"message":"716","line":49,"column":8,"nodeType":"717","endLine":49,"endColumn":10,"suggestions":"803"},{"ruleId":"711","severity":1,"message":"804","line":4,"column":5,"nodeType":"713","messageId":"714","endLine":4,"endColumn":12},{"ruleId":"711","severity":1,"message":"805","line":6,"column":5,"nodeType":"713","messageId":"714","endLine":6,"endColumn":15},{"ruleId":"711","severity":1,"message":"806","line":5,"column":18,"nodeType":"713","messageId":"714","endLine":5,"endColumn":27},{"ruleId":"711","severity":1,"message":"807","line":5,"column":52,"nodeType":"713","messageId":"714","endLine":5,"endColumn":59},{"ruleId":"711","severity":1,"message":"763","line":13,"column":13,"nodeType":"713","messageId":"714","endLine":13,"endColumn":17},{"ruleId":"711","severity":1,"message":"779","line":19,"column":12,"nodeType":"713","messageId":"714","endLine":19,"endColumn":17},{"ruleId":"715","severity":1,"message":"716","line":27,"column":8,"nodeType":"717","endLine":27,"endColumn":17,"suggestions":"808"},{"ruleId":"715","severity":1,"message":"809","line":91,"column":8,"nodeType":"717","endLine":91,"endColumn":17,"suggestions":"810"},{"ruleId":"715","severity":1,"message":"811","line":122,"column":8,"nodeType":"717","endLine":122,"endColumn":14,"suggestions":"812"},{"ruleId":"813","severity":1,"message":"814","line":8,"column":11,"nodeType":"815","messageId":"816","endLine":8,"endColumn":13},{"ruleId":"711","severity":1,"message":"763","line":12,"column":13,"nodeType":"713","messageId":"714","endLine":12,"endColumn":17},{"ruleId":"711","severity":1,"message":"724","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":19},{"ruleId":"715","severity":1,"message":"809","line":75,"column":8,"nodeType":"717","endLine":75,"endColumn":17,"suggestions":"817"},{"ruleId":"715","severity":1,"message":"818","line":98,"column":8,"nodeType":"717","endLine":98,"endColumn":14,"suggestions":"819"},{"ruleId":"711","severity":1,"message":"820","line":13,"column":13,"nodeType":"713","messageId":"714","endLine":13,"endColumn":18},{"ruleId":"711","severity":1,"message":"778","line":16,"column":18,"nodeType":"713","messageId":"714","endLine":16,"endColumn":25},{"ruleId":"711","severity":1,"message":"724","line":21,"column":12,"nodeType":"713","messageId":"714","endLine":21,"endColumn":19},{"ruleId":"715","severity":1,"message":"821","line":67,"column":8,"nodeType":"717","endLine":67,"endColumn":33,"suggestions":"822"},{"ruleId":"715","severity":1,"message":"823","line":86,"column":8,"nodeType":"717","endLine":86,"endColumn":14,"suggestions":"824"},{"ruleId":"711","severity":1,"message":"781","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":16},{"ruleId":"711","severity":1,"message":"780","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":19},{"ruleId":"715","severity":1,"message":"825","line":82,"column":8,"nodeType":"717","endLine":82,"endColumn":17,"suggestions":"826"},{"ruleId":"715","severity":1,"message":"827","line":101,"column":8,"nodeType":"717","endLine":101,"endColumn":14,"suggestions":"828"},{"ruleId":"711","severity":1,"message":"820","line":12,"column":13,"nodeType":"713","messageId":"714","endLine":12,"endColumn":18},{"ruleId":"711","severity":1,"message":"763","line":12,"column":20,"nodeType":"713","messageId":"714","endLine":12,"endColumn":24},{"ruleId":"711","severity":1,"message":"778","line":14,"column":18,"nodeType":"713","messageId":"714","endLine":14,"endColumn":25},{"ruleId":"711","severity":1,"message":"779","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":17},{"ruleId":"715","severity":1,"message":"782","line":57,"column":8,"nodeType":"717","endLine":57,"endColumn":10,"suggestions":"829"},{"ruleId":"715","severity":1,"message":"830","line":77,"column":8,"nodeType":"717","endLine":77,"endColumn":14,"suggestions":"831"},{"ruleId":"711","severity":1,"message":"832","line":6,"column":41,"nodeType":"713","messageId":"714","endLine":6,"endColumn":49},{"ruleId":"711","severity":1,"message":"833","line":27,"column":9,"nodeType":"713","messageId":"714","endLine":27,"endColumn":24},{"ruleId":"711","severity":1,"message":"834","line":4,"column":10,"nodeType":"713","messageId":"714","endLine":4,"endColumn":18},{"ruleId":"711","severity":1,"message":"763","line":12,"column":20,"nodeType":"713","messageId":"714","endLine":12,"endColumn":24},{"ruleId":"711","severity":1,"message":"835","line":21,"column":12,"nodeType":"713","messageId":"714","endLine":21,"endColumn":16},{"ruleId":"715","severity":1,"message":"836","line":62,"column":8,"nodeType":"717","endLine":62,"endColumn":17,"suggestions":"837"},{"ruleId":"715","severity":1,"message":"836","line":97,"column":8,"nodeType":"717","endLine":97,"endColumn":16,"suggestions":"838"},{"ruleId":"711","severity":1,"message":"839","line":7,"column":18,"nodeType":"713","messageId":"714","endLine":7,"endColumn":22},{"ruleId":"711","severity":1,"message":"820","line":14,"column":37,"nodeType":"713","messageId":"714","endLine":14,"endColumn":42},{"ruleId":"711","severity":1,"message":"840","line":25,"column":12,"nodeType":"713","messageId":"714","endLine":25,"endColumn":21},{"ruleId":"715","severity":1,"message":"841","line":42,"column":8,"nodeType":"717","endLine":42,"endColumn":16,"suggestions":"842"},{"ruleId":"711","severity":1,"message":"843","line":5,"column":18,"nodeType":"713","messageId":"714","endLine":5,"endColumn":24},{"ruleId":"711","severity":1,"message":"844","line":4,"column":10,"nodeType":"713","messageId":"714","endLine":4,"endColumn":15},{"ruleId":"711","severity":1,"message":"843","line":5,"column":24,"nodeType":"713","messageId":"714","endLine":5,"endColumn":30},{"ruleId":"711","severity":1,"message":"843","line":4,"column":10,"nodeType":"713","messageId":"714","endLine":4,"endColumn":16},{"ruleId":"711","severity":1,"message":"749","line":1,"column":17,"nodeType":"713","messageId":"714","endLine":1,"endColumn":26},{"ruleId":"711","severity":1,"message":"751","line":5,"column":8,"nodeType":"713","messageId":"714","endLine":5,"endColumn":14},{"ruleId":"711","severity":1,"message":"835","line":8,"column":12,"nodeType":"713","messageId":"714","endLine":8,"endColumn":16},{"ruleId":"711","severity":1,"message":"755","line":5,"column":59,"nodeType":"713","messageId":"714","endLine":5,"endColumn":71},{"ruleId":"715","severity":1,"message":"845","line":88,"column":8,"nodeType":"717","endLine":88,"endColumn":17,"suggestions":"846"},{"ruleId":"715","severity":1,"message":"823","line":99,"column":8,"nodeType":"717","endLine":99,"endColumn":16,"suggestions":"847"},{"ruleId":"715","severity":1,"message":"823","line":104,"column":8,"nodeType":"717","endLine":104,"endColumn":14,"suggestions":"848"},{"ruleId":"711","severity":1,"message":"779","line":19,"column":12,"nodeType":"713","messageId":"714","endLine":19,"endColumn":17},{"ruleId":"715","severity":1,"message":"809","line":81,"column":8,"nodeType":"717","endLine":81,"endColumn":17,"suggestions":"849"},{"ruleId":"715","severity":1,"message":"811","line":85,"column":8,"nodeType":"717","endLine":85,"endColumn":14,"suggestions":"850"},{"ruleId":"711","severity":1,"message":"851","line":10,"column":10,"nodeType":"713","messageId":"714","endLine":10,"endColumn":14},{"ruleId":"711","severity":1,"message":"763","line":14,"column":13,"nodeType":"713","messageId":"714","endLine":14,"endColumn":17},{"ruleId":"711","severity":1,"message":"726","line":14,"column":26,"nodeType":"713","messageId":"714","endLine":14,"endColumn":33},{"ruleId":"711","severity":1,"message":"781","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":16},{"ruleId":"711","severity":1,"message":"780","line":18,"column":12,"nodeType":"713","messageId":"714","endLine":18,"endColumn":19},{"ruleId":"715","severity":1,"message":"809","line":80,"column":8,"nodeType":"717","endLine":80,"endColumn":10,"suggestions":"852"},{"ruleId":"715","severity":1,"message":"827","line":100,"column":8,"nodeType":"717","endLine":100,"endColumn":14,"suggestions":"853"},{"ruleId":"711","severity":1,"message":"765","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":25},{"ruleId":"711","severity":1,"message":"761","line":4,"column":21,"nodeType":"713","messageId":"714","endLine":4,"endColumn":26},{"ruleId":"711","severity":1,"message":"820","line":10,"column":21,"nodeType":"713","messageId":"714","endLine":10,"endColumn":26},{"ruleId":"711","severity":1,"message":"722","line":10,"column":21,"nodeType":"713","messageId":"714","endLine":10,"endColumn":26},{"ruleId":"711","severity":1,"message":"724","line":17,"column":12,"nodeType":"713","messageId":"714","endLine":17,"endColumn":19},{"ruleId":"715","severity":1,"message":"854","line":33,"column":8,"nodeType":"717","endLine":33,"endColumn":16,"suggestions":"855"},{"ruleId":"711","severity":1,"message":"856","line":2,"column":10,"nodeType":"713","messageId":"714","endLine":2,"endColumn":17},{"ruleId":"711","severity":1,"message":"857","line":2,"column":45,"nodeType":"713","messageId":"714","endLine":2,"endColumn":67},{"ruleId":"711","severity":1,"message":"777","line":6,"column":10,"nodeType":"713","messageId":"714","endLine":6,"endColumn":16},{"ruleId":"711","severity":1,"message":"858","line":6,"column":18,"nodeType":"713","messageId":"714","endLine":6,"endColumn":30},{"ruleId":"711","severity":1,"message":"859","line":8,"column":20,"nodeType":"713","messageId":"714","endLine":8,"endColumn":27},{"ruleId":"711","severity":1,"message":"724","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":19},{"ruleId":"711","severity":1,"message":"781","line":19,"column":12,"nodeType":"713","messageId":"714","endLine":19,"endColumn":16},{"ruleId":"711","severity":1,"message":"780","line":20,"column":12,"nodeType":"713","messageId":"714","endLine":20,"endColumn":19},{"ruleId":"715","severity":1,"message":"860","line":28,"column":8,"nodeType":"717","endLine":28,"endColumn":16,"suggestions":"861"},{"ruleId":"711","severity":1,"message":"733","line":8,"column":10,"nodeType":"713","messageId":"714","endLine":8,"endColumn":15},{"ruleId":"711","severity":1,"message":"724","line":32,"column":12,"nodeType":"713","messageId":"714","endLine":32,"endColumn":19},{"ruleId":"711","severity":1,"message":"862","line":40,"column":12,"nodeType":"713","messageId":"714","endLine":40,"endColumn":25},{"ruleId":"715","severity":1,"message":"863","line":65,"column":8,"nodeType":"717","endLine":65,"endColumn":17,"suggestions":"864"},{"ruleId":"711","severity":1,"message":"733","line":10,"column":10,"nodeType":"713","messageId":"714","endLine":10,"endColumn":15},{"ruleId":"711","severity":1,"message":"724","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":19},{"ruleId":"711","severity":1,"message":"839","line":7,"column":18,"nodeType":"713","messageId":"714","endLine":7,"endColumn":22},{"ruleId":"711","severity":1,"message":"820","line":14,"column":37,"nodeType":"713","messageId":"714","endLine":14,"endColumn":42},{"ruleId":"711","severity":1,"message":"840","line":26,"column":12,"nodeType":"713","messageId":"714","endLine":26,"endColumn":21},{"ruleId":"715","severity":1,"message":"865","line":55,"column":8,"nodeType":"717","endLine":55,"endColumn":16,"suggestions":"866"},{"ruleId":"711","severity":1,"message":"790","line":8,"column":13,"nodeType":"713","messageId":"714","endLine":8,"endColumn":23},{"ruleId":"711","severity":1,"message":"733","line":10,"column":10,"nodeType":"713","messageId":"714","endLine":10,"endColumn":15},{"ruleId":"711","severity":1,"message":"724","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":19},{"ruleId":"711","severity":1,"message":"724","line":42,"column":12,"nodeType":"713","messageId":"714","endLine":42,"endColumn":19},{"ruleId":"711","severity":1,"message":"862","line":58,"column":12,"nodeType":"713","messageId":"714","endLine":58,"endColumn":25},{"ruleId":"715","severity":1,"message":"867","line":103,"column":8,"nodeType":"717","endLine":103,"endColumn":10,"suggestions":"868"},{"ruleId":"711","severity":1,"message":"733","line":5,"column":10,"nodeType":"713","messageId":"714","endLine":5,"endColumn":15},{"ruleId":"711","severity":1,"message":"724","line":16,"column":12,"nodeType":"713","messageId":"714","endLine":16,"endColumn":19},{"ruleId":"711","severity":1,"message":"840","line":24,"column":12,"nodeType":"713","messageId":"714","endLine":24,"endColumn":21},{"ruleId":"715","severity":1,"message":"869","line":48,"column":8,"nodeType":"717","endLine":48,"endColumn":10,"suggestions":"870"},{"ruleId":"711","severity":1,"message":"871","line":176,"column":7,"nodeType":"713","messageId":"714","endLine":176,"endColumn":21},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["872"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["873"],"'response' is assigned a value but never used.","'vals3' is defined but never used.","'isDetail' is assigned a value but never used.","'loading' is assigned a value but never used.","'cups2' is defined but never used.","'refresh' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["874"],"'size' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'baker.dislikes.users.length', 'baker.followers.users.length', 'baker.length', and 'baker.likes.users.length'. Either include them or remove the dependency array.",["875"],["876"],"'cups1' is defined but never used.","'Switch' is defined but never used.","'passwordError' is assigned a value but never used.","'emailError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["877"],"'Links' is defined but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'pans1' is defined but never used.","'Language' is defined but never used.","'Profile' is defined but never used.","'SearchBar' is defined but never used.","'IoCart' is defined but never used.","'IoEnter' is defined but never used.","'IoLogInSharp' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'search' is defined but never used.","React Hook useEffect has missing dependencies: 'props', 'token', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["878"],"'logo5' is defined but never used.","'PastryDetail' is defined but never used.","'filter' is assigned a value but never used.","'detail' is assigned a value but never used.","'value' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'pans2' is defined but never used.",["879"],"'user' is assigned a value but never used.",["880"],"'IoTrashBinSharp' is defined but never used.","'name' is assigned a value but never used.","'image' is assigned a value but never used.",["881"],"React Hook useEffect has missing dependencies: 'pastry.dislikes.users.length', 'pastry.length', and 'pastry.likes.users.length'. Either include them or remove the dependency array.",["882"],["883"],"React Hook useEffect has missing dependencies: 'pastry.length', 'pastry.message', 'pastry.pastryId.dislikes.users.length', 'pastry.pastryId.likes.users.length', and 'pastry.quantity'. Either include them or remove the dependency array.",["884"],"React Hook useEffect has a missing dependency: 'setShow'. Either include it or remove the dependency array.",["885"],["886"],"'Button' is defined but never used.","'setPage' is assigned a value but never used.","'total' is assigned a value but never used.","'message' is assigned a value but never used.","'show' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["887"],"'IoLogoInstagram' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Select' is defined but never used.","'animatedComponents' is assigned a value but never used.","'categories' is assigned a value but never used.","'idCard' is assigned a value but never used.","'errorIdCard' is assigned a value but never used.","'companyName' is assigned a value but never used.","'setIdCard' is assigned a value but never used.","'setCompanyName' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'errorCompanyName' is assigned a value but never used.","'setErrorIdCard' is assigned a value but never used.","'setErrorCompanyName' is assigned a value but never used.","'_categories' is assigned a value but never used.","'colourStyles' is assigned a value but never used.","'IoCalendar' is defined but never used.",["888"],"'IoBrush' is defined but never used.","'IoDocument' is defined but never used.","'ButtonOne' is defined but never used.","'LinkOne' is defined but never used.",["889"],"React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["890"],"React Hook useEffect has a missing dependency: '_bakers'. Either include it or remove the dependency array.",["891"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["892"],"React Hook useEffect has a missing dependency: '_users'. Either include it or remove the dependency array.",["893"],"'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'page', 'props', and 'user._id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["894"],"React Hook useEffect has a missing dependency: '_pastries'. Either include it or remove the dependency array.",["895"],"React Hook useEffect has missing dependencies: 'props', 'token', and 'user._id'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["896"],"React Hook useEffect has a missing dependency: '_orders'. Either include it or remove the dependency array.",["897"],["898"],"React Hook useEffect has a missing dependency: 'pastry'. Either include it or remove the dependency array.",["899"],"'Selector' is defined but never used.","'errorCategories' is assigned a value but never used.","'Redirect' is defined but never used.","'text' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["900"],["901"],"'Link' is defined but never used.","'typeError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.categories'. Either include it or remove the dependency array.",["902"],"'Spacer' is defined but never used.","'logo6' is defined but never used.","React Hook useEffect has missing dependencies: 'bakerId', 'props', and 'token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["903"],["904"],["905"],["906"],["907"],"'data' is defined but never used.",["908"],["909"],"React Hook useEffect has missing dependencies: '_user.dislikes.users.length', '_user.length', '_user.likes.users.length', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["910"],"'IoClose' is defined but never used.","'IoPhonePortraitOutline' is defined but never used.","'Notification' is defined but never used.","'HNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'order.length', 'order.userId.dislikes.users.length', 'order.userId.likes.users.length', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["911"],"'locationError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'locations', 'props', 'user.email', 'user.location', 'user.name', and 'user.telNumber'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["912"],"React Hook useEffect has missing dependencies: 'pastry.description', 'pastry.discount', 'pastry.image', 'pastry.name', 'pastry.price', 'pastry.recipe', 'pastry.type', and 'user.categories'. Either include them or remove the dependency array.",["913"],"React Hook useEffect has missing dependencies: '_categories', 'locations', 'user.about', 'user.categories', 'user.companyName', 'user.email', 'user.location', 'user.momoName', 'user.momoNumber', 'user.name', and 'user.telNumber'. Either include them or remove the dependency array.",["914"],"React Hook useEffect has missing dependencies: 'user.email', 'user.name', 'user.telNumber', and 'user.type'. Either include them or remove the dependency array.",["915"],"'locationStyles' is assigned a value but never used.",{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"924","fix":"930"},{"desc":"924","fix":"931"},{"desc":"924","fix":"932"},{"desc":"933","fix":"934"},{"desc":"924","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"924","fix":"940"},{"desc":"941","fix":"942"},{"desc":"920","fix":"943"},{"desc":"924","fix":"944"},{"desc":"945","fix":"946"},{"desc":"947","fix":"948"},{"desc":"945","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"941","fix":"960"},{"desc":"961","fix":"962"},{"desc":"963","fix":"964"},{"desc":"965","fix":"966"},{"desc":"967","fix":"968"},{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"954","fix":"973"},{"desc":"945","fix":"974"},{"desc":"947","fix":"975"},{"desc":"976","fix":"977"},{"desc":"958","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"985","fix":"986"},{"desc":"987","fix":"988"},{"desc":"989","fix":"990"},"Update the dependencies array to be: [isDetail, props]",{"range":"991","text":"992"},"Update the dependencies array to be: [refresh, user]",{"range":"993","text":"994"},"Update the dependencies array to be: [props]",{"range":"995","text":"996"},"Update the dependencies array to be: [baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]",{"range":"997","text":"998"},"Update the dependencies array to be: [props, refresh]",{"range":"999","text":"1000"},"Update the dependencies array to be: [props, token, user]",{"range":"1001","text":"1002"},"Update the dependencies array to be: [props, refresh, token, user]",{"range":"1003","text":"1004"},{"range":"1005","text":"1000"},{"range":"1006","text":"1000"},{"range":"1007","text":"1000"},"Update the dependencies array to be: [detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length]",{"range":"1008","text":"1009"},{"range":"1010","text":"1000"},"Update the dependencies array to be: [detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",{"range":"1011","text":"1012"},"Update the dependencies array to be: [setShow, show]",{"range":"1013","text":"1014"},{"range":"1015","text":"1000"},"Update the dependencies array to be: [page, props]",{"range":"1016","text":"1017"},{"range":"1018","text":"996"},{"range":"1019","text":"1000"},"Update the dependencies array to be: [props, refresh, token]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [_bakers, text]",{"range":"1022","text":"1023"},{"range":"1024","text":"1021"},"Update the dependencies array to be: [_users, text]",{"range":"1025","text":"1026"},"Update the dependencies array to be: [isOpen, refresh, isEdit, user._id, page, props]",{"range":"1027","text":"1028"},"Update the dependencies array to be: [_pastries, text]",{"range":"1029","text":"1030"},"Update the dependencies array to be: [props, refresh, token, user._id]",{"range":"1031","text":"1032"},"Update the dependencies array to be: [_orders, text]",{"range":"1033","text":"1034"},{"range":"1035","text":"1017"},"Update the dependencies array to be: [pastry, text]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [rbakers, token]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [rusers, token]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [isOpen, user.categories]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [bakerId, props, refresh, token]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [_pastries, filter]",{"range":"1046","text":"1047"},{"range":"1048","text":"1030"},{"range":"1049","text":"1021"},{"range":"1050","text":"1023"},"Update the dependencies array to be: [props, token]",{"range":"1051","text":"1052"},{"range":"1053","text":"1034"},"Update the dependencies array to be: [_user.dislikes.users.length, _user.length, _user.likes.users.length, detail, props]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [detail, order.length, order.userId.dislikes.users.length, order.userId.likes.users.length, props]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [locations, props, refresh, user.email, user.location, user.name, user.telNumber]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [isOpen, pastry.description, pastry.discount, pastry.image, pastry.name, pastry.price, pastry.recipe, pastry.type, user.categories]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [user.email, user.name, user.telNumber, user.type]",{"range":"1064","text":"1065"},[951,961],"[isDetail, props]",[2851,2860],"[refresh, user]",[796,798],"[props]",[1277,1285],"[baker.dislikes.users.length, baker.followers.users.length, baker.length, baker.likes.users.length, detail]",[1501,1510],"[props, refresh]",[597,610],"[props, token, user]",[2923,2932],"[props, refresh, token, user]",[850,859],[822,831],[1020,1029],[1465,1473],"[detail, pastry.dislikes.users.length, pastry.length, pastry.likes.users.length]",[1011,1020],[4194,4202],"[detail, pastry.length, pastry.message, pastry.pastryId.dislikes.users.length, pastry.pastryId.likes.users.length, pastry.quantity]",[273,279],"[setShow, show]",[888,897],[1632,1634],"[page, props]",[1477,1479],[1077,1086],[3022,3031],"[props, refresh, token]",[3891,3897],"[_bakers, text]",[2603,2612],[3180,3186],"[_users, text]",[2545,2570],"[isOpen, refresh, isEdit, user._id, page, props]",[3025,3031],"[_pastries, text]",[2829,2838],"[props, refresh, token, user._id]",[3279,3285],"[_orders, text]",[2173,2175],[2655,2661],"[pastry, text]",[2387,2396],"[rbakers, token]",[3414,3422],"[rusers, token]",[1668,1676],"[isOpen, user.categories]",[2837,2846],"[bakerId, props, refresh, token]",[3110,3118],"[_pastries, filter]",[3206,3212],[2737,2746],[2836,2842],[2739,2741],"[props, token]",[3225,3231],[1202,1210],"[_user.dislikes.users.length, _user.length, _user.likes.users.length, detail, props]",[1150,1158],"[detail, order.length, order.userId.dislikes.users.length, order.userId.likes.users.length, props]",[2561,2570],"[locations, props, refresh, user.email, user.location, user.name, user.telNumber]",[2133,2141],"[isOpen, pastry.description, pastry.discount, pastry.image, pastry.name, pastry.price, pastry.recipe, pastry.type, user.categories]",[4179,4181],"[_categories, locations, user.about, user.categories, user.companyName, user.email, user.location, user.momoName, user.momoNumber, user.name, user.telNumber]",[1758,1760],"[user.email, user.name, user.telNumber, user.type]"]